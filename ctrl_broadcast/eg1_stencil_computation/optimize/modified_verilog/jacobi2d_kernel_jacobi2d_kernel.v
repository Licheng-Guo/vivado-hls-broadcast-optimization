// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="jacobi2d_kernel_jacobi2d_kernel,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.430900,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=1376,HLS_SYN_DSP=5632,HLS_SYN_FF=1041993,HLS_SYN_LUT=596871,HLS_VERSION=2018_2}" *)

module jacobi2d_kernel_jacobi2d_kernel (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_chan0bank0_AWVALID,
        m_axi_chan0bank0_AWREADY,
        m_axi_chan0bank0_AWADDR,
        m_axi_chan0bank0_AWID,
        m_axi_chan0bank0_AWLEN,
        m_axi_chan0bank0_AWSIZE,
        m_axi_chan0bank0_AWBURST,
        m_axi_chan0bank0_AWLOCK,
        m_axi_chan0bank0_AWCACHE,
        m_axi_chan0bank0_AWPROT,
        m_axi_chan0bank0_AWQOS,
        m_axi_chan0bank0_AWREGION,
        m_axi_chan0bank0_AWUSER,
        m_axi_chan0bank0_WVALID,
        m_axi_chan0bank0_WREADY,
        m_axi_chan0bank0_WDATA,
        m_axi_chan0bank0_WSTRB,
        m_axi_chan0bank0_WLAST,
        m_axi_chan0bank0_WID,
        m_axi_chan0bank0_WUSER,
        m_axi_chan0bank0_ARVALID,
        m_axi_chan0bank0_ARREADY,
        m_axi_chan0bank0_ARADDR,
        m_axi_chan0bank0_ARID,
        m_axi_chan0bank0_ARLEN,
        m_axi_chan0bank0_ARSIZE,
        m_axi_chan0bank0_ARBURST,
        m_axi_chan0bank0_ARLOCK,
        m_axi_chan0bank0_ARCACHE,
        m_axi_chan0bank0_ARPROT,
        m_axi_chan0bank0_ARQOS,
        m_axi_chan0bank0_ARREGION,
        m_axi_chan0bank0_ARUSER,
        m_axi_chan0bank0_RVALID,
        m_axi_chan0bank0_RREADY,
        m_axi_chan0bank0_RDATA,
        m_axi_chan0bank0_RLAST,
        m_axi_chan0bank0_RID,
        m_axi_chan0bank0_RUSER,
        m_axi_chan0bank0_RRESP,
        m_axi_chan0bank0_BVALID,
        m_axi_chan0bank0_BREADY,
        m_axi_chan0bank0_BRESP,
        m_axi_chan0bank0_BID,
        m_axi_chan0bank0_BUSER,
        m_axi_chan0bank1_AWVALID,
        m_axi_chan0bank1_AWREADY,
        m_axi_chan0bank1_AWADDR,
        m_axi_chan0bank1_AWID,
        m_axi_chan0bank1_AWLEN,
        m_axi_chan0bank1_AWSIZE,
        m_axi_chan0bank1_AWBURST,
        m_axi_chan0bank1_AWLOCK,
        m_axi_chan0bank1_AWCACHE,
        m_axi_chan0bank1_AWPROT,
        m_axi_chan0bank1_AWQOS,
        m_axi_chan0bank1_AWREGION,
        m_axi_chan0bank1_AWUSER,
        m_axi_chan0bank1_WVALID,
        m_axi_chan0bank1_WREADY,
        m_axi_chan0bank1_WDATA,
        m_axi_chan0bank1_WSTRB,
        m_axi_chan0bank1_WLAST,
        m_axi_chan0bank1_WID,
        m_axi_chan0bank1_WUSER,
        m_axi_chan0bank1_ARVALID,
        m_axi_chan0bank1_ARREADY,
        m_axi_chan0bank1_ARADDR,
        m_axi_chan0bank1_ARID,
        m_axi_chan0bank1_ARLEN,
        m_axi_chan0bank1_ARSIZE,
        m_axi_chan0bank1_ARBURST,
        m_axi_chan0bank1_ARLOCK,
        m_axi_chan0bank1_ARCACHE,
        m_axi_chan0bank1_ARPROT,
        m_axi_chan0bank1_ARQOS,
        m_axi_chan0bank1_ARREGION,
        m_axi_chan0bank1_ARUSER,
        m_axi_chan0bank1_RVALID,
        m_axi_chan0bank1_RREADY,
        m_axi_chan0bank1_RDATA,
        m_axi_chan0bank1_RLAST,
        m_axi_chan0bank1_RID,
        m_axi_chan0bank1_RUSER,
        m_axi_chan0bank1_RRESP,
        m_axi_chan0bank1_BVALID,
        m_axi_chan0bank1_BREADY,
        m_axi_chan0bank1_BRESP,
        m_axi_chan0bank1_BID,
        m_axi_chan0bank1_BUSER,
        m_axi_chan0bank2_AWVALID,
        m_axi_chan0bank2_AWREADY,
        m_axi_chan0bank2_AWADDR,
        m_axi_chan0bank2_AWID,
        m_axi_chan0bank2_AWLEN,
        m_axi_chan0bank2_AWSIZE,
        m_axi_chan0bank2_AWBURST,
        m_axi_chan0bank2_AWLOCK,
        m_axi_chan0bank2_AWCACHE,
        m_axi_chan0bank2_AWPROT,
        m_axi_chan0bank2_AWQOS,
        m_axi_chan0bank2_AWREGION,
        m_axi_chan0bank2_AWUSER,
        m_axi_chan0bank2_WVALID,
        m_axi_chan0bank2_WREADY,
        m_axi_chan0bank2_WDATA,
        m_axi_chan0bank2_WSTRB,
        m_axi_chan0bank2_WLAST,
        m_axi_chan0bank2_WID,
        m_axi_chan0bank2_WUSER,
        m_axi_chan0bank2_ARVALID,
        m_axi_chan0bank2_ARREADY,
        m_axi_chan0bank2_ARADDR,
        m_axi_chan0bank2_ARID,
        m_axi_chan0bank2_ARLEN,
        m_axi_chan0bank2_ARSIZE,
        m_axi_chan0bank2_ARBURST,
        m_axi_chan0bank2_ARLOCK,
        m_axi_chan0bank2_ARCACHE,
        m_axi_chan0bank2_ARPROT,
        m_axi_chan0bank2_ARQOS,
        m_axi_chan0bank2_ARREGION,
        m_axi_chan0bank2_ARUSER,
        m_axi_chan0bank2_RVALID,
        m_axi_chan0bank2_RREADY,
        m_axi_chan0bank2_RDATA,
        m_axi_chan0bank2_RLAST,
        m_axi_chan0bank2_RID,
        m_axi_chan0bank2_RUSER,
        m_axi_chan0bank2_RRESP,
        m_axi_chan0bank2_BVALID,
        m_axi_chan0bank2_BREADY,
        m_axi_chan0bank2_BRESP,
        m_axi_chan0bank2_BID,
        m_axi_chan0bank2_BUSER,
        m_axi_chan0bank3_AWVALID,
        m_axi_chan0bank3_AWREADY,
        m_axi_chan0bank3_AWADDR,
        m_axi_chan0bank3_AWID,
        m_axi_chan0bank3_AWLEN,
        m_axi_chan0bank3_AWSIZE,
        m_axi_chan0bank3_AWBURST,
        m_axi_chan0bank3_AWLOCK,
        m_axi_chan0bank3_AWCACHE,
        m_axi_chan0bank3_AWPROT,
        m_axi_chan0bank3_AWQOS,
        m_axi_chan0bank3_AWREGION,
        m_axi_chan0bank3_AWUSER,
        m_axi_chan0bank3_WVALID,
        m_axi_chan0bank3_WREADY,
        m_axi_chan0bank3_WDATA,
        m_axi_chan0bank3_WSTRB,
        m_axi_chan0bank3_WLAST,
        m_axi_chan0bank3_WID,
        m_axi_chan0bank3_WUSER,
        m_axi_chan0bank3_ARVALID,
        m_axi_chan0bank3_ARREADY,
        m_axi_chan0bank3_ARADDR,
        m_axi_chan0bank3_ARID,
        m_axi_chan0bank3_ARLEN,
        m_axi_chan0bank3_ARSIZE,
        m_axi_chan0bank3_ARBURST,
        m_axi_chan0bank3_ARLOCK,
        m_axi_chan0bank3_ARCACHE,
        m_axi_chan0bank3_ARPROT,
        m_axi_chan0bank3_ARQOS,
        m_axi_chan0bank3_ARREGION,
        m_axi_chan0bank3_ARUSER,
        m_axi_chan0bank3_RVALID,
        m_axi_chan0bank3_RREADY,
        m_axi_chan0bank3_RDATA,
        m_axi_chan0bank3_RLAST,
        m_axi_chan0bank3_RID,
        m_axi_chan0bank3_RUSER,
        m_axi_chan0bank3_RRESP,
        m_axi_chan0bank3_BVALID,
        m_axi_chan0bank3_BREADY,
        m_axi_chan0bank3_BRESP,
        m_axi_chan0bank3_BID,
        m_axi_chan0bank3_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_CHAN0BANK0_ID_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_ADDR_WIDTH = 32;
parameter    C_M_AXI_CHAN0BANK0_DATA_WIDTH = 512;
parameter    C_M_AXI_CHAN0BANK0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_WUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_RUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_BUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK0_USER_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK0_PROT_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK0_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_ID_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_ADDR_WIDTH = 32;
parameter    C_M_AXI_CHAN0BANK1_DATA_WIDTH = 512;
parameter    C_M_AXI_CHAN0BANK1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_WUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_RUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_BUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK1_USER_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK1_PROT_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK1_CACHE_VALUE = 3;
parameter    C_M_AXI_CHAN0BANK2_ID_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_ADDR_WIDTH = 32;
parameter    C_M_AXI_CHAN0BANK2_DATA_WIDTH = 512;
parameter    C_M_AXI_CHAN0BANK2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_WUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_RUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_BUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK2_USER_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK2_PROT_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK2_CACHE_VALUE = 3;
parameter    C_M_AXI_CHAN0BANK3_ID_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_ADDR_WIDTH = 32;
parameter    C_M_AXI_CHAN0BANK3_DATA_WIDTH = 512;
parameter    C_M_AXI_CHAN0BANK3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_WUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_RUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_BUSER_WIDTH = 1;
parameter    C_M_AXI_CHAN0BANK3_USER_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK3_PROT_VALUE = 0;
parameter    C_M_AXI_CHAN0BANK3_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CHAN0BANK0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CHAN0BANK1_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_CHAN0BANK2_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_CHAN0BANK3_WSTRB_WIDTH = (512 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_chan0bank0_AWVALID;
input   m_axi_chan0bank0_AWREADY;
output  [C_M_AXI_CHAN0BANK0_ADDR_WIDTH - 1:0] m_axi_chan0bank0_AWADDR;
output  [C_M_AXI_CHAN0BANK0_ID_WIDTH - 1:0] m_axi_chan0bank0_AWID;
output  [7:0] m_axi_chan0bank0_AWLEN;
output  [2:0] m_axi_chan0bank0_AWSIZE;
output  [1:0] m_axi_chan0bank0_AWBURST;
output  [1:0] m_axi_chan0bank0_AWLOCK;
output  [3:0] m_axi_chan0bank0_AWCACHE;
output  [2:0] m_axi_chan0bank0_AWPROT;
output  [3:0] m_axi_chan0bank0_AWQOS;
output  [3:0] m_axi_chan0bank0_AWREGION;
output  [C_M_AXI_CHAN0BANK0_AWUSER_WIDTH - 1:0] m_axi_chan0bank0_AWUSER;
output   m_axi_chan0bank0_WVALID;
input   m_axi_chan0bank0_WREADY;
output  [C_M_AXI_CHAN0BANK0_DATA_WIDTH - 1:0] m_axi_chan0bank0_WDATA;
output  [C_M_AXI_CHAN0BANK0_WSTRB_WIDTH - 1:0] m_axi_chan0bank0_WSTRB;
output   m_axi_chan0bank0_WLAST;
output  [C_M_AXI_CHAN0BANK0_ID_WIDTH - 1:0] m_axi_chan0bank0_WID;
output  [C_M_AXI_CHAN0BANK0_WUSER_WIDTH - 1:0] m_axi_chan0bank0_WUSER;
output   m_axi_chan0bank0_ARVALID;
input   m_axi_chan0bank0_ARREADY;
output  [C_M_AXI_CHAN0BANK0_ADDR_WIDTH - 1:0] m_axi_chan0bank0_ARADDR;
output  [C_M_AXI_CHAN0BANK0_ID_WIDTH - 1:0] m_axi_chan0bank0_ARID;
output  [7:0] m_axi_chan0bank0_ARLEN;
output  [2:0] m_axi_chan0bank0_ARSIZE;
output  [1:0] m_axi_chan0bank0_ARBURST;
output  [1:0] m_axi_chan0bank0_ARLOCK;
output  [3:0] m_axi_chan0bank0_ARCACHE;
output  [2:0] m_axi_chan0bank0_ARPROT;
output  [3:0] m_axi_chan0bank0_ARQOS;
output  [3:0] m_axi_chan0bank0_ARREGION;
output  [C_M_AXI_CHAN0BANK0_ARUSER_WIDTH - 1:0] m_axi_chan0bank0_ARUSER;
input   m_axi_chan0bank0_RVALID;
output   m_axi_chan0bank0_RREADY;
input  [C_M_AXI_CHAN0BANK0_DATA_WIDTH - 1:0] m_axi_chan0bank0_RDATA;
input   m_axi_chan0bank0_RLAST;
input  [C_M_AXI_CHAN0BANK0_ID_WIDTH - 1:0] m_axi_chan0bank0_RID;
input  [C_M_AXI_CHAN0BANK0_RUSER_WIDTH - 1:0] m_axi_chan0bank0_RUSER;
input  [1:0] m_axi_chan0bank0_RRESP;
input   m_axi_chan0bank0_BVALID;
output   m_axi_chan0bank0_BREADY;
input  [1:0] m_axi_chan0bank0_BRESP;
input  [C_M_AXI_CHAN0BANK0_ID_WIDTH - 1:0] m_axi_chan0bank0_BID;
input  [C_M_AXI_CHAN0BANK0_BUSER_WIDTH - 1:0] m_axi_chan0bank0_BUSER;
output   m_axi_chan0bank1_AWVALID;
input   m_axi_chan0bank1_AWREADY;
output  [C_M_AXI_CHAN0BANK1_ADDR_WIDTH - 1:0] m_axi_chan0bank1_AWADDR;
output  [C_M_AXI_CHAN0BANK1_ID_WIDTH - 1:0] m_axi_chan0bank1_AWID;
output  [7:0] m_axi_chan0bank1_AWLEN;
output  [2:0] m_axi_chan0bank1_AWSIZE;
output  [1:0] m_axi_chan0bank1_AWBURST;
output  [1:0] m_axi_chan0bank1_AWLOCK;
output  [3:0] m_axi_chan0bank1_AWCACHE;
output  [2:0] m_axi_chan0bank1_AWPROT;
output  [3:0] m_axi_chan0bank1_AWQOS;
output  [3:0] m_axi_chan0bank1_AWREGION;
output  [C_M_AXI_CHAN0BANK1_AWUSER_WIDTH - 1:0] m_axi_chan0bank1_AWUSER;
output   m_axi_chan0bank1_WVALID;
input   m_axi_chan0bank1_WREADY;
output  [C_M_AXI_CHAN0BANK1_DATA_WIDTH - 1:0] m_axi_chan0bank1_WDATA;
output  [C_M_AXI_CHAN0BANK1_WSTRB_WIDTH - 1:0] m_axi_chan0bank1_WSTRB;
output   m_axi_chan0bank1_WLAST;
output  [C_M_AXI_CHAN0BANK1_ID_WIDTH - 1:0] m_axi_chan0bank1_WID;
output  [C_M_AXI_CHAN0BANK1_WUSER_WIDTH - 1:0] m_axi_chan0bank1_WUSER;
output   m_axi_chan0bank1_ARVALID;
input   m_axi_chan0bank1_ARREADY;
output  [C_M_AXI_CHAN0BANK1_ADDR_WIDTH - 1:0] m_axi_chan0bank1_ARADDR;
output  [C_M_AXI_CHAN0BANK1_ID_WIDTH - 1:0] m_axi_chan0bank1_ARID;
output  [7:0] m_axi_chan0bank1_ARLEN;
output  [2:0] m_axi_chan0bank1_ARSIZE;
output  [1:0] m_axi_chan0bank1_ARBURST;
output  [1:0] m_axi_chan0bank1_ARLOCK;
output  [3:0] m_axi_chan0bank1_ARCACHE;
output  [2:0] m_axi_chan0bank1_ARPROT;
output  [3:0] m_axi_chan0bank1_ARQOS;
output  [3:0] m_axi_chan0bank1_ARREGION;
output  [C_M_AXI_CHAN0BANK1_ARUSER_WIDTH - 1:0] m_axi_chan0bank1_ARUSER;
input   m_axi_chan0bank1_RVALID;
output   m_axi_chan0bank1_RREADY;
input  [C_M_AXI_CHAN0BANK1_DATA_WIDTH - 1:0] m_axi_chan0bank1_RDATA;
input   m_axi_chan0bank1_RLAST;
input  [C_M_AXI_CHAN0BANK1_ID_WIDTH - 1:0] m_axi_chan0bank1_RID;
input  [C_M_AXI_CHAN0BANK1_RUSER_WIDTH - 1:0] m_axi_chan0bank1_RUSER;
input  [1:0] m_axi_chan0bank1_RRESP;
input   m_axi_chan0bank1_BVALID;
output   m_axi_chan0bank1_BREADY;
input  [1:0] m_axi_chan0bank1_BRESP;
input  [C_M_AXI_CHAN0BANK1_ID_WIDTH - 1:0] m_axi_chan0bank1_BID;
input  [C_M_AXI_CHAN0BANK1_BUSER_WIDTH - 1:0] m_axi_chan0bank1_BUSER;
output   m_axi_chan0bank2_AWVALID;
input   m_axi_chan0bank2_AWREADY;
output  [C_M_AXI_CHAN0BANK2_ADDR_WIDTH - 1:0] m_axi_chan0bank2_AWADDR;
output  [C_M_AXI_CHAN0BANK2_ID_WIDTH - 1:0] m_axi_chan0bank2_AWID;
output  [7:0] m_axi_chan0bank2_AWLEN;
output  [2:0] m_axi_chan0bank2_AWSIZE;
output  [1:0] m_axi_chan0bank2_AWBURST;
output  [1:0] m_axi_chan0bank2_AWLOCK;
output  [3:0] m_axi_chan0bank2_AWCACHE;
output  [2:0] m_axi_chan0bank2_AWPROT;
output  [3:0] m_axi_chan0bank2_AWQOS;
output  [3:0] m_axi_chan0bank2_AWREGION;
output  [C_M_AXI_CHAN0BANK2_AWUSER_WIDTH - 1:0] m_axi_chan0bank2_AWUSER;
output   m_axi_chan0bank2_WVALID;
input   m_axi_chan0bank2_WREADY;
output  [C_M_AXI_CHAN0BANK2_DATA_WIDTH - 1:0] m_axi_chan0bank2_WDATA;
output  [C_M_AXI_CHAN0BANK2_WSTRB_WIDTH - 1:0] m_axi_chan0bank2_WSTRB;
output   m_axi_chan0bank2_WLAST;
output  [C_M_AXI_CHAN0BANK2_ID_WIDTH - 1:0] m_axi_chan0bank2_WID;
output  [C_M_AXI_CHAN0BANK2_WUSER_WIDTH - 1:0] m_axi_chan0bank2_WUSER;
output   m_axi_chan0bank2_ARVALID;
input   m_axi_chan0bank2_ARREADY;
output  [C_M_AXI_CHAN0BANK2_ADDR_WIDTH - 1:0] m_axi_chan0bank2_ARADDR;
output  [C_M_AXI_CHAN0BANK2_ID_WIDTH - 1:0] m_axi_chan0bank2_ARID;
output  [7:0] m_axi_chan0bank2_ARLEN;
output  [2:0] m_axi_chan0bank2_ARSIZE;
output  [1:0] m_axi_chan0bank2_ARBURST;
output  [1:0] m_axi_chan0bank2_ARLOCK;
output  [3:0] m_axi_chan0bank2_ARCACHE;
output  [2:0] m_axi_chan0bank2_ARPROT;
output  [3:0] m_axi_chan0bank2_ARQOS;
output  [3:0] m_axi_chan0bank2_ARREGION;
output  [C_M_AXI_CHAN0BANK2_ARUSER_WIDTH - 1:0] m_axi_chan0bank2_ARUSER;
input   m_axi_chan0bank2_RVALID;
output   m_axi_chan0bank2_RREADY;
input  [C_M_AXI_CHAN0BANK2_DATA_WIDTH - 1:0] m_axi_chan0bank2_RDATA;
input   m_axi_chan0bank2_RLAST;
input  [C_M_AXI_CHAN0BANK2_ID_WIDTH - 1:0] m_axi_chan0bank2_RID;
input  [C_M_AXI_CHAN0BANK2_RUSER_WIDTH - 1:0] m_axi_chan0bank2_RUSER;
input  [1:0] m_axi_chan0bank2_RRESP;
input   m_axi_chan0bank2_BVALID;
output   m_axi_chan0bank2_BREADY;
input  [1:0] m_axi_chan0bank2_BRESP;
input  [C_M_AXI_CHAN0BANK2_ID_WIDTH - 1:0] m_axi_chan0bank2_BID;
input  [C_M_AXI_CHAN0BANK2_BUSER_WIDTH - 1:0] m_axi_chan0bank2_BUSER;
output   m_axi_chan0bank3_AWVALID;
input   m_axi_chan0bank3_AWREADY;
output  [C_M_AXI_CHAN0BANK3_ADDR_WIDTH - 1:0] m_axi_chan0bank3_AWADDR;
output  [C_M_AXI_CHAN0BANK3_ID_WIDTH - 1:0] m_axi_chan0bank3_AWID;
output  [7:0] m_axi_chan0bank3_AWLEN;
output  [2:0] m_axi_chan0bank3_AWSIZE;
output  [1:0] m_axi_chan0bank3_AWBURST;
output  [1:0] m_axi_chan0bank3_AWLOCK;
output  [3:0] m_axi_chan0bank3_AWCACHE;
output  [2:0] m_axi_chan0bank3_AWPROT;
output  [3:0] m_axi_chan0bank3_AWQOS;
output  [3:0] m_axi_chan0bank3_AWREGION;
output  [C_M_AXI_CHAN0BANK3_AWUSER_WIDTH - 1:0] m_axi_chan0bank3_AWUSER;
output   m_axi_chan0bank3_WVALID;
input   m_axi_chan0bank3_WREADY;
output  [C_M_AXI_CHAN0BANK3_DATA_WIDTH - 1:0] m_axi_chan0bank3_WDATA;
output  [C_M_AXI_CHAN0BANK3_WSTRB_WIDTH - 1:0] m_axi_chan0bank3_WSTRB;
output   m_axi_chan0bank3_WLAST;
output  [C_M_AXI_CHAN0BANK3_ID_WIDTH - 1:0] m_axi_chan0bank3_WID;
output  [C_M_AXI_CHAN0BANK3_WUSER_WIDTH - 1:0] m_axi_chan0bank3_WUSER;
output   m_axi_chan0bank3_ARVALID;
input   m_axi_chan0bank3_ARREADY;
output  [C_M_AXI_CHAN0BANK3_ADDR_WIDTH - 1:0] m_axi_chan0bank3_ARADDR;
output  [C_M_AXI_CHAN0BANK3_ID_WIDTH - 1:0] m_axi_chan0bank3_ARID;
output  [7:0] m_axi_chan0bank3_ARLEN;
output  [2:0] m_axi_chan0bank3_ARSIZE;
output  [1:0] m_axi_chan0bank3_ARBURST;
output  [1:0] m_axi_chan0bank3_ARLOCK;
output  [3:0] m_axi_chan0bank3_ARCACHE;
output  [2:0] m_axi_chan0bank3_ARPROT;
output  [3:0] m_axi_chan0bank3_ARQOS;
output  [3:0] m_axi_chan0bank3_ARREGION;
output  [C_M_AXI_CHAN0BANK3_ARUSER_WIDTH - 1:0] m_axi_chan0bank3_ARUSER;
input   m_axi_chan0bank3_RVALID;
output   m_axi_chan0bank3_RREADY;
input  [C_M_AXI_CHAN0BANK3_DATA_WIDTH - 1:0] m_axi_chan0bank3_RDATA;
input   m_axi_chan0bank3_RLAST;
input  [C_M_AXI_CHAN0BANK3_ID_WIDTH - 1:0] m_axi_chan0bank3_RID;
input  [C_M_AXI_CHAN0BANK3_RUSER_WIDTH - 1:0] m_axi_chan0bank3_RUSER;
input  [1:0] m_axi_chan0bank3_RRESP;
input   m_axi_chan0bank3_BVALID;
output   m_axi_chan0bank3_BREADY;
input  [1:0] m_axi_chan0bank3_BRESP;
input  [C_M_AXI_CHAN0BANK3_ID_WIDTH - 1:0] m_axi_chan0bank3_BID;
input  [C_M_AXI_CHAN0BANK3_BUSER_WIDTH - 1:0] m_axi_chan0bank3_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] var_output_0_0_V;
wire   [31:0] var_output_0_1_V;
wire   [31:0] var_output_0_2_V;
wire   [31:0] var_output_0_3_V;
wire   [31:0] var_input_0_0_V;
wire   [31:0] var_input_0_1_V;
wire   [31:0] var_input_0_2_V;
wire   [31:0] var_input_0_3_V;
wire   [63:0] coalesced_data_num;
wire   [63:0] tile_data_num;
wire   [31:0] tile_num_dim_0;
wire   [31:0] input_size_dim_0;
wire   [31:0] input_size_dim_1;
wire    chan0bank0_AWREADY;
wire    chan0bank0_WREADY;
wire    chan0bank0_ARREADY;
wire    chan0bank0_RVALID;
wire   [511:0] chan0bank0_RDATA;
wire    chan0bank0_RLAST;
wire   [0:0] chan0bank0_RID;
wire   [0:0] chan0bank0_RUSER;
wire   [1:0] chan0bank0_RRESP;
wire    chan0bank0_BVALID;
wire   [1:0] chan0bank0_BRESP;
wire   [0:0] chan0bank0_BID;
wire   [0:0] chan0bank0_BUSER;
wire    chan0bank1_AWREADY;
wire    chan0bank1_WREADY;
wire    chan0bank1_ARREADY;
wire    chan0bank1_RVALID;
wire   [511:0] chan0bank1_RDATA;
wire    chan0bank1_RLAST;
wire   [0:0] chan0bank1_RID;
wire   [0:0] chan0bank1_RUSER;
wire   [1:0] chan0bank1_RRESP;
wire    chan0bank1_BVALID;
wire   [1:0] chan0bank1_BRESP;
wire   [0:0] chan0bank1_BID;
wire   [0:0] chan0bank1_BUSER;
wire    chan0bank2_AWREADY;
wire    chan0bank2_WREADY;
wire    chan0bank2_ARREADY;
wire    chan0bank2_RVALID;
wire   [511:0] chan0bank2_RDATA;
wire    chan0bank2_RLAST;
wire   [0:0] chan0bank2_RID;
wire   [0:0] chan0bank2_RUSER;
wire   [1:0] chan0bank2_RRESP;
wire    chan0bank2_BVALID;
wire   [1:0] chan0bank2_BRESP;
wire   [0:0] chan0bank2_BID;
wire   [0:0] chan0bank2_BUSER;
wire    chan0bank3_AWREADY;
wire    chan0bank3_WREADY;
wire    chan0bank3_ARREADY;
wire    chan0bank3_RVALID;
wire   [511:0] chan0bank3_RDATA;
wire    chan0bank3_RLAST;
wire   [0:0] chan0bank3_RID;
wire   [0:0] chan0bank3_RUSER;
wire   [1:0] chan0bank3_RRESP;
wire    chan0bank3_BVALID;
wire   [1:0] chan0bank3_BRESP;
wire   [0:0] chan0bank3_BID;
wire   [0:0] chan0bank3_BUSER;
wire    jacobi2d_kernel_entry118311_U0_ap_start;
wire    jacobi2d_kernel_entry118311_U0_start_full_n;
wire    jacobi2d_kernel_entry118311_U0_ap_done;
wire    jacobi2d_kernel_entry118311_U0_ap_continue;
wire    jacobi2d_kernel_entry118311_U0_ap_idle;
wire    jacobi2d_kernel_entry118311_U0_ap_ready;
wire    jacobi2d_kernel_entry118311_U0_start_out;
wire    jacobi2d_kernel_entry118311_U0_start_write;
wire   [63:0] jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_din;
wire    jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_write;
wire   [63:0] jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_din;
wire    jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_write;
wire   [63:0] jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_din;
wire    jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_write;
wire   [63:0] jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_din;
wire    jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_write;
wire   [31:0] jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_din;
wire    jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_write;
wire    load35_U0_ap_start;
wire    load35_U0_ap_done;
wire    load35_U0_ap_continue;
wire    load35_U0_ap_idle;
wire    load35_U0_ap_ready;
wire    load35_U0_start_out;
wire    load35_U0_start_write;
wire   [511:0] load35_U0_input_stream_0_0_V_V_din;
wire    load35_U0_input_stream_0_0_V_V_write;
wire    load35_U0_m_axi_var_input_0_0_V_AWVALID;
wire   [31:0] load35_U0_m_axi_var_input_0_0_V_AWADDR;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_AWID;
wire   [31:0] load35_U0_m_axi_var_input_0_0_V_AWLEN;
wire   [2:0] load35_U0_m_axi_var_input_0_0_V_AWSIZE;
wire   [1:0] load35_U0_m_axi_var_input_0_0_V_AWBURST;
wire   [1:0] load35_U0_m_axi_var_input_0_0_V_AWLOCK;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_AWCACHE;
wire   [2:0] load35_U0_m_axi_var_input_0_0_V_AWPROT;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_AWQOS;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_AWREGION;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_AWUSER;
wire    load35_U0_m_axi_var_input_0_0_V_WVALID;
wire   [511:0] load35_U0_m_axi_var_input_0_0_V_WDATA;
wire   [63:0] load35_U0_m_axi_var_input_0_0_V_WSTRB;
wire    load35_U0_m_axi_var_input_0_0_V_WLAST;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_WID;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_WUSER;
wire    load35_U0_m_axi_var_input_0_0_V_ARVALID;
wire   [31:0] load35_U0_m_axi_var_input_0_0_V_ARADDR;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_ARID;
wire   [31:0] load35_U0_m_axi_var_input_0_0_V_ARLEN;
wire   [2:0] load35_U0_m_axi_var_input_0_0_V_ARSIZE;
wire   [1:0] load35_U0_m_axi_var_input_0_0_V_ARBURST;
wire   [1:0] load35_U0_m_axi_var_input_0_0_V_ARLOCK;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_ARCACHE;
wire   [2:0] load35_U0_m_axi_var_input_0_0_V_ARPROT;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_ARQOS;
wire   [3:0] load35_U0_m_axi_var_input_0_0_V_ARREGION;
wire   [0:0] load35_U0_m_axi_var_input_0_0_V_ARUSER;
wire    load35_U0_m_axi_var_input_0_0_V_RREADY;
wire    load35_U0_m_axi_var_input_0_0_V_BREADY;
wire    load35_U0_var_input_0_0_V_offset_read;
wire    load35_U0_coalesced_data_num_read;
wire   [63:0] load35_U0_coalesced_data_num_out_din;
wire    load35_U0_coalesced_data_num_out_write;
wire    load36_U0_ap_start;
wire    load36_U0_ap_done;
wire    load36_U0_ap_continue;
wire    load36_U0_ap_idle;
wire    load36_U0_ap_ready;
wire   [511:0] load36_U0_input_stream_0_1_V_V_din;
wire    load36_U0_input_stream_0_1_V_V_write;
wire    load36_U0_m_axi_var_input_0_1_V_AWVALID;
wire   [31:0] load36_U0_m_axi_var_input_0_1_V_AWADDR;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_AWID;
wire   [31:0] load36_U0_m_axi_var_input_0_1_V_AWLEN;
wire   [2:0] load36_U0_m_axi_var_input_0_1_V_AWSIZE;
wire   [1:0] load36_U0_m_axi_var_input_0_1_V_AWBURST;
wire   [1:0] load36_U0_m_axi_var_input_0_1_V_AWLOCK;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_AWCACHE;
wire   [2:0] load36_U0_m_axi_var_input_0_1_V_AWPROT;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_AWQOS;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_AWREGION;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_AWUSER;
wire    load36_U0_m_axi_var_input_0_1_V_WVALID;
wire   [511:0] load36_U0_m_axi_var_input_0_1_V_WDATA;
wire   [63:0] load36_U0_m_axi_var_input_0_1_V_WSTRB;
wire    load36_U0_m_axi_var_input_0_1_V_WLAST;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_WID;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_WUSER;
wire    load36_U0_m_axi_var_input_0_1_V_ARVALID;
wire   [31:0] load36_U0_m_axi_var_input_0_1_V_ARADDR;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_ARID;
wire   [31:0] load36_U0_m_axi_var_input_0_1_V_ARLEN;
wire   [2:0] load36_U0_m_axi_var_input_0_1_V_ARSIZE;
wire   [1:0] load36_U0_m_axi_var_input_0_1_V_ARBURST;
wire   [1:0] load36_U0_m_axi_var_input_0_1_V_ARLOCK;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_ARCACHE;
wire   [2:0] load36_U0_m_axi_var_input_0_1_V_ARPROT;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_ARQOS;
wire   [3:0] load36_U0_m_axi_var_input_0_1_V_ARREGION;
wire   [0:0] load36_U0_m_axi_var_input_0_1_V_ARUSER;
wire    load36_U0_m_axi_var_input_0_1_V_RREADY;
wire    load36_U0_m_axi_var_input_0_1_V_BREADY;
wire    load36_U0_var_input_0_1_V_offset_read;
wire    load36_U0_coalesced_data_num_read;
wire    load37_U0_ap_start;
wire    load37_U0_ap_done;
wire    load37_U0_ap_continue;
wire    load37_U0_ap_idle;
wire    load37_U0_ap_ready;
wire   [511:0] load37_U0_input_stream_0_2_V_V_din;
wire    load37_U0_input_stream_0_2_V_V_write;
wire    load37_U0_m_axi_var_input_0_2_V_AWVALID;
wire   [31:0] load37_U0_m_axi_var_input_0_2_V_AWADDR;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_AWID;
wire   [31:0] load37_U0_m_axi_var_input_0_2_V_AWLEN;
wire   [2:0] load37_U0_m_axi_var_input_0_2_V_AWSIZE;
wire   [1:0] load37_U0_m_axi_var_input_0_2_V_AWBURST;
wire   [1:0] load37_U0_m_axi_var_input_0_2_V_AWLOCK;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_AWCACHE;
wire   [2:0] load37_U0_m_axi_var_input_0_2_V_AWPROT;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_AWQOS;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_AWREGION;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_AWUSER;
wire    load37_U0_m_axi_var_input_0_2_V_WVALID;
wire   [511:0] load37_U0_m_axi_var_input_0_2_V_WDATA;
wire   [63:0] load37_U0_m_axi_var_input_0_2_V_WSTRB;
wire    load37_U0_m_axi_var_input_0_2_V_WLAST;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_WID;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_WUSER;
wire    load37_U0_m_axi_var_input_0_2_V_ARVALID;
wire   [31:0] load37_U0_m_axi_var_input_0_2_V_ARADDR;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_ARID;
wire   [31:0] load37_U0_m_axi_var_input_0_2_V_ARLEN;
wire   [2:0] load37_U0_m_axi_var_input_0_2_V_ARSIZE;
wire   [1:0] load37_U0_m_axi_var_input_0_2_V_ARBURST;
wire   [1:0] load37_U0_m_axi_var_input_0_2_V_ARLOCK;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_ARCACHE;
wire   [2:0] load37_U0_m_axi_var_input_0_2_V_ARPROT;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_ARQOS;
wire   [3:0] load37_U0_m_axi_var_input_0_2_V_ARREGION;
wire   [0:0] load37_U0_m_axi_var_input_0_2_V_ARUSER;
wire    load37_U0_m_axi_var_input_0_2_V_RREADY;
wire    load37_U0_m_axi_var_input_0_2_V_BREADY;
wire    load37_U0_var_input_0_2_V_offset_read;
wire    load37_U0_coalesced_data_num_read;
wire    load_U0_ap_start;
wire    load_U0_ap_done;
wire    load_U0_ap_continue;
wire    load_U0_ap_idle;
wire    load_U0_ap_ready;
wire   [511:0] load_U0_to_V_V_din;
wire    load_U0_to_V_V_write;
wire    load_U0_m_axi_from_V_AWVALID;
wire   [31:0] load_U0_m_axi_from_V_AWADDR;
wire   [0:0] load_U0_m_axi_from_V_AWID;
wire   [31:0] load_U0_m_axi_from_V_AWLEN;
wire   [2:0] load_U0_m_axi_from_V_AWSIZE;
wire   [1:0] load_U0_m_axi_from_V_AWBURST;
wire   [1:0] load_U0_m_axi_from_V_AWLOCK;
wire   [3:0] load_U0_m_axi_from_V_AWCACHE;
wire   [2:0] load_U0_m_axi_from_V_AWPROT;
wire   [3:0] load_U0_m_axi_from_V_AWQOS;
wire   [3:0] load_U0_m_axi_from_V_AWREGION;
wire   [0:0] load_U0_m_axi_from_V_AWUSER;
wire    load_U0_m_axi_from_V_WVALID;
wire   [511:0] load_U0_m_axi_from_V_WDATA;
wire   [63:0] load_U0_m_axi_from_V_WSTRB;
wire    load_U0_m_axi_from_V_WLAST;
wire   [0:0] load_U0_m_axi_from_V_WID;
wire   [0:0] load_U0_m_axi_from_V_WUSER;
wire    load_U0_m_axi_from_V_ARVALID;
wire   [31:0] load_U0_m_axi_from_V_ARADDR;
wire   [0:0] load_U0_m_axi_from_V_ARID;
wire   [31:0] load_U0_m_axi_from_V_ARLEN;
wire   [2:0] load_U0_m_axi_from_V_ARSIZE;
wire   [1:0] load_U0_m_axi_from_V_ARBURST;
wire   [1:0] load_U0_m_axi_from_V_ARLOCK;
wire   [3:0] load_U0_m_axi_from_V_ARCACHE;
wire   [2:0] load_U0_m_axi_from_V_ARPROT;
wire   [3:0] load_U0_m_axi_from_V_ARQOS;
wire   [3:0] load_U0_m_axi_from_V_ARREGION;
wire   [0:0] load_U0_m_axi_from_V_ARUSER;
wire    load_U0_m_axi_from_V_RREADY;
wire    load_U0_m_axi_from_V_BREADY;
wire    load_U0_from_V_offset_read;
wire    load_U0_coalesced_data_num_read;
wire    compute_U0_ap_start;
wire    compute_U0_ap_done;
wire    compute_U0_ap_continue;
wire    compute_U0_ap_idle;
wire    compute_U0_ap_ready;
wire   [511:0] compute_U0_to_chan_0_bank_0_V_V_din;
wire    compute_U0_to_chan_0_bank_0_V_V_write;
wire   [511:0] compute_U0_to_chan_0_bank_1_V_V_din;
wire    compute_U0_to_chan_0_bank_1_V_V_write;
wire   [511:0] compute_U0_to_chan_0_bank_2_V_V_din;
wire    compute_U0_to_chan_0_bank_2_V_V_write;
wire   [511:0] compute_U0_to_chan_0_bank_3_V_V_din;
wire    compute_U0_to_chan_0_bank_3_V_V_write;
wire    compute_U0_from_chan_0_bank_0_V_V_read;
wire    compute_U0_from_chan_0_bank_1_V_V_read;
wire    compute_U0_from_chan_0_bank_2_V_V_read;
wire    compute_U0_from_chan_0_bank_3_V_V_read;
wire    compute_U0_coalesced_data_num_read;
wire   [63:0] compute_U0_coalesced_data_num_out_din;
wire    compute_U0_coalesced_data_num_out_write;
wire   [63:0] compute_U0_coalesced_data_num_out1_din;
wire    compute_U0_coalesced_data_num_out1_write;
wire   [63:0] compute_U0_coalesced_data_num_out2_din;
wire    compute_U0_coalesced_data_num_out2_write;
wire   [63:0] compute_U0_coalesced_data_num_out3_din;
wire    compute_U0_coalesced_data_num_out3_write;
wire    store38_U0_ap_start;
wire    store38_U0_ap_done;
wire    store38_U0_ap_continue;
wire    store38_U0_ap_idle;
wire    store38_U0_ap_ready;
wire    store38_U0_m_axi_var_output_0_0_V_AWVALID;
wire   [31:0] store38_U0_m_axi_var_output_0_0_V_AWADDR;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_AWID;
wire   [31:0] store38_U0_m_axi_var_output_0_0_V_AWLEN;
wire   [2:0] store38_U0_m_axi_var_output_0_0_V_AWSIZE;
wire   [1:0] store38_U0_m_axi_var_output_0_0_V_AWBURST;
wire   [1:0] store38_U0_m_axi_var_output_0_0_V_AWLOCK;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_AWCACHE;
wire   [2:0] store38_U0_m_axi_var_output_0_0_V_AWPROT;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_AWQOS;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_AWREGION;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_AWUSER;
wire    store38_U0_m_axi_var_output_0_0_V_WVALID;
wire   [511:0] store38_U0_m_axi_var_output_0_0_V_WDATA;
wire   [63:0] store38_U0_m_axi_var_output_0_0_V_WSTRB;
wire    store38_U0_m_axi_var_output_0_0_V_WLAST;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_WID;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_WUSER;
wire    store38_U0_m_axi_var_output_0_0_V_ARVALID;
wire   [31:0] store38_U0_m_axi_var_output_0_0_V_ARADDR;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_ARID;
wire   [31:0] store38_U0_m_axi_var_output_0_0_V_ARLEN;
wire   [2:0] store38_U0_m_axi_var_output_0_0_V_ARSIZE;
wire   [1:0] store38_U0_m_axi_var_output_0_0_V_ARBURST;
wire   [1:0] store38_U0_m_axi_var_output_0_0_V_ARLOCK;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_ARCACHE;
wire   [2:0] store38_U0_m_axi_var_output_0_0_V_ARPROT;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_ARQOS;
wire   [3:0] store38_U0_m_axi_var_output_0_0_V_ARREGION;
wire   [0:0] store38_U0_m_axi_var_output_0_0_V_ARUSER;
wire    store38_U0_m_axi_var_output_0_0_V_RREADY;
wire    store38_U0_m_axi_var_output_0_0_V_BREADY;
wire    store38_U0_var_output_0_0_V_offset_read;
wire    store38_U0_output_stream_0_0_V_V_read;
wire    store38_U0_coalesced_data_num_read;
wire    ap_sync_continue;
wire    store39_U0_ap_start;
wire    store39_U0_ap_done;
wire    store39_U0_ap_continue;
wire    store39_U0_ap_idle;
wire    store39_U0_ap_ready;
wire    store39_U0_m_axi_var_output_0_1_V_AWVALID;
wire   [31:0] store39_U0_m_axi_var_output_0_1_V_AWADDR;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_AWID;
wire   [31:0] store39_U0_m_axi_var_output_0_1_V_AWLEN;
wire   [2:0] store39_U0_m_axi_var_output_0_1_V_AWSIZE;
wire   [1:0] store39_U0_m_axi_var_output_0_1_V_AWBURST;
wire   [1:0] store39_U0_m_axi_var_output_0_1_V_AWLOCK;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_AWCACHE;
wire   [2:0] store39_U0_m_axi_var_output_0_1_V_AWPROT;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_AWQOS;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_AWREGION;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_AWUSER;
wire    store39_U0_m_axi_var_output_0_1_V_WVALID;
wire   [511:0] store39_U0_m_axi_var_output_0_1_V_WDATA;
wire   [63:0] store39_U0_m_axi_var_output_0_1_V_WSTRB;
wire    store39_U0_m_axi_var_output_0_1_V_WLAST;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_WID;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_WUSER;
wire    store39_U0_m_axi_var_output_0_1_V_ARVALID;
wire   [31:0] store39_U0_m_axi_var_output_0_1_V_ARADDR;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_ARID;
wire   [31:0] store39_U0_m_axi_var_output_0_1_V_ARLEN;
wire   [2:0] store39_U0_m_axi_var_output_0_1_V_ARSIZE;
wire   [1:0] store39_U0_m_axi_var_output_0_1_V_ARBURST;
wire   [1:0] store39_U0_m_axi_var_output_0_1_V_ARLOCK;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_ARCACHE;
wire   [2:0] store39_U0_m_axi_var_output_0_1_V_ARPROT;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_ARQOS;
wire   [3:0] store39_U0_m_axi_var_output_0_1_V_ARREGION;
wire   [0:0] store39_U0_m_axi_var_output_0_1_V_ARUSER;
wire    store39_U0_m_axi_var_output_0_1_V_RREADY;
wire    store39_U0_m_axi_var_output_0_1_V_BREADY;
wire    store39_U0_var_output_0_1_V_offset_read;
wire    store39_U0_output_stream_0_1_V_V_read;
wire    store39_U0_coalesced_data_num_read;
wire    store40_U0_ap_start;
wire    store40_U0_ap_done;
wire    store40_U0_ap_continue;
wire    store40_U0_ap_idle;
wire    store40_U0_ap_ready;
wire    store40_U0_m_axi_var_output_0_2_V_AWVALID;
wire   [31:0] store40_U0_m_axi_var_output_0_2_V_AWADDR;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_AWID;
wire   [31:0] store40_U0_m_axi_var_output_0_2_V_AWLEN;
wire   [2:0] store40_U0_m_axi_var_output_0_2_V_AWSIZE;
wire   [1:0] store40_U0_m_axi_var_output_0_2_V_AWBURST;
wire   [1:0] store40_U0_m_axi_var_output_0_2_V_AWLOCK;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_AWCACHE;
wire   [2:0] store40_U0_m_axi_var_output_0_2_V_AWPROT;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_AWQOS;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_AWREGION;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_AWUSER;
wire    store40_U0_m_axi_var_output_0_2_V_WVALID;
wire   [511:0] store40_U0_m_axi_var_output_0_2_V_WDATA;
wire   [63:0] store40_U0_m_axi_var_output_0_2_V_WSTRB;
wire    store40_U0_m_axi_var_output_0_2_V_WLAST;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_WID;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_WUSER;
wire    store40_U0_m_axi_var_output_0_2_V_ARVALID;
wire   [31:0] store40_U0_m_axi_var_output_0_2_V_ARADDR;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_ARID;
wire   [31:0] store40_U0_m_axi_var_output_0_2_V_ARLEN;
wire   [2:0] store40_U0_m_axi_var_output_0_2_V_ARSIZE;
wire   [1:0] store40_U0_m_axi_var_output_0_2_V_ARBURST;
wire   [1:0] store40_U0_m_axi_var_output_0_2_V_ARLOCK;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_ARCACHE;
wire   [2:0] store40_U0_m_axi_var_output_0_2_V_ARPROT;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_ARQOS;
wire   [3:0] store40_U0_m_axi_var_output_0_2_V_ARREGION;
wire   [0:0] store40_U0_m_axi_var_output_0_2_V_ARUSER;
wire    store40_U0_m_axi_var_output_0_2_V_RREADY;
wire    store40_U0_m_axi_var_output_0_2_V_BREADY;
wire    store40_U0_var_output_0_2_V_offset_read;
wire    store40_U0_output_stream_0_2_V_V_read;
wire    store40_U0_coalesced_data_num_read;
wire    store_U0_ap_start;
wire    store_U0_ap_done;
wire    store_U0_ap_continue;
wire    store_U0_ap_idle;
wire    store_U0_ap_ready;
wire    store_U0_m_axi_to_V_AWVALID;
wire   [31:0] store_U0_m_axi_to_V_AWADDR;
wire   [0:0] store_U0_m_axi_to_V_AWID;
wire   [31:0] store_U0_m_axi_to_V_AWLEN;
wire   [2:0] store_U0_m_axi_to_V_AWSIZE;
wire   [1:0] store_U0_m_axi_to_V_AWBURST;
wire   [1:0] store_U0_m_axi_to_V_AWLOCK;
wire   [3:0] store_U0_m_axi_to_V_AWCACHE;
wire   [2:0] store_U0_m_axi_to_V_AWPROT;
wire   [3:0] store_U0_m_axi_to_V_AWQOS;
wire   [3:0] store_U0_m_axi_to_V_AWREGION;
wire   [0:0] store_U0_m_axi_to_V_AWUSER;
wire    store_U0_m_axi_to_V_WVALID;
wire   [511:0] store_U0_m_axi_to_V_WDATA;
wire   [63:0] store_U0_m_axi_to_V_WSTRB;
wire    store_U0_m_axi_to_V_WLAST;
wire   [0:0] store_U0_m_axi_to_V_WID;
wire   [0:0] store_U0_m_axi_to_V_WUSER;
wire    store_U0_m_axi_to_V_ARVALID;
wire   [31:0] store_U0_m_axi_to_V_ARADDR;
wire   [0:0] store_U0_m_axi_to_V_ARID;
wire   [31:0] store_U0_m_axi_to_V_ARLEN;
wire   [2:0] store_U0_m_axi_to_V_ARSIZE;
wire   [1:0] store_U0_m_axi_to_V_ARBURST;
wire   [1:0] store_U0_m_axi_to_V_ARLOCK;
wire   [3:0] store_U0_m_axi_to_V_ARCACHE;
wire   [2:0] store_U0_m_axi_to_V_ARPROT;
wire   [3:0] store_U0_m_axi_to_V_ARQOS;
wire   [3:0] store_U0_m_axi_to_V_ARREGION;
wire   [0:0] store_U0_m_axi_to_V_ARUSER;
wire    store_U0_m_axi_to_V_RREADY;
wire    store_U0_m_axi_to_V_BREADY;
wire    store_U0_to_V_offset_read;
wire    store_U0_from_V_V_read;
wire    store_U0_coalesced_data_num_read;
wire    coalesced_data_num_c_full_n;
wire   [63:0] coalesced_data_num_c_dout;
wire    coalesced_data_num_c_empty_n;
wire    coalesced_data_num_c12_full_n;
wire   [63:0] coalesced_data_num_c12_dout;
wire    coalesced_data_num_c12_empty_n;
wire    coalesced_data_num_c13_full_n;
wire   [63:0] coalesced_data_num_c13_dout;
wire    coalesced_data_num_c13_empty_n;
wire    coalesced_data_num_c14_full_n;
wire   [63:0] coalesced_data_num_c14_dout;
wire    coalesced_data_num_c14_empty_n;
wire    var_output_0_0_V_c_full_n;
wire   [31:0] var_output_0_0_V_c_dout;
wire    var_output_0_0_V_c_empty_n;
wire    var_output_0_1_V_c_full_n;
wire   [31:0] var_output_0_1_V_c_dout;
wire    var_output_0_1_V_c_empty_n;
wire    var_output_0_2_V_c_full_n;
wire   [31:0] var_output_0_2_V_c_dout;
wire    var_output_0_2_V_c_empty_n;
wire    var_output_0_3_V_c_full_n;
wire   [31:0] var_output_0_3_V_c_dout;
wire    var_output_0_3_V_c_empty_n;
wire    var_input_0_0_V_c_full_n;
wire   [31:0] var_input_0_0_V_c_dout;
wire    var_input_0_0_V_c_empty_n;
wire    var_input_0_1_V_c_full_n;
wire   [31:0] var_input_0_1_V_c_dout;
wire    var_input_0_1_V_c_empty_n;
wire    var_input_0_2_V_c_full_n;
wire   [31:0] var_input_0_2_V_c_dout;
wire    var_input_0_2_V_c_empty_n;
wire    var_input_0_3_V_c_full_n;
wire   [31:0] var_input_0_3_V_c_dout;
wire    var_input_0_3_V_c_empty_n;
wire    input_stream_0_0_V_V_full_n;
wire   [511:0] input_stream_0_0_V_V_dout;
wire    input_stream_0_0_V_V_empty_n;
wire    coalesced_data_num_c15_full_n;
wire   [63:0] coalesced_data_num_c15_dout;
wire    coalesced_data_num_c15_empty_n;
wire    input_stream_0_1_V_V_full_n;
wire   [511:0] input_stream_0_1_V_V_dout;
wire    input_stream_0_1_V_V_empty_n;
wire    input_stream_0_2_V_V_full_n;
wire   [511:0] input_stream_0_2_V_V_dout;
wire    input_stream_0_2_V_V_empty_n;
wire    input_stream_0_3_V_V_full_n;
wire   [511:0] input_stream_0_3_V_V_dout;
wire    input_stream_0_3_V_V_empty_n;
wire    output_stream_0_0_V_V_full_n;
wire   [511:0] output_stream_0_0_V_V_dout;
wire    output_stream_0_0_V_V_empty_n;
wire    output_stream_0_1_V_V_full_n;
wire   [511:0] output_stream_0_1_V_V_dout;
wire    output_stream_0_1_V_V_empty_n;
wire    output_stream_0_2_V_V_full_n;
wire   [511:0] output_stream_0_2_V_V_dout;
wire    output_stream_0_2_V_V_empty_n;
wire    output_stream_0_3_V_V_full_n;
wire   [511:0] output_stream_0_3_V_V_dout;
wire    output_stream_0_3_V_V_empty_n;
wire    coalesced_data_num_c16_full_n;
wire   [63:0] coalesced_data_num_c16_dout;
wire    coalesced_data_num_c16_empty_n;
wire    coalesced_data_num_c17_full_n;
wire   [63:0] coalesced_data_num_c17_dout;
wire    coalesced_data_num_c17_empty_n;
wire    coalesced_data_num_c18_full_n;
wire   [63:0] coalesced_data_num_c18_dout;
wire    coalesced_data_num_c18_empty_n;
wire    coalesced_data_num_c19_full_n;
wire   [63:0] coalesced_data_num_c19_dout;
wire    coalesced_data_num_c19_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_load35_U0_ap_ready;
wire    ap_sync_load35_U0_ap_ready;
reg   [1:0] load35_U0_ap_ready_count;
reg    ap_sync_reg_load36_U0_ap_ready;
wire    ap_sync_load36_U0_ap_ready;
reg   [1:0] load36_U0_ap_ready_count;
reg    ap_sync_reg_load37_U0_ap_ready;
wire    ap_sync_load37_U0_ap_ready;
reg   [1:0] load37_U0_ap_ready_count;
reg    ap_sync_reg_load_U0_ap_ready;
wire    ap_sync_load_U0_ap_ready;
reg   [1:0] load_U0_ap_ready_count;
reg    ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready;
wire    ap_sync_jacobi2d_kernel_entry118311_U0_ap_ready;
reg   [1:0] jacobi2d_kernel_entry118311_U0_ap_ready_count;
wire   [0:0] start_for_store38_U0_din;
wire    start_for_store38_U0_full_n;
wire   [0:0] start_for_store38_U0_dout;
wire    start_for_store38_U0_empty_n;
wire   [0:0] start_for_store39_U0_din;
wire    start_for_store39_U0_full_n;
wire   [0:0] start_for_store39_U0_dout;
wire    start_for_store39_U0_empty_n;
wire   [0:0] start_for_store40_U0_din;
wire    start_for_store40_U0_full_n;
wire   [0:0] start_for_store40_U0_dout;
wire    start_for_store40_U0_empty_n;
wire   [0:0] start_for_store_U0_din;
wire    start_for_store_U0_full_n;
wire   [0:0] start_for_store_U0_dout;
wire    start_for_store_U0_empty_n;
wire   [0:0] start_for_compute_U0_din;
wire    start_for_compute_U0_full_n;
wire   [0:0] start_for_compute_U0_dout;
wire    start_for_compute_U0_empty_n;
wire    load36_U0_start_full_n;
wire    load36_U0_start_write;
wire    load37_U0_start_full_n;
wire    load37_U0_start_write;
wire    load_U0_start_full_n;
wire    load_U0_start_write;
wire    compute_U0_start_full_n;
wire    compute_U0_start_write;
wire    store38_U0_start_full_n;
wire    store38_U0_start_write;
wire    store39_U0_start_full_n;
wire    store39_U0_start_write;
wire    store40_U0_start_full_n;
wire    store40_U0_start_write;
wire    store_U0_start_full_n;
wire    store_U0_start_write;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_load35_U0_ap_ready = 1'b0;
#0 load35_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_load36_U0_ap_ready = 1'b0;
#0 load36_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_load37_U0_ap_ready = 1'b0;
#0 load37_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_load_U0_ap_ready = 1'b0;
#0 load_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready = 1'b0;
#0 jacobi2d_kernel_entry118311_U0_ap_ready_count = 2'd0;
end

jacobi2d_kernel_jacobi2d_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
jacobi2d_kernel_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .var_output_0_0_V(var_output_0_0_V),
    .var_output_0_1_V(var_output_0_1_V),
    .var_output_0_2_V(var_output_0_2_V),
    .var_output_0_3_V(var_output_0_3_V),
    .var_input_0_0_V(var_input_0_0_V),
    .var_input_0_1_V(var_input_0_1_V),
    .var_input_0_2_V(var_input_0_2_V),
    .var_input_0_3_V(var_input_0_3_V),
    .coalesced_data_num(coalesced_data_num),
    .tile_data_num(tile_data_num),
    .tile_num_dim_0(tile_num_dim_0),
    .input_size_dim_0(input_size_dim_0),
    .input_size_dim_1(input_size_dim_1)
);

jacobi2d_kernel_jacobi2d_kernel_chan0bank0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 125 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CHAN0BANK0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CHAN0BANK0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CHAN0BANK0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CHAN0BANK0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CHAN0BANK0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CHAN0BANK0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CHAN0BANK0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CHAN0BANK0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CHAN0BANK0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CHAN0BANK0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CHAN0BANK0_CACHE_VALUE ))
jacobi2d_kernel_chan0bank0_m_axi_U(
    .AWVALID(m_axi_chan0bank0_AWVALID),
    .AWREADY(m_axi_chan0bank0_AWREADY),
    .AWADDR(m_axi_chan0bank0_AWADDR),
    .AWID(m_axi_chan0bank0_AWID),
    .AWLEN(m_axi_chan0bank0_AWLEN),
    .AWSIZE(m_axi_chan0bank0_AWSIZE),
    .AWBURST(m_axi_chan0bank0_AWBURST),
    .AWLOCK(m_axi_chan0bank0_AWLOCK),
    .AWCACHE(m_axi_chan0bank0_AWCACHE),
    .AWPROT(m_axi_chan0bank0_AWPROT),
    .AWQOS(m_axi_chan0bank0_AWQOS),
    .AWREGION(m_axi_chan0bank0_AWREGION),
    .AWUSER(m_axi_chan0bank0_AWUSER),
    .WVALID(m_axi_chan0bank0_WVALID),
    .WREADY(m_axi_chan0bank0_WREADY),
    .WDATA(m_axi_chan0bank0_WDATA),
    .WSTRB(m_axi_chan0bank0_WSTRB),
    .WLAST(m_axi_chan0bank0_WLAST),
    .WID(m_axi_chan0bank0_WID),
    .WUSER(m_axi_chan0bank0_WUSER),
    .ARVALID(m_axi_chan0bank0_ARVALID),
    .ARREADY(m_axi_chan0bank0_ARREADY),
    .ARADDR(m_axi_chan0bank0_ARADDR),
    .ARID(m_axi_chan0bank0_ARID),
    .ARLEN(m_axi_chan0bank0_ARLEN),
    .ARSIZE(m_axi_chan0bank0_ARSIZE),
    .ARBURST(m_axi_chan0bank0_ARBURST),
    .ARLOCK(m_axi_chan0bank0_ARLOCK),
    .ARCACHE(m_axi_chan0bank0_ARCACHE),
    .ARPROT(m_axi_chan0bank0_ARPROT),
    .ARQOS(m_axi_chan0bank0_ARQOS),
    .ARREGION(m_axi_chan0bank0_ARREGION),
    .ARUSER(m_axi_chan0bank0_ARUSER),
    .RVALID(m_axi_chan0bank0_RVALID),
    .RREADY(m_axi_chan0bank0_RREADY),
    .RDATA(m_axi_chan0bank0_RDATA),
    .RLAST(m_axi_chan0bank0_RLAST),
    .RID(m_axi_chan0bank0_RID),
    .RUSER(m_axi_chan0bank0_RUSER),
    .RRESP(m_axi_chan0bank0_RRESP),
    .BVALID(m_axi_chan0bank0_BVALID),
    .BREADY(m_axi_chan0bank0_BREADY),
    .BRESP(m_axi_chan0bank0_BRESP),
    .BID(m_axi_chan0bank0_BID),
    .BUSER(m_axi_chan0bank0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load35_U0_m_axi_var_input_0_0_V_ARVALID),
    .I_ARREADY(chan0bank0_ARREADY),
    .I_ARADDR(load35_U0_m_axi_var_input_0_0_V_ARADDR),
    .I_ARID(load35_U0_m_axi_var_input_0_0_V_ARID),
    .I_ARLEN(load35_U0_m_axi_var_input_0_0_V_ARLEN),
    .I_ARSIZE(load35_U0_m_axi_var_input_0_0_V_ARSIZE),
    .I_ARLOCK(load35_U0_m_axi_var_input_0_0_V_ARLOCK),
    .I_ARCACHE(load35_U0_m_axi_var_input_0_0_V_ARCACHE),
    .I_ARQOS(load35_U0_m_axi_var_input_0_0_V_ARQOS),
    .I_ARPROT(load35_U0_m_axi_var_input_0_0_V_ARPROT),
    .I_ARUSER(load35_U0_m_axi_var_input_0_0_V_ARUSER),
    .I_ARBURST(load35_U0_m_axi_var_input_0_0_V_ARBURST),
    .I_ARREGION(load35_U0_m_axi_var_input_0_0_V_ARREGION),
    .I_RVALID(chan0bank0_RVALID),
    .I_RREADY(load35_U0_m_axi_var_input_0_0_V_RREADY),
    .I_RDATA(chan0bank0_RDATA),
    .I_RID(chan0bank0_RID),
    .I_RUSER(chan0bank0_RUSER),
    .I_RRESP(chan0bank0_RRESP),
    .I_RLAST(chan0bank0_RLAST),
    .I_AWVALID(store38_U0_m_axi_var_output_0_0_V_AWVALID),
    .I_AWREADY(chan0bank0_AWREADY),
    .I_AWADDR(store38_U0_m_axi_var_output_0_0_V_AWADDR),
    .I_AWID(store38_U0_m_axi_var_output_0_0_V_AWID),
    .I_AWLEN(store38_U0_m_axi_var_output_0_0_V_AWLEN),
    .I_AWSIZE(store38_U0_m_axi_var_output_0_0_V_AWSIZE),
    .I_AWLOCK(store38_U0_m_axi_var_output_0_0_V_AWLOCK),
    .I_AWCACHE(store38_U0_m_axi_var_output_0_0_V_AWCACHE),
    .I_AWQOS(store38_U0_m_axi_var_output_0_0_V_AWQOS),
    .I_AWPROT(store38_U0_m_axi_var_output_0_0_V_AWPROT),
    .I_AWUSER(store38_U0_m_axi_var_output_0_0_V_AWUSER),
    .I_AWBURST(store38_U0_m_axi_var_output_0_0_V_AWBURST),
    .I_AWREGION(store38_U0_m_axi_var_output_0_0_V_AWREGION),
    .I_WVALID(store38_U0_m_axi_var_output_0_0_V_WVALID),
    .I_WREADY(chan0bank0_WREADY),
    .I_WDATA(store38_U0_m_axi_var_output_0_0_V_WDATA),
    .I_WID(store38_U0_m_axi_var_output_0_0_V_WID),
    .I_WUSER(store38_U0_m_axi_var_output_0_0_V_WUSER),
    .I_WLAST(store38_U0_m_axi_var_output_0_0_V_WLAST),
    .I_WSTRB(store38_U0_m_axi_var_output_0_0_V_WSTRB),
    .I_BVALID(chan0bank0_BVALID),
    .I_BREADY(store38_U0_m_axi_var_output_0_0_V_BREADY),
    .I_BRESP(chan0bank0_BRESP),
    .I_BID(chan0bank0_BID),
    .I_BUSER(chan0bank0_BUSER)
);

jacobi2d_kernel_jacobi2d_kernel_chan0bank1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 125 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CHAN0BANK1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CHAN0BANK1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CHAN0BANK1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CHAN0BANK1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CHAN0BANK1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CHAN0BANK1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CHAN0BANK1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CHAN0BANK1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CHAN0BANK1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CHAN0BANK1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CHAN0BANK1_CACHE_VALUE ))
jacobi2d_kernel_chan0bank1_m_axi_U(
    .AWVALID(m_axi_chan0bank1_AWVALID),
    .AWREADY(m_axi_chan0bank1_AWREADY),
    .AWADDR(m_axi_chan0bank1_AWADDR),
    .AWID(m_axi_chan0bank1_AWID),
    .AWLEN(m_axi_chan0bank1_AWLEN),
    .AWSIZE(m_axi_chan0bank1_AWSIZE),
    .AWBURST(m_axi_chan0bank1_AWBURST),
    .AWLOCK(m_axi_chan0bank1_AWLOCK),
    .AWCACHE(m_axi_chan0bank1_AWCACHE),
    .AWPROT(m_axi_chan0bank1_AWPROT),
    .AWQOS(m_axi_chan0bank1_AWQOS),
    .AWREGION(m_axi_chan0bank1_AWREGION),
    .AWUSER(m_axi_chan0bank1_AWUSER),
    .WVALID(m_axi_chan0bank1_WVALID),
    .WREADY(m_axi_chan0bank1_WREADY),
    .WDATA(m_axi_chan0bank1_WDATA),
    .WSTRB(m_axi_chan0bank1_WSTRB),
    .WLAST(m_axi_chan0bank1_WLAST),
    .WID(m_axi_chan0bank1_WID),
    .WUSER(m_axi_chan0bank1_WUSER),
    .ARVALID(m_axi_chan0bank1_ARVALID),
    .ARREADY(m_axi_chan0bank1_ARREADY),
    .ARADDR(m_axi_chan0bank1_ARADDR),
    .ARID(m_axi_chan0bank1_ARID),
    .ARLEN(m_axi_chan0bank1_ARLEN),
    .ARSIZE(m_axi_chan0bank1_ARSIZE),
    .ARBURST(m_axi_chan0bank1_ARBURST),
    .ARLOCK(m_axi_chan0bank1_ARLOCK),
    .ARCACHE(m_axi_chan0bank1_ARCACHE),
    .ARPROT(m_axi_chan0bank1_ARPROT),
    .ARQOS(m_axi_chan0bank1_ARQOS),
    .ARREGION(m_axi_chan0bank1_ARREGION),
    .ARUSER(m_axi_chan0bank1_ARUSER),
    .RVALID(m_axi_chan0bank1_RVALID),
    .RREADY(m_axi_chan0bank1_RREADY),
    .RDATA(m_axi_chan0bank1_RDATA),
    .RLAST(m_axi_chan0bank1_RLAST),
    .RID(m_axi_chan0bank1_RID),
    .RUSER(m_axi_chan0bank1_RUSER),
    .RRESP(m_axi_chan0bank1_RRESP),
    .BVALID(m_axi_chan0bank1_BVALID),
    .BREADY(m_axi_chan0bank1_BREADY),
    .BRESP(m_axi_chan0bank1_BRESP),
    .BID(m_axi_chan0bank1_BID),
    .BUSER(m_axi_chan0bank1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load36_U0_m_axi_var_input_0_1_V_ARVALID),
    .I_ARREADY(chan0bank1_ARREADY),
    .I_ARADDR(load36_U0_m_axi_var_input_0_1_V_ARADDR),
    .I_ARID(load36_U0_m_axi_var_input_0_1_V_ARID),
    .I_ARLEN(load36_U0_m_axi_var_input_0_1_V_ARLEN),
    .I_ARSIZE(load36_U0_m_axi_var_input_0_1_V_ARSIZE),
    .I_ARLOCK(load36_U0_m_axi_var_input_0_1_V_ARLOCK),
    .I_ARCACHE(load36_U0_m_axi_var_input_0_1_V_ARCACHE),
    .I_ARQOS(load36_U0_m_axi_var_input_0_1_V_ARQOS),
    .I_ARPROT(load36_U0_m_axi_var_input_0_1_V_ARPROT),
    .I_ARUSER(load36_U0_m_axi_var_input_0_1_V_ARUSER),
    .I_ARBURST(load36_U0_m_axi_var_input_0_1_V_ARBURST),
    .I_ARREGION(load36_U0_m_axi_var_input_0_1_V_ARREGION),
    .I_RVALID(chan0bank1_RVALID),
    .I_RREADY(load36_U0_m_axi_var_input_0_1_V_RREADY),
    .I_RDATA(chan0bank1_RDATA),
    .I_RID(chan0bank1_RID),
    .I_RUSER(chan0bank1_RUSER),
    .I_RRESP(chan0bank1_RRESP),
    .I_RLAST(chan0bank1_RLAST),
    .I_AWVALID(store39_U0_m_axi_var_output_0_1_V_AWVALID),
    .I_AWREADY(chan0bank1_AWREADY),
    .I_AWADDR(store39_U0_m_axi_var_output_0_1_V_AWADDR),
    .I_AWID(store39_U0_m_axi_var_output_0_1_V_AWID),
    .I_AWLEN(store39_U0_m_axi_var_output_0_1_V_AWLEN),
    .I_AWSIZE(store39_U0_m_axi_var_output_0_1_V_AWSIZE),
    .I_AWLOCK(store39_U0_m_axi_var_output_0_1_V_AWLOCK),
    .I_AWCACHE(store39_U0_m_axi_var_output_0_1_V_AWCACHE),
    .I_AWQOS(store39_U0_m_axi_var_output_0_1_V_AWQOS),
    .I_AWPROT(store39_U0_m_axi_var_output_0_1_V_AWPROT),
    .I_AWUSER(store39_U0_m_axi_var_output_0_1_V_AWUSER),
    .I_AWBURST(store39_U0_m_axi_var_output_0_1_V_AWBURST),
    .I_AWREGION(store39_U0_m_axi_var_output_0_1_V_AWREGION),
    .I_WVALID(store39_U0_m_axi_var_output_0_1_V_WVALID),
    .I_WREADY(chan0bank1_WREADY),
    .I_WDATA(store39_U0_m_axi_var_output_0_1_V_WDATA),
    .I_WID(store39_U0_m_axi_var_output_0_1_V_WID),
    .I_WUSER(store39_U0_m_axi_var_output_0_1_V_WUSER),
    .I_WLAST(store39_U0_m_axi_var_output_0_1_V_WLAST),
    .I_WSTRB(store39_U0_m_axi_var_output_0_1_V_WSTRB),
    .I_BVALID(chan0bank1_BVALID),
    .I_BREADY(store39_U0_m_axi_var_output_0_1_V_BREADY),
    .I_BRESP(chan0bank1_BRESP),
    .I_BID(chan0bank1_BID),
    .I_BUSER(chan0bank1_BUSER)
);

jacobi2d_kernel_jacobi2d_kernel_chan0bank2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 125 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CHAN0BANK2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CHAN0BANK2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CHAN0BANK2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CHAN0BANK2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CHAN0BANK2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CHAN0BANK2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CHAN0BANK2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CHAN0BANK2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CHAN0BANK2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CHAN0BANK2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CHAN0BANK2_CACHE_VALUE ))
jacobi2d_kernel_chan0bank2_m_axi_U(
    .AWVALID(m_axi_chan0bank2_AWVALID),
    .AWREADY(m_axi_chan0bank2_AWREADY),
    .AWADDR(m_axi_chan0bank2_AWADDR),
    .AWID(m_axi_chan0bank2_AWID),
    .AWLEN(m_axi_chan0bank2_AWLEN),
    .AWSIZE(m_axi_chan0bank2_AWSIZE),
    .AWBURST(m_axi_chan0bank2_AWBURST),
    .AWLOCK(m_axi_chan0bank2_AWLOCK),
    .AWCACHE(m_axi_chan0bank2_AWCACHE),
    .AWPROT(m_axi_chan0bank2_AWPROT),
    .AWQOS(m_axi_chan0bank2_AWQOS),
    .AWREGION(m_axi_chan0bank2_AWREGION),
    .AWUSER(m_axi_chan0bank2_AWUSER),
    .WVALID(m_axi_chan0bank2_WVALID),
    .WREADY(m_axi_chan0bank2_WREADY),
    .WDATA(m_axi_chan0bank2_WDATA),
    .WSTRB(m_axi_chan0bank2_WSTRB),
    .WLAST(m_axi_chan0bank2_WLAST),
    .WID(m_axi_chan0bank2_WID),
    .WUSER(m_axi_chan0bank2_WUSER),
    .ARVALID(m_axi_chan0bank2_ARVALID),
    .ARREADY(m_axi_chan0bank2_ARREADY),
    .ARADDR(m_axi_chan0bank2_ARADDR),
    .ARID(m_axi_chan0bank2_ARID),
    .ARLEN(m_axi_chan0bank2_ARLEN),
    .ARSIZE(m_axi_chan0bank2_ARSIZE),
    .ARBURST(m_axi_chan0bank2_ARBURST),
    .ARLOCK(m_axi_chan0bank2_ARLOCK),
    .ARCACHE(m_axi_chan0bank2_ARCACHE),
    .ARPROT(m_axi_chan0bank2_ARPROT),
    .ARQOS(m_axi_chan0bank2_ARQOS),
    .ARREGION(m_axi_chan0bank2_ARREGION),
    .ARUSER(m_axi_chan0bank2_ARUSER),
    .RVALID(m_axi_chan0bank2_RVALID),
    .RREADY(m_axi_chan0bank2_RREADY),
    .RDATA(m_axi_chan0bank2_RDATA),
    .RLAST(m_axi_chan0bank2_RLAST),
    .RID(m_axi_chan0bank2_RID),
    .RUSER(m_axi_chan0bank2_RUSER),
    .RRESP(m_axi_chan0bank2_RRESP),
    .BVALID(m_axi_chan0bank2_BVALID),
    .BREADY(m_axi_chan0bank2_BREADY),
    .BRESP(m_axi_chan0bank2_BRESP),
    .BID(m_axi_chan0bank2_BID),
    .BUSER(m_axi_chan0bank2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load37_U0_m_axi_var_input_0_2_V_ARVALID),
    .I_ARREADY(chan0bank2_ARREADY),
    .I_ARADDR(load37_U0_m_axi_var_input_0_2_V_ARADDR),
    .I_ARID(load37_U0_m_axi_var_input_0_2_V_ARID),
    .I_ARLEN(load37_U0_m_axi_var_input_0_2_V_ARLEN),
    .I_ARSIZE(load37_U0_m_axi_var_input_0_2_V_ARSIZE),
    .I_ARLOCK(load37_U0_m_axi_var_input_0_2_V_ARLOCK),
    .I_ARCACHE(load37_U0_m_axi_var_input_0_2_V_ARCACHE),
    .I_ARQOS(load37_U0_m_axi_var_input_0_2_V_ARQOS),
    .I_ARPROT(load37_U0_m_axi_var_input_0_2_V_ARPROT),
    .I_ARUSER(load37_U0_m_axi_var_input_0_2_V_ARUSER),
    .I_ARBURST(load37_U0_m_axi_var_input_0_2_V_ARBURST),
    .I_ARREGION(load37_U0_m_axi_var_input_0_2_V_ARREGION),
    .I_RVALID(chan0bank2_RVALID),
    .I_RREADY(load37_U0_m_axi_var_input_0_2_V_RREADY),
    .I_RDATA(chan0bank2_RDATA),
    .I_RID(chan0bank2_RID),
    .I_RUSER(chan0bank2_RUSER),
    .I_RRESP(chan0bank2_RRESP),
    .I_RLAST(chan0bank2_RLAST),
    .I_AWVALID(store40_U0_m_axi_var_output_0_2_V_AWVALID),
    .I_AWREADY(chan0bank2_AWREADY),
    .I_AWADDR(store40_U0_m_axi_var_output_0_2_V_AWADDR),
    .I_AWID(store40_U0_m_axi_var_output_0_2_V_AWID),
    .I_AWLEN(store40_U0_m_axi_var_output_0_2_V_AWLEN),
    .I_AWSIZE(store40_U0_m_axi_var_output_0_2_V_AWSIZE),
    .I_AWLOCK(store40_U0_m_axi_var_output_0_2_V_AWLOCK),
    .I_AWCACHE(store40_U0_m_axi_var_output_0_2_V_AWCACHE),
    .I_AWQOS(store40_U0_m_axi_var_output_0_2_V_AWQOS),
    .I_AWPROT(store40_U0_m_axi_var_output_0_2_V_AWPROT),
    .I_AWUSER(store40_U0_m_axi_var_output_0_2_V_AWUSER),
    .I_AWBURST(store40_U0_m_axi_var_output_0_2_V_AWBURST),
    .I_AWREGION(store40_U0_m_axi_var_output_0_2_V_AWREGION),
    .I_WVALID(store40_U0_m_axi_var_output_0_2_V_WVALID),
    .I_WREADY(chan0bank2_WREADY),
    .I_WDATA(store40_U0_m_axi_var_output_0_2_V_WDATA),
    .I_WID(store40_U0_m_axi_var_output_0_2_V_WID),
    .I_WUSER(store40_U0_m_axi_var_output_0_2_V_WUSER),
    .I_WLAST(store40_U0_m_axi_var_output_0_2_V_WLAST),
    .I_WSTRB(store40_U0_m_axi_var_output_0_2_V_WSTRB),
    .I_BVALID(chan0bank2_BVALID),
    .I_BREADY(store40_U0_m_axi_var_output_0_2_V_BREADY),
    .I_BRESP(chan0bank2_BRESP),
    .I_BID(chan0bank2_BID),
    .I_BUSER(chan0bank2_BUSER)
);

jacobi2d_kernel_jacobi2d_kernel_chan0bank3_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 125 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CHAN0BANK3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CHAN0BANK3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CHAN0BANK3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CHAN0BANK3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CHAN0BANK3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CHAN0BANK3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CHAN0BANK3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CHAN0BANK3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CHAN0BANK3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CHAN0BANK3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CHAN0BANK3_CACHE_VALUE ))
jacobi2d_kernel_chan0bank3_m_axi_U(
    .AWVALID(m_axi_chan0bank3_AWVALID),
    .AWREADY(m_axi_chan0bank3_AWREADY),
    .AWADDR(m_axi_chan0bank3_AWADDR),
    .AWID(m_axi_chan0bank3_AWID),
    .AWLEN(m_axi_chan0bank3_AWLEN),
    .AWSIZE(m_axi_chan0bank3_AWSIZE),
    .AWBURST(m_axi_chan0bank3_AWBURST),
    .AWLOCK(m_axi_chan0bank3_AWLOCK),
    .AWCACHE(m_axi_chan0bank3_AWCACHE),
    .AWPROT(m_axi_chan0bank3_AWPROT),
    .AWQOS(m_axi_chan0bank3_AWQOS),
    .AWREGION(m_axi_chan0bank3_AWREGION),
    .AWUSER(m_axi_chan0bank3_AWUSER),
    .WVALID(m_axi_chan0bank3_WVALID),
    .WREADY(m_axi_chan0bank3_WREADY),
    .WDATA(m_axi_chan0bank3_WDATA),
    .WSTRB(m_axi_chan0bank3_WSTRB),
    .WLAST(m_axi_chan0bank3_WLAST),
    .WID(m_axi_chan0bank3_WID),
    .WUSER(m_axi_chan0bank3_WUSER),
    .ARVALID(m_axi_chan0bank3_ARVALID),
    .ARREADY(m_axi_chan0bank3_ARREADY),
    .ARADDR(m_axi_chan0bank3_ARADDR),
    .ARID(m_axi_chan0bank3_ARID),
    .ARLEN(m_axi_chan0bank3_ARLEN),
    .ARSIZE(m_axi_chan0bank3_ARSIZE),
    .ARBURST(m_axi_chan0bank3_ARBURST),
    .ARLOCK(m_axi_chan0bank3_ARLOCK),
    .ARCACHE(m_axi_chan0bank3_ARCACHE),
    .ARPROT(m_axi_chan0bank3_ARPROT),
    .ARQOS(m_axi_chan0bank3_ARQOS),
    .ARREGION(m_axi_chan0bank3_ARREGION),
    .ARUSER(m_axi_chan0bank3_ARUSER),
    .RVALID(m_axi_chan0bank3_RVALID),
    .RREADY(m_axi_chan0bank3_RREADY),
    .RDATA(m_axi_chan0bank3_RDATA),
    .RLAST(m_axi_chan0bank3_RLAST),
    .RID(m_axi_chan0bank3_RID),
    .RUSER(m_axi_chan0bank3_RUSER),
    .RRESP(m_axi_chan0bank3_RRESP),
    .BVALID(m_axi_chan0bank3_BVALID),
    .BREADY(m_axi_chan0bank3_BREADY),
    .BRESP(m_axi_chan0bank3_BRESP),
    .BID(m_axi_chan0bank3_BID),
    .BUSER(m_axi_chan0bank3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load_U0_m_axi_from_V_ARVALID),
    .I_ARREADY(chan0bank3_ARREADY),
    .I_ARADDR(load_U0_m_axi_from_V_ARADDR),
    .I_ARID(load_U0_m_axi_from_V_ARID),
    .I_ARLEN(load_U0_m_axi_from_V_ARLEN),
    .I_ARSIZE(load_U0_m_axi_from_V_ARSIZE),
    .I_ARLOCK(load_U0_m_axi_from_V_ARLOCK),
    .I_ARCACHE(load_U0_m_axi_from_V_ARCACHE),
    .I_ARQOS(load_U0_m_axi_from_V_ARQOS),
    .I_ARPROT(load_U0_m_axi_from_V_ARPROT),
    .I_ARUSER(load_U0_m_axi_from_V_ARUSER),
    .I_ARBURST(load_U0_m_axi_from_V_ARBURST),
    .I_ARREGION(load_U0_m_axi_from_V_ARREGION),
    .I_RVALID(chan0bank3_RVALID),
    .I_RREADY(load_U0_m_axi_from_V_RREADY),
    .I_RDATA(chan0bank3_RDATA),
    .I_RID(chan0bank3_RID),
    .I_RUSER(chan0bank3_RUSER),
    .I_RRESP(chan0bank3_RRESP),
    .I_RLAST(chan0bank3_RLAST),
    .I_AWVALID(store_U0_m_axi_to_V_AWVALID),
    .I_AWREADY(chan0bank3_AWREADY),
    .I_AWADDR(store_U0_m_axi_to_V_AWADDR),
    .I_AWID(store_U0_m_axi_to_V_AWID),
    .I_AWLEN(store_U0_m_axi_to_V_AWLEN),
    .I_AWSIZE(store_U0_m_axi_to_V_AWSIZE),
    .I_AWLOCK(store_U0_m_axi_to_V_AWLOCK),
    .I_AWCACHE(store_U0_m_axi_to_V_AWCACHE),
    .I_AWQOS(store_U0_m_axi_to_V_AWQOS),
    .I_AWPROT(store_U0_m_axi_to_V_AWPROT),
    .I_AWUSER(store_U0_m_axi_to_V_AWUSER),
    .I_AWBURST(store_U0_m_axi_to_V_AWBURST),
    .I_AWREGION(store_U0_m_axi_to_V_AWREGION),
    .I_WVALID(store_U0_m_axi_to_V_WVALID),
    .I_WREADY(chan0bank3_WREADY),
    .I_WDATA(store_U0_m_axi_to_V_WDATA),
    .I_WID(store_U0_m_axi_to_V_WID),
    .I_WUSER(store_U0_m_axi_to_V_WUSER),
    .I_WLAST(store_U0_m_axi_to_V_WLAST),
    .I_WSTRB(store_U0_m_axi_to_V_WSTRB),
    .I_BVALID(chan0bank3_BVALID),
    .I_BREADY(store_U0_m_axi_to_V_BREADY),
    .I_BRESP(chan0bank3_BRESP),
    .I_BID(chan0bank3_BID),
    .I_BUSER(chan0bank3_BUSER)
);

jacobi2d_kernel_jacobi2d_kernel_entry118311 jacobi2d_kernel_entry118311_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(jacobi2d_kernel_entry118311_U0_ap_start),
    .start_full_n(jacobi2d_kernel_entry118311_U0_start_full_n),
    .ap_done(jacobi2d_kernel_entry118311_U0_ap_done),
    .ap_continue(jacobi2d_kernel_entry118311_U0_ap_continue),
    .ap_idle(jacobi2d_kernel_entry118311_U0_ap_idle),
    .ap_ready(jacobi2d_kernel_entry118311_U0_ap_ready),
    .start_out(jacobi2d_kernel_entry118311_U0_start_out),
    .start_write(jacobi2d_kernel_entry118311_U0_start_write),
    .coalesced_data_num(coalesced_data_num),
    .coalesced_data_num_out_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_din),
    .coalesced_data_num_out_full_n(coalesced_data_num_c_full_n),
    .coalesced_data_num_out_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_write),
    .coalesced_data_num_out1_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_din),
    .coalesced_data_num_out1_full_n(coalesced_data_num_c12_full_n),
    .coalesced_data_num_out1_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_write),
    .coalesced_data_num_out2_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_din),
    .coalesced_data_num_out2_full_n(coalesced_data_num_c13_full_n),
    .coalesced_data_num_out2_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_write),
    .coalesced_data_num_out3_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_din),
    .coalesced_data_num_out3_full_n(coalesced_data_num_c14_full_n),
    .coalesced_data_num_out3_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_write),
    .var_output_0_0_V(var_output_0_0_V),
    .var_output_0_1_V(var_output_0_1_V),
    .var_output_0_2_V(var_output_0_2_V),
    .var_output_0_3_V(var_output_0_3_V),
    .var_input_0_0_V(var_input_0_0_V),
    .var_input_0_1_V(var_input_0_1_V),
    .var_input_0_2_V(var_input_0_2_V),
    .var_input_0_3_V(var_input_0_3_V),
    .var_output_0_0_V_out_din(jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_din),
    .var_output_0_0_V_out_full_n(var_output_0_0_V_c_full_n),
    .var_output_0_0_V_out_write(jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_write),
    .var_output_0_1_V_out_din(jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_din),
    .var_output_0_1_V_out_full_n(var_output_0_1_V_c_full_n),
    .var_output_0_1_V_out_write(jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_write),
    .var_output_0_2_V_out_din(jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_din),
    .var_output_0_2_V_out_full_n(var_output_0_2_V_c_full_n),
    .var_output_0_2_V_out_write(jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_write),
    .var_output_0_3_V_out_din(jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_din),
    .var_output_0_3_V_out_full_n(var_output_0_3_V_c_full_n),
    .var_output_0_3_V_out_write(jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_write),
    .var_input_0_0_V_out_din(jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_din),
    .var_input_0_0_V_out_full_n(var_input_0_0_V_c_full_n),
    .var_input_0_0_V_out_write(jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_write),
    .var_input_0_1_V_out_din(jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_din),
    .var_input_0_1_V_out_full_n(var_input_0_1_V_c_full_n),
    .var_input_0_1_V_out_write(jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_write),
    .var_input_0_2_V_out_din(jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_din),
    .var_input_0_2_V_out_full_n(var_input_0_2_V_c_full_n),
    .var_input_0_2_V_out_write(jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_write),
    .var_input_0_3_V_out_din(jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_din),
    .var_input_0_3_V_out_full_n(var_input_0_3_V_c_full_n),
    .var_input_0_3_V_out_write(jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_write)
);

jacobi2d_kernel_load35 load35_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load35_U0_ap_start),
    .start_full_n(start_for_compute_U0_full_n),
    .ap_done(load35_U0_ap_done),
    .ap_continue(load35_U0_ap_continue),
    .ap_idle(load35_U0_ap_idle),
    .ap_ready(load35_U0_ap_ready),
    .start_out(load35_U0_start_out),
    .start_write(load35_U0_start_write),
    .input_stream_0_0_V_V_din(load35_U0_input_stream_0_0_V_V_din),
    .input_stream_0_0_V_V_full_n(input_stream_0_0_V_V_full_n),
    .input_stream_0_0_V_V_write(load35_U0_input_stream_0_0_V_V_write),
    .m_axi_var_input_0_0_V_AWVALID(load35_U0_m_axi_var_input_0_0_V_AWVALID),
    .m_axi_var_input_0_0_V_AWREADY(1'b0),
    .m_axi_var_input_0_0_V_AWADDR(load35_U0_m_axi_var_input_0_0_V_AWADDR),
    .m_axi_var_input_0_0_V_AWID(load35_U0_m_axi_var_input_0_0_V_AWID),
    .m_axi_var_input_0_0_V_AWLEN(load35_U0_m_axi_var_input_0_0_V_AWLEN),
    .m_axi_var_input_0_0_V_AWSIZE(load35_U0_m_axi_var_input_0_0_V_AWSIZE),
    .m_axi_var_input_0_0_V_AWBURST(load35_U0_m_axi_var_input_0_0_V_AWBURST),
    .m_axi_var_input_0_0_V_AWLOCK(load35_U0_m_axi_var_input_0_0_V_AWLOCK),
    .m_axi_var_input_0_0_V_AWCACHE(load35_U0_m_axi_var_input_0_0_V_AWCACHE),
    .m_axi_var_input_0_0_V_AWPROT(load35_U0_m_axi_var_input_0_0_V_AWPROT),
    .m_axi_var_input_0_0_V_AWQOS(load35_U0_m_axi_var_input_0_0_V_AWQOS),
    .m_axi_var_input_0_0_V_AWREGION(load35_U0_m_axi_var_input_0_0_V_AWREGION),
    .m_axi_var_input_0_0_V_AWUSER(load35_U0_m_axi_var_input_0_0_V_AWUSER),
    .m_axi_var_input_0_0_V_WVALID(load35_U0_m_axi_var_input_0_0_V_WVALID),
    .m_axi_var_input_0_0_V_WREADY(1'b0),
    .m_axi_var_input_0_0_V_WDATA(load35_U0_m_axi_var_input_0_0_V_WDATA),
    .m_axi_var_input_0_0_V_WSTRB(load35_U0_m_axi_var_input_0_0_V_WSTRB),
    .m_axi_var_input_0_0_V_WLAST(load35_U0_m_axi_var_input_0_0_V_WLAST),
    .m_axi_var_input_0_0_V_WID(load35_U0_m_axi_var_input_0_0_V_WID),
    .m_axi_var_input_0_0_V_WUSER(load35_U0_m_axi_var_input_0_0_V_WUSER),
    .m_axi_var_input_0_0_V_ARVALID(load35_U0_m_axi_var_input_0_0_V_ARVALID),
    .m_axi_var_input_0_0_V_ARREADY(chan0bank0_ARREADY),
    .m_axi_var_input_0_0_V_ARADDR(load35_U0_m_axi_var_input_0_0_V_ARADDR),
    .m_axi_var_input_0_0_V_ARID(load35_U0_m_axi_var_input_0_0_V_ARID),
    .m_axi_var_input_0_0_V_ARLEN(load35_U0_m_axi_var_input_0_0_V_ARLEN),
    .m_axi_var_input_0_0_V_ARSIZE(load35_U0_m_axi_var_input_0_0_V_ARSIZE),
    .m_axi_var_input_0_0_V_ARBURST(load35_U0_m_axi_var_input_0_0_V_ARBURST),
    .m_axi_var_input_0_0_V_ARLOCK(load35_U0_m_axi_var_input_0_0_V_ARLOCK),
    .m_axi_var_input_0_0_V_ARCACHE(load35_U0_m_axi_var_input_0_0_V_ARCACHE),
    .m_axi_var_input_0_0_V_ARPROT(load35_U0_m_axi_var_input_0_0_V_ARPROT),
    .m_axi_var_input_0_0_V_ARQOS(load35_U0_m_axi_var_input_0_0_V_ARQOS),
    .m_axi_var_input_0_0_V_ARREGION(load35_U0_m_axi_var_input_0_0_V_ARREGION),
    .m_axi_var_input_0_0_V_ARUSER(load35_U0_m_axi_var_input_0_0_V_ARUSER),
    .m_axi_var_input_0_0_V_RVALID(chan0bank0_RVALID),
    .m_axi_var_input_0_0_V_RREADY(load35_U0_m_axi_var_input_0_0_V_RREADY),
    .m_axi_var_input_0_0_V_RDATA(chan0bank0_RDATA),
    .m_axi_var_input_0_0_V_RLAST(chan0bank0_RLAST),
    .m_axi_var_input_0_0_V_RID(chan0bank0_RID),
    .m_axi_var_input_0_0_V_RUSER(chan0bank0_RUSER),
    .m_axi_var_input_0_0_V_RRESP(chan0bank0_RRESP),
    .m_axi_var_input_0_0_V_BVALID(1'b0),
    .m_axi_var_input_0_0_V_BREADY(load35_U0_m_axi_var_input_0_0_V_BREADY),
    .m_axi_var_input_0_0_V_BRESP(2'd0),
    .m_axi_var_input_0_0_V_BID(1'd0),
    .m_axi_var_input_0_0_V_BUSER(1'd0),
    .var_input_0_0_V_offset_dout(var_input_0_0_V_c_dout),
    .var_input_0_0_V_offset_empty_n(var_input_0_0_V_c_empty_n),
    .var_input_0_0_V_offset_read(load35_U0_var_input_0_0_V_offset_read),
    .coalesced_data_num_dout(coalesced_data_num_c_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c_empty_n),
    .coalesced_data_num_read(load35_U0_coalesced_data_num_read),
    .coalesced_data_num_out_din(load35_U0_coalesced_data_num_out_din),
    .coalesced_data_num_out_full_n(coalesced_data_num_c15_full_n),
    .coalesced_data_num_out_write(load35_U0_coalesced_data_num_out_write)
);

jacobi2d_kernel_load36 load36_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load36_U0_ap_start),
    .ap_done(load36_U0_ap_done),
    .ap_continue(load36_U0_ap_continue),
    .ap_idle(load36_U0_ap_idle),
    .ap_ready(load36_U0_ap_ready),
    .input_stream_0_1_V_V_din(load36_U0_input_stream_0_1_V_V_din),
    .input_stream_0_1_V_V_full_n(input_stream_0_1_V_V_full_n),
    .input_stream_0_1_V_V_write(load36_U0_input_stream_0_1_V_V_write),
    .m_axi_var_input_0_1_V_AWVALID(load36_U0_m_axi_var_input_0_1_V_AWVALID),
    .m_axi_var_input_0_1_V_AWREADY(1'b0),
    .m_axi_var_input_0_1_V_AWADDR(load36_U0_m_axi_var_input_0_1_V_AWADDR),
    .m_axi_var_input_0_1_V_AWID(load36_U0_m_axi_var_input_0_1_V_AWID),
    .m_axi_var_input_0_1_V_AWLEN(load36_U0_m_axi_var_input_0_1_V_AWLEN),
    .m_axi_var_input_0_1_V_AWSIZE(load36_U0_m_axi_var_input_0_1_V_AWSIZE),
    .m_axi_var_input_0_1_V_AWBURST(load36_U0_m_axi_var_input_0_1_V_AWBURST),
    .m_axi_var_input_0_1_V_AWLOCK(load36_U0_m_axi_var_input_0_1_V_AWLOCK),
    .m_axi_var_input_0_1_V_AWCACHE(load36_U0_m_axi_var_input_0_1_V_AWCACHE),
    .m_axi_var_input_0_1_V_AWPROT(load36_U0_m_axi_var_input_0_1_V_AWPROT),
    .m_axi_var_input_0_1_V_AWQOS(load36_U0_m_axi_var_input_0_1_V_AWQOS),
    .m_axi_var_input_0_1_V_AWREGION(load36_U0_m_axi_var_input_0_1_V_AWREGION),
    .m_axi_var_input_0_1_V_AWUSER(load36_U0_m_axi_var_input_0_1_V_AWUSER),
    .m_axi_var_input_0_1_V_WVALID(load36_U0_m_axi_var_input_0_1_V_WVALID),
    .m_axi_var_input_0_1_V_WREADY(1'b0),
    .m_axi_var_input_0_1_V_WDATA(load36_U0_m_axi_var_input_0_1_V_WDATA),
    .m_axi_var_input_0_1_V_WSTRB(load36_U0_m_axi_var_input_0_1_V_WSTRB),
    .m_axi_var_input_0_1_V_WLAST(load36_U0_m_axi_var_input_0_1_V_WLAST),
    .m_axi_var_input_0_1_V_WID(load36_U0_m_axi_var_input_0_1_V_WID),
    .m_axi_var_input_0_1_V_WUSER(load36_U0_m_axi_var_input_0_1_V_WUSER),
    .m_axi_var_input_0_1_V_ARVALID(load36_U0_m_axi_var_input_0_1_V_ARVALID),
    .m_axi_var_input_0_1_V_ARREADY(chan0bank1_ARREADY),
    .m_axi_var_input_0_1_V_ARADDR(load36_U0_m_axi_var_input_0_1_V_ARADDR),
    .m_axi_var_input_0_1_V_ARID(load36_U0_m_axi_var_input_0_1_V_ARID),
    .m_axi_var_input_0_1_V_ARLEN(load36_U0_m_axi_var_input_0_1_V_ARLEN),
    .m_axi_var_input_0_1_V_ARSIZE(load36_U0_m_axi_var_input_0_1_V_ARSIZE),
    .m_axi_var_input_0_1_V_ARBURST(load36_U0_m_axi_var_input_0_1_V_ARBURST),
    .m_axi_var_input_0_1_V_ARLOCK(load36_U0_m_axi_var_input_0_1_V_ARLOCK),
    .m_axi_var_input_0_1_V_ARCACHE(load36_U0_m_axi_var_input_0_1_V_ARCACHE),
    .m_axi_var_input_0_1_V_ARPROT(load36_U0_m_axi_var_input_0_1_V_ARPROT),
    .m_axi_var_input_0_1_V_ARQOS(load36_U0_m_axi_var_input_0_1_V_ARQOS),
    .m_axi_var_input_0_1_V_ARREGION(load36_U0_m_axi_var_input_0_1_V_ARREGION),
    .m_axi_var_input_0_1_V_ARUSER(load36_U0_m_axi_var_input_0_1_V_ARUSER),
    .m_axi_var_input_0_1_V_RVALID(chan0bank1_RVALID),
    .m_axi_var_input_0_1_V_RREADY(load36_U0_m_axi_var_input_0_1_V_RREADY),
    .m_axi_var_input_0_1_V_RDATA(chan0bank1_RDATA),
    .m_axi_var_input_0_1_V_RLAST(chan0bank1_RLAST),
    .m_axi_var_input_0_1_V_RID(chan0bank1_RID),
    .m_axi_var_input_0_1_V_RUSER(chan0bank1_RUSER),
    .m_axi_var_input_0_1_V_RRESP(chan0bank1_RRESP),
    .m_axi_var_input_0_1_V_BVALID(1'b0),
    .m_axi_var_input_0_1_V_BREADY(load36_U0_m_axi_var_input_0_1_V_BREADY),
    .m_axi_var_input_0_1_V_BRESP(2'd0),
    .m_axi_var_input_0_1_V_BID(1'd0),
    .m_axi_var_input_0_1_V_BUSER(1'd0),
    .var_input_0_1_V_offset_dout(var_input_0_1_V_c_dout),
    .var_input_0_1_V_offset_empty_n(var_input_0_1_V_c_empty_n),
    .var_input_0_1_V_offset_read(load36_U0_var_input_0_1_V_offset_read),
    .coalesced_data_num_dout(coalesced_data_num_c12_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c12_empty_n),
    .coalesced_data_num_read(load36_U0_coalesced_data_num_read)
);

jacobi2d_kernel_load37 load37_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load37_U0_ap_start),
    .ap_done(load37_U0_ap_done),
    .ap_continue(load37_U0_ap_continue),
    .ap_idle(load37_U0_ap_idle),
    .ap_ready(load37_U0_ap_ready),
    .input_stream_0_2_V_V_din(load37_U0_input_stream_0_2_V_V_din),
    .input_stream_0_2_V_V_full_n(input_stream_0_2_V_V_full_n),
    .input_stream_0_2_V_V_write(load37_U0_input_stream_0_2_V_V_write),
    .m_axi_var_input_0_2_V_AWVALID(load37_U0_m_axi_var_input_0_2_V_AWVALID),
    .m_axi_var_input_0_2_V_AWREADY(1'b0),
    .m_axi_var_input_0_2_V_AWADDR(load37_U0_m_axi_var_input_0_2_V_AWADDR),
    .m_axi_var_input_0_2_V_AWID(load37_U0_m_axi_var_input_0_2_V_AWID),
    .m_axi_var_input_0_2_V_AWLEN(load37_U0_m_axi_var_input_0_2_V_AWLEN),
    .m_axi_var_input_0_2_V_AWSIZE(load37_U0_m_axi_var_input_0_2_V_AWSIZE),
    .m_axi_var_input_0_2_V_AWBURST(load37_U0_m_axi_var_input_0_2_V_AWBURST),
    .m_axi_var_input_0_2_V_AWLOCK(load37_U0_m_axi_var_input_0_2_V_AWLOCK),
    .m_axi_var_input_0_2_V_AWCACHE(load37_U0_m_axi_var_input_0_2_V_AWCACHE),
    .m_axi_var_input_0_2_V_AWPROT(load37_U0_m_axi_var_input_0_2_V_AWPROT),
    .m_axi_var_input_0_2_V_AWQOS(load37_U0_m_axi_var_input_0_2_V_AWQOS),
    .m_axi_var_input_0_2_V_AWREGION(load37_U0_m_axi_var_input_0_2_V_AWREGION),
    .m_axi_var_input_0_2_V_AWUSER(load37_U0_m_axi_var_input_0_2_V_AWUSER),
    .m_axi_var_input_0_2_V_WVALID(load37_U0_m_axi_var_input_0_2_V_WVALID),
    .m_axi_var_input_0_2_V_WREADY(1'b0),
    .m_axi_var_input_0_2_V_WDATA(load37_U0_m_axi_var_input_0_2_V_WDATA),
    .m_axi_var_input_0_2_V_WSTRB(load37_U0_m_axi_var_input_0_2_V_WSTRB),
    .m_axi_var_input_0_2_V_WLAST(load37_U0_m_axi_var_input_0_2_V_WLAST),
    .m_axi_var_input_0_2_V_WID(load37_U0_m_axi_var_input_0_2_V_WID),
    .m_axi_var_input_0_2_V_WUSER(load37_U0_m_axi_var_input_0_2_V_WUSER),
    .m_axi_var_input_0_2_V_ARVALID(load37_U0_m_axi_var_input_0_2_V_ARVALID),
    .m_axi_var_input_0_2_V_ARREADY(chan0bank2_ARREADY),
    .m_axi_var_input_0_2_V_ARADDR(load37_U0_m_axi_var_input_0_2_V_ARADDR),
    .m_axi_var_input_0_2_V_ARID(load37_U0_m_axi_var_input_0_2_V_ARID),
    .m_axi_var_input_0_2_V_ARLEN(load37_U0_m_axi_var_input_0_2_V_ARLEN),
    .m_axi_var_input_0_2_V_ARSIZE(load37_U0_m_axi_var_input_0_2_V_ARSIZE),
    .m_axi_var_input_0_2_V_ARBURST(load37_U0_m_axi_var_input_0_2_V_ARBURST),
    .m_axi_var_input_0_2_V_ARLOCK(load37_U0_m_axi_var_input_0_2_V_ARLOCK),
    .m_axi_var_input_0_2_V_ARCACHE(load37_U0_m_axi_var_input_0_2_V_ARCACHE),
    .m_axi_var_input_0_2_V_ARPROT(load37_U0_m_axi_var_input_0_2_V_ARPROT),
    .m_axi_var_input_0_2_V_ARQOS(load37_U0_m_axi_var_input_0_2_V_ARQOS),
    .m_axi_var_input_0_2_V_ARREGION(load37_U0_m_axi_var_input_0_2_V_ARREGION),
    .m_axi_var_input_0_2_V_ARUSER(load37_U0_m_axi_var_input_0_2_V_ARUSER),
    .m_axi_var_input_0_2_V_RVALID(chan0bank2_RVALID),
    .m_axi_var_input_0_2_V_RREADY(load37_U0_m_axi_var_input_0_2_V_RREADY),
    .m_axi_var_input_0_2_V_RDATA(chan0bank2_RDATA),
    .m_axi_var_input_0_2_V_RLAST(chan0bank2_RLAST),
    .m_axi_var_input_0_2_V_RID(chan0bank2_RID),
    .m_axi_var_input_0_2_V_RUSER(chan0bank2_RUSER),
    .m_axi_var_input_0_2_V_RRESP(chan0bank2_RRESP),
    .m_axi_var_input_0_2_V_BVALID(1'b0),
    .m_axi_var_input_0_2_V_BREADY(load37_U0_m_axi_var_input_0_2_V_BREADY),
    .m_axi_var_input_0_2_V_BRESP(2'd0),
    .m_axi_var_input_0_2_V_BID(1'd0),
    .m_axi_var_input_0_2_V_BUSER(1'd0),
    .var_input_0_2_V_offset_dout(var_input_0_2_V_c_dout),
    .var_input_0_2_V_offset_empty_n(var_input_0_2_V_c_empty_n),
    .var_input_0_2_V_offset_read(load37_U0_var_input_0_2_V_offset_read),
    .coalesced_data_num_dout(coalesced_data_num_c13_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c13_empty_n),
    .coalesced_data_num_read(load37_U0_coalesced_data_num_read)
);

jacobi2d_kernel_load load_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load_U0_ap_start),
    .ap_done(load_U0_ap_done),
    .ap_continue(load_U0_ap_continue),
    .ap_idle(load_U0_ap_idle),
    .ap_ready(load_U0_ap_ready),
    .to_V_V_din(load_U0_to_V_V_din),
    .to_V_V_full_n(input_stream_0_3_V_V_full_n),
    .to_V_V_write(load_U0_to_V_V_write),
    .m_axi_from_V_AWVALID(load_U0_m_axi_from_V_AWVALID),
    .m_axi_from_V_AWREADY(1'b0),
    .m_axi_from_V_AWADDR(load_U0_m_axi_from_V_AWADDR),
    .m_axi_from_V_AWID(load_U0_m_axi_from_V_AWID),
    .m_axi_from_V_AWLEN(load_U0_m_axi_from_V_AWLEN),
    .m_axi_from_V_AWSIZE(load_U0_m_axi_from_V_AWSIZE),
    .m_axi_from_V_AWBURST(load_U0_m_axi_from_V_AWBURST),
    .m_axi_from_V_AWLOCK(load_U0_m_axi_from_V_AWLOCK),
    .m_axi_from_V_AWCACHE(load_U0_m_axi_from_V_AWCACHE),
    .m_axi_from_V_AWPROT(load_U0_m_axi_from_V_AWPROT),
    .m_axi_from_V_AWQOS(load_U0_m_axi_from_V_AWQOS),
    .m_axi_from_V_AWREGION(load_U0_m_axi_from_V_AWREGION),
    .m_axi_from_V_AWUSER(load_U0_m_axi_from_V_AWUSER),
    .m_axi_from_V_WVALID(load_U0_m_axi_from_V_WVALID),
    .m_axi_from_V_WREADY(1'b0),
    .m_axi_from_V_WDATA(load_U0_m_axi_from_V_WDATA),
    .m_axi_from_V_WSTRB(load_U0_m_axi_from_V_WSTRB),
    .m_axi_from_V_WLAST(load_U0_m_axi_from_V_WLAST),
    .m_axi_from_V_WID(load_U0_m_axi_from_V_WID),
    .m_axi_from_V_WUSER(load_U0_m_axi_from_V_WUSER),
    .m_axi_from_V_ARVALID(load_U0_m_axi_from_V_ARVALID),
    .m_axi_from_V_ARREADY(chan0bank3_ARREADY),
    .m_axi_from_V_ARADDR(load_U0_m_axi_from_V_ARADDR),
    .m_axi_from_V_ARID(load_U0_m_axi_from_V_ARID),
    .m_axi_from_V_ARLEN(load_U0_m_axi_from_V_ARLEN),
    .m_axi_from_V_ARSIZE(load_U0_m_axi_from_V_ARSIZE),
    .m_axi_from_V_ARBURST(load_U0_m_axi_from_V_ARBURST),
    .m_axi_from_V_ARLOCK(load_U0_m_axi_from_V_ARLOCK),
    .m_axi_from_V_ARCACHE(load_U0_m_axi_from_V_ARCACHE),
    .m_axi_from_V_ARPROT(load_U0_m_axi_from_V_ARPROT),
    .m_axi_from_V_ARQOS(load_U0_m_axi_from_V_ARQOS),
    .m_axi_from_V_ARREGION(load_U0_m_axi_from_V_ARREGION),
    .m_axi_from_V_ARUSER(load_U0_m_axi_from_V_ARUSER),
    .m_axi_from_V_RVALID(chan0bank3_RVALID),
    .m_axi_from_V_RREADY(load_U0_m_axi_from_V_RREADY),
    .m_axi_from_V_RDATA(chan0bank3_RDATA),
    .m_axi_from_V_RLAST(chan0bank3_RLAST),
    .m_axi_from_V_RID(chan0bank3_RID),
    .m_axi_from_V_RUSER(chan0bank3_RUSER),
    .m_axi_from_V_RRESP(chan0bank3_RRESP),
    .m_axi_from_V_BVALID(1'b0),
    .m_axi_from_V_BREADY(load_U0_m_axi_from_V_BREADY),
    .m_axi_from_V_BRESP(2'd0),
    .m_axi_from_V_BID(1'd0),
    .m_axi_from_V_BUSER(1'd0),
    .from_V_offset_dout(var_input_0_3_V_c_dout),
    .from_V_offset_empty_n(var_input_0_3_V_c_empty_n),
    .from_V_offset_read(load_U0_from_V_offset_read),
    .coalesced_data_num_dout(coalesced_data_num_c14_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c14_empty_n),
    .coalesced_data_num_read(load_U0_coalesced_data_num_read)
);

jacobi2d_kernel_compute compute_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute_U0_ap_start),
    .ap_done(compute_U0_ap_done),
    .ap_continue(compute_U0_ap_continue),
    .ap_idle(compute_U0_ap_idle),
    .ap_ready(compute_U0_ap_ready),
    .to_chan_0_bank_0_V_V_din(compute_U0_to_chan_0_bank_0_V_V_din),
    .to_chan_0_bank_0_V_V_full_n(output_stream_0_0_V_V_full_n),
    .to_chan_0_bank_0_V_V_write(compute_U0_to_chan_0_bank_0_V_V_write),
    .to_chan_0_bank_1_V_V_din(compute_U0_to_chan_0_bank_1_V_V_din),
    .to_chan_0_bank_1_V_V_full_n(output_stream_0_1_V_V_full_n),
    .to_chan_0_bank_1_V_V_write(compute_U0_to_chan_0_bank_1_V_V_write),
    .to_chan_0_bank_2_V_V_din(compute_U0_to_chan_0_bank_2_V_V_din),
    .to_chan_0_bank_2_V_V_full_n(output_stream_0_2_V_V_full_n),
    .to_chan_0_bank_2_V_V_write(compute_U0_to_chan_0_bank_2_V_V_write),
    .to_chan_0_bank_3_V_V_din(compute_U0_to_chan_0_bank_3_V_V_din),
    .to_chan_0_bank_3_V_V_full_n(output_stream_0_3_V_V_full_n),
    .to_chan_0_bank_3_V_V_write(compute_U0_to_chan_0_bank_3_V_V_write),
    .from_chan_0_bank_0_V_V_dout(input_stream_0_0_V_V_dout),
    .from_chan_0_bank_0_V_V_empty_n(input_stream_0_0_V_V_empty_n),
    .from_chan_0_bank_0_V_V_read(compute_U0_from_chan_0_bank_0_V_V_read),
    .from_chan_0_bank_1_V_V_dout(input_stream_0_1_V_V_dout),
    .from_chan_0_bank_1_V_V_empty_n(input_stream_0_1_V_V_empty_n),
    .from_chan_0_bank_1_V_V_read(compute_U0_from_chan_0_bank_1_V_V_read),
    .from_chan_0_bank_2_V_V_dout(input_stream_0_2_V_V_dout),
    .from_chan_0_bank_2_V_V_empty_n(input_stream_0_2_V_V_empty_n),
    .from_chan_0_bank_2_V_V_read(compute_U0_from_chan_0_bank_2_V_V_read),
    .from_chan_0_bank_3_V_V_dout(input_stream_0_3_V_V_dout),
    .from_chan_0_bank_3_V_V_empty_n(input_stream_0_3_V_V_empty_n),
    .from_chan_0_bank_3_V_V_read(compute_U0_from_chan_0_bank_3_V_V_read),
    .coalesced_data_num_dout(coalesced_data_num_c15_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c15_empty_n),
    .coalesced_data_num_read(compute_U0_coalesced_data_num_read),
    .coalesced_data_num_out_din(compute_U0_coalesced_data_num_out_din),
    .coalesced_data_num_out_full_n(coalesced_data_num_c16_full_n),
    .coalesced_data_num_out_write(compute_U0_coalesced_data_num_out_write),
    .coalesced_data_num_out1_din(compute_U0_coalesced_data_num_out1_din),
    .coalesced_data_num_out1_full_n(coalesced_data_num_c17_full_n),
    .coalesced_data_num_out1_write(compute_U0_coalesced_data_num_out1_write),
    .coalesced_data_num_out2_din(compute_U0_coalesced_data_num_out2_din),
    .coalesced_data_num_out2_full_n(coalesced_data_num_c18_full_n),
    .coalesced_data_num_out2_write(compute_U0_coalesced_data_num_out2_write),
    .coalesced_data_num_out3_din(compute_U0_coalesced_data_num_out3_din),
    .coalesced_data_num_out3_full_n(coalesced_data_num_c19_full_n),
    .coalesced_data_num_out3_write(compute_U0_coalesced_data_num_out3_write)
);

jacobi2d_kernel_store38 store38_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store38_U0_ap_start),
    .ap_done(store38_U0_ap_done),
    .ap_continue(store38_U0_ap_continue),
    .ap_idle(store38_U0_ap_idle),
    .ap_ready(store38_U0_ap_ready),
    .m_axi_var_output_0_0_V_AWVALID(store38_U0_m_axi_var_output_0_0_V_AWVALID),
    .m_axi_var_output_0_0_V_AWREADY(chan0bank0_AWREADY),
    .m_axi_var_output_0_0_V_AWADDR(store38_U0_m_axi_var_output_0_0_V_AWADDR),
    .m_axi_var_output_0_0_V_AWID(store38_U0_m_axi_var_output_0_0_V_AWID),
    .m_axi_var_output_0_0_V_AWLEN(store38_U0_m_axi_var_output_0_0_V_AWLEN),
    .m_axi_var_output_0_0_V_AWSIZE(store38_U0_m_axi_var_output_0_0_V_AWSIZE),
    .m_axi_var_output_0_0_V_AWBURST(store38_U0_m_axi_var_output_0_0_V_AWBURST),
    .m_axi_var_output_0_0_V_AWLOCK(store38_U0_m_axi_var_output_0_0_V_AWLOCK),
    .m_axi_var_output_0_0_V_AWCACHE(store38_U0_m_axi_var_output_0_0_V_AWCACHE),
    .m_axi_var_output_0_0_V_AWPROT(store38_U0_m_axi_var_output_0_0_V_AWPROT),
    .m_axi_var_output_0_0_V_AWQOS(store38_U0_m_axi_var_output_0_0_V_AWQOS),
    .m_axi_var_output_0_0_V_AWREGION(store38_U0_m_axi_var_output_0_0_V_AWREGION),
    .m_axi_var_output_0_0_V_AWUSER(store38_U0_m_axi_var_output_0_0_V_AWUSER),
    .m_axi_var_output_0_0_V_WVALID(store38_U0_m_axi_var_output_0_0_V_WVALID),
    .m_axi_var_output_0_0_V_WREADY(chan0bank0_WREADY),
    .m_axi_var_output_0_0_V_WDATA(store38_U0_m_axi_var_output_0_0_V_WDATA),
    .m_axi_var_output_0_0_V_WSTRB(store38_U0_m_axi_var_output_0_0_V_WSTRB),
    .m_axi_var_output_0_0_V_WLAST(store38_U0_m_axi_var_output_0_0_V_WLAST),
    .m_axi_var_output_0_0_V_WID(store38_U0_m_axi_var_output_0_0_V_WID),
    .m_axi_var_output_0_0_V_WUSER(store38_U0_m_axi_var_output_0_0_V_WUSER),
    .m_axi_var_output_0_0_V_ARVALID(store38_U0_m_axi_var_output_0_0_V_ARVALID),
    .m_axi_var_output_0_0_V_ARREADY(1'b0),
    .m_axi_var_output_0_0_V_ARADDR(store38_U0_m_axi_var_output_0_0_V_ARADDR),
    .m_axi_var_output_0_0_V_ARID(store38_U0_m_axi_var_output_0_0_V_ARID),
    .m_axi_var_output_0_0_V_ARLEN(store38_U0_m_axi_var_output_0_0_V_ARLEN),
    .m_axi_var_output_0_0_V_ARSIZE(store38_U0_m_axi_var_output_0_0_V_ARSIZE),
    .m_axi_var_output_0_0_V_ARBURST(store38_U0_m_axi_var_output_0_0_V_ARBURST),
    .m_axi_var_output_0_0_V_ARLOCK(store38_U0_m_axi_var_output_0_0_V_ARLOCK),
    .m_axi_var_output_0_0_V_ARCACHE(store38_U0_m_axi_var_output_0_0_V_ARCACHE),
    .m_axi_var_output_0_0_V_ARPROT(store38_U0_m_axi_var_output_0_0_V_ARPROT),
    .m_axi_var_output_0_0_V_ARQOS(store38_U0_m_axi_var_output_0_0_V_ARQOS),
    .m_axi_var_output_0_0_V_ARREGION(store38_U0_m_axi_var_output_0_0_V_ARREGION),
    .m_axi_var_output_0_0_V_ARUSER(store38_U0_m_axi_var_output_0_0_V_ARUSER),
    .m_axi_var_output_0_0_V_RVALID(1'b0),
    .m_axi_var_output_0_0_V_RREADY(store38_U0_m_axi_var_output_0_0_V_RREADY),
    .m_axi_var_output_0_0_V_RDATA(512'd0),
    .m_axi_var_output_0_0_V_RLAST(1'b0),
    .m_axi_var_output_0_0_V_RID(1'd0),
    .m_axi_var_output_0_0_V_RUSER(1'd0),
    .m_axi_var_output_0_0_V_RRESP(2'd0),
    .m_axi_var_output_0_0_V_BVALID(chan0bank0_BVALID),
    .m_axi_var_output_0_0_V_BREADY(store38_U0_m_axi_var_output_0_0_V_BREADY),
    .m_axi_var_output_0_0_V_BRESP(chan0bank0_BRESP),
    .m_axi_var_output_0_0_V_BID(chan0bank0_BID),
    .m_axi_var_output_0_0_V_BUSER(chan0bank0_BUSER),
    .var_output_0_0_V_offset_dout(var_output_0_0_V_c_dout),
    .var_output_0_0_V_offset_empty_n(var_output_0_0_V_c_empty_n),
    .var_output_0_0_V_offset_read(store38_U0_var_output_0_0_V_offset_read),
    .output_stream_0_0_V_V_dout(output_stream_0_0_V_V_dout),
    .output_stream_0_0_V_V_empty_n(output_stream_0_0_V_V_empty_n),
    .output_stream_0_0_V_V_read(store38_U0_output_stream_0_0_V_V_read),
    .coalesced_data_num_dout(coalesced_data_num_c16_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c16_empty_n),
    .coalesced_data_num_read(store38_U0_coalesced_data_num_read)
);

jacobi2d_kernel_store39 store39_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store39_U0_ap_start),
    .ap_done(store39_U0_ap_done),
    .ap_continue(store39_U0_ap_continue),
    .ap_idle(store39_U0_ap_idle),
    .ap_ready(store39_U0_ap_ready),
    .m_axi_var_output_0_1_V_AWVALID(store39_U0_m_axi_var_output_0_1_V_AWVALID),
    .m_axi_var_output_0_1_V_AWREADY(chan0bank1_AWREADY),
    .m_axi_var_output_0_1_V_AWADDR(store39_U0_m_axi_var_output_0_1_V_AWADDR),
    .m_axi_var_output_0_1_V_AWID(store39_U0_m_axi_var_output_0_1_V_AWID),
    .m_axi_var_output_0_1_V_AWLEN(store39_U0_m_axi_var_output_0_1_V_AWLEN),
    .m_axi_var_output_0_1_V_AWSIZE(store39_U0_m_axi_var_output_0_1_V_AWSIZE),
    .m_axi_var_output_0_1_V_AWBURST(store39_U0_m_axi_var_output_0_1_V_AWBURST),
    .m_axi_var_output_0_1_V_AWLOCK(store39_U0_m_axi_var_output_0_1_V_AWLOCK),
    .m_axi_var_output_0_1_V_AWCACHE(store39_U0_m_axi_var_output_0_1_V_AWCACHE),
    .m_axi_var_output_0_1_V_AWPROT(store39_U0_m_axi_var_output_0_1_V_AWPROT),
    .m_axi_var_output_0_1_V_AWQOS(store39_U0_m_axi_var_output_0_1_V_AWQOS),
    .m_axi_var_output_0_1_V_AWREGION(store39_U0_m_axi_var_output_0_1_V_AWREGION),
    .m_axi_var_output_0_1_V_AWUSER(store39_U0_m_axi_var_output_0_1_V_AWUSER),
    .m_axi_var_output_0_1_V_WVALID(store39_U0_m_axi_var_output_0_1_V_WVALID),
    .m_axi_var_output_0_1_V_WREADY(chan0bank1_WREADY),
    .m_axi_var_output_0_1_V_WDATA(store39_U0_m_axi_var_output_0_1_V_WDATA),
    .m_axi_var_output_0_1_V_WSTRB(store39_U0_m_axi_var_output_0_1_V_WSTRB),
    .m_axi_var_output_0_1_V_WLAST(store39_U0_m_axi_var_output_0_1_V_WLAST),
    .m_axi_var_output_0_1_V_WID(store39_U0_m_axi_var_output_0_1_V_WID),
    .m_axi_var_output_0_1_V_WUSER(store39_U0_m_axi_var_output_0_1_V_WUSER),
    .m_axi_var_output_0_1_V_ARVALID(store39_U0_m_axi_var_output_0_1_V_ARVALID),
    .m_axi_var_output_0_1_V_ARREADY(1'b0),
    .m_axi_var_output_0_1_V_ARADDR(store39_U0_m_axi_var_output_0_1_V_ARADDR),
    .m_axi_var_output_0_1_V_ARID(store39_U0_m_axi_var_output_0_1_V_ARID),
    .m_axi_var_output_0_1_V_ARLEN(store39_U0_m_axi_var_output_0_1_V_ARLEN),
    .m_axi_var_output_0_1_V_ARSIZE(store39_U0_m_axi_var_output_0_1_V_ARSIZE),
    .m_axi_var_output_0_1_V_ARBURST(store39_U0_m_axi_var_output_0_1_V_ARBURST),
    .m_axi_var_output_0_1_V_ARLOCK(store39_U0_m_axi_var_output_0_1_V_ARLOCK),
    .m_axi_var_output_0_1_V_ARCACHE(store39_U0_m_axi_var_output_0_1_V_ARCACHE),
    .m_axi_var_output_0_1_V_ARPROT(store39_U0_m_axi_var_output_0_1_V_ARPROT),
    .m_axi_var_output_0_1_V_ARQOS(store39_U0_m_axi_var_output_0_1_V_ARQOS),
    .m_axi_var_output_0_1_V_ARREGION(store39_U0_m_axi_var_output_0_1_V_ARREGION),
    .m_axi_var_output_0_1_V_ARUSER(store39_U0_m_axi_var_output_0_1_V_ARUSER),
    .m_axi_var_output_0_1_V_RVALID(1'b0),
    .m_axi_var_output_0_1_V_RREADY(store39_U0_m_axi_var_output_0_1_V_RREADY),
    .m_axi_var_output_0_1_V_RDATA(512'd0),
    .m_axi_var_output_0_1_V_RLAST(1'b0),
    .m_axi_var_output_0_1_V_RID(1'd0),
    .m_axi_var_output_0_1_V_RUSER(1'd0),
    .m_axi_var_output_0_1_V_RRESP(2'd0),
    .m_axi_var_output_0_1_V_BVALID(chan0bank1_BVALID),
    .m_axi_var_output_0_1_V_BREADY(store39_U0_m_axi_var_output_0_1_V_BREADY),
    .m_axi_var_output_0_1_V_BRESP(chan0bank1_BRESP),
    .m_axi_var_output_0_1_V_BID(chan0bank1_BID),
    .m_axi_var_output_0_1_V_BUSER(chan0bank1_BUSER),
    .var_output_0_1_V_offset_dout(var_output_0_1_V_c_dout),
    .var_output_0_1_V_offset_empty_n(var_output_0_1_V_c_empty_n),
    .var_output_0_1_V_offset_read(store39_U0_var_output_0_1_V_offset_read),
    .output_stream_0_1_V_V_dout(output_stream_0_1_V_V_dout),
    .output_stream_0_1_V_V_empty_n(output_stream_0_1_V_V_empty_n),
    .output_stream_0_1_V_V_read(store39_U0_output_stream_0_1_V_V_read),
    .coalesced_data_num_dout(coalesced_data_num_c17_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c17_empty_n),
    .coalesced_data_num_read(store39_U0_coalesced_data_num_read)
);

jacobi2d_kernel_store40 store40_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store40_U0_ap_start),
    .ap_done(store40_U0_ap_done),
    .ap_continue(store40_U0_ap_continue),
    .ap_idle(store40_U0_ap_idle),
    .ap_ready(store40_U0_ap_ready),
    .m_axi_var_output_0_2_V_AWVALID(store40_U0_m_axi_var_output_0_2_V_AWVALID),
    .m_axi_var_output_0_2_V_AWREADY(chan0bank2_AWREADY),
    .m_axi_var_output_0_2_V_AWADDR(store40_U0_m_axi_var_output_0_2_V_AWADDR),
    .m_axi_var_output_0_2_V_AWID(store40_U0_m_axi_var_output_0_2_V_AWID),
    .m_axi_var_output_0_2_V_AWLEN(store40_U0_m_axi_var_output_0_2_V_AWLEN),
    .m_axi_var_output_0_2_V_AWSIZE(store40_U0_m_axi_var_output_0_2_V_AWSIZE),
    .m_axi_var_output_0_2_V_AWBURST(store40_U0_m_axi_var_output_0_2_V_AWBURST),
    .m_axi_var_output_0_2_V_AWLOCK(store40_U0_m_axi_var_output_0_2_V_AWLOCK),
    .m_axi_var_output_0_2_V_AWCACHE(store40_U0_m_axi_var_output_0_2_V_AWCACHE),
    .m_axi_var_output_0_2_V_AWPROT(store40_U0_m_axi_var_output_0_2_V_AWPROT),
    .m_axi_var_output_0_2_V_AWQOS(store40_U0_m_axi_var_output_0_2_V_AWQOS),
    .m_axi_var_output_0_2_V_AWREGION(store40_U0_m_axi_var_output_0_2_V_AWREGION),
    .m_axi_var_output_0_2_V_AWUSER(store40_U0_m_axi_var_output_0_2_V_AWUSER),
    .m_axi_var_output_0_2_V_WVALID(store40_U0_m_axi_var_output_0_2_V_WVALID),
    .m_axi_var_output_0_2_V_WREADY(chan0bank2_WREADY),
    .m_axi_var_output_0_2_V_WDATA(store40_U0_m_axi_var_output_0_2_V_WDATA),
    .m_axi_var_output_0_2_V_WSTRB(store40_U0_m_axi_var_output_0_2_V_WSTRB),
    .m_axi_var_output_0_2_V_WLAST(store40_U0_m_axi_var_output_0_2_V_WLAST),
    .m_axi_var_output_0_2_V_WID(store40_U0_m_axi_var_output_0_2_V_WID),
    .m_axi_var_output_0_2_V_WUSER(store40_U0_m_axi_var_output_0_2_V_WUSER),
    .m_axi_var_output_0_2_V_ARVALID(store40_U0_m_axi_var_output_0_2_V_ARVALID),
    .m_axi_var_output_0_2_V_ARREADY(1'b0),
    .m_axi_var_output_0_2_V_ARADDR(store40_U0_m_axi_var_output_0_2_V_ARADDR),
    .m_axi_var_output_0_2_V_ARID(store40_U0_m_axi_var_output_0_2_V_ARID),
    .m_axi_var_output_0_2_V_ARLEN(store40_U0_m_axi_var_output_0_2_V_ARLEN),
    .m_axi_var_output_0_2_V_ARSIZE(store40_U0_m_axi_var_output_0_2_V_ARSIZE),
    .m_axi_var_output_0_2_V_ARBURST(store40_U0_m_axi_var_output_0_2_V_ARBURST),
    .m_axi_var_output_0_2_V_ARLOCK(store40_U0_m_axi_var_output_0_2_V_ARLOCK),
    .m_axi_var_output_0_2_V_ARCACHE(store40_U0_m_axi_var_output_0_2_V_ARCACHE),
    .m_axi_var_output_0_2_V_ARPROT(store40_U0_m_axi_var_output_0_2_V_ARPROT),
    .m_axi_var_output_0_2_V_ARQOS(store40_U0_m_axi_var_output_0_2_V_ARQOS),
    .m_axi_var_output_0_2_V_ARREGION(store40_U0_m_axi_var_output_0_2_V_ARREGION),
    .m_axi_var_output_0_2_V_ARUSER(store40_U0_m_axi_var_output_0_2_V_ARUSER),
    .m_axi_var_output_0_2_V_RVALID(1'b0),
    .m_axi_var_output_0_2_V_RREADY(store40_U0_m_axi_var_output_0_2_V_RREADY),
    .m_axi_var_output_0_2_V_RDATA(512'd0),
    .m_axi_var_output_0_2_V_RLAST(1'b0),
    .m_axi_var_output_0_2_V_RID(1'd0),
    .m_axi_var_output_0_2_V_RUSER(1'd0),
    .m_axi_var_output_0_2_V_RRESP(2'd0),
    .m_axi_var_output_0_2_V_BVALID(chan0bank2_BVALID),
    .m_axi_var_output_0_2_V_BREADY(store40_U0_m_axi_var_output_0_2_V_BREADY),
    .m_axi_var_output_0_2_V_BRESP(chan0bank2_BRESP),
    .m_axi_var_output_0_2_V_BID(chan0bank2_BID),
    .m_axi_var_output_0_2_V_BUSER(chan0bank2_BUSER),
    .var_output_0_2_V_offset_dout(var_output_0_2_V_c_dout),
    .var_output_0_2_V_offset_empty_n(var_output_0_2_V_c_empty_n),
    .var_output_0_2_V_offset_read(store40_U0_var_output_0_2_V_offset_read),
    .output_stream_0_2_V_V_dout(output_stream_0_2_V_V_dout),
    .output_stream_0_2_V_V_empty_n(output_stream_0_2_V_V_empty_n),
    .output_stream_0_2_V_V_read(store40_U0_output_stream_0_2_V_V_read),
    .coalesced_data_num_dout(coalesced_data_num_c18_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c18_empty_n),
    .coalesced_data_num_read(store40_U0_coalesced_data_num_read)
);

jacobi2d_kernel_store store_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store_U0_ap_start),
    .ap_done(store_U0_ap_done),
    .ap_continue(store_U0_ap_continue),
    .ap_idle(store_U0_ap_idle),
    .ap_ready(store_U0_ap_ready),
    .m_axi_to_V_AWVALID(store_U0_m_axi_to_V_AWVALID),
    .m_axi_to_V_AWREADY(chan0bank3_AWREADY),
    .m_axi_to_V_AWADDR(store_U0_m_axi_to_V_AWADDR),
    .m_axi_to_V_AWID(store_U0_m_axi_to_V_AWID),
    .m_axi_to_V_AWLEN(store_U0_m_axi_to_V_AWLEN),
    .m_axi_to_V_AWSIZE(store_U0_m_axi_to_V_AWSIZE),
    .m_axi_to_V_AWBURST(store_U0_m_axi_to_V_AWBURST),
    .m_axi_to_V_AWLOCK(store_U0_m_axi_to_V_AWLOCK),
    .m_axi_to_V_AWCACHE(store_U0_m_axi_to_V_AWCACHE),
    .m_axi_to_V_AWPROT(store_U0_m_axi_to_V_AWPROT),
    .m_axi_to_V_AWQOS(store_U0_m_axi_to_V_AWQOS),
    .m_axi_to_V_AWREGION(store_U0_m_axi_to_V_AWREGION),
    .m_axi_to_V_AWUSER(store_U0_m_axi_to_V_AWUSER),
    .m_axi_to_V_WVALID(store_U0_m_axi_to_V_WVALID),
    .m_axi_to_V_WREADY(chan0bank3_WREADY),
    .m_axi_to_V_WDATA(store_U0_m_axi_to_V_WDATA),
    .m_axi_to_V_WSTRB(store_U0_m_axi_to_V_WSTRB),
    .m_axi_to_V_WLAST(store_U0_m_axi_to_V_WLAST),
    .m_axi_to_V_WID(store_U0_m_axi_to_V_WID),
    .m_axi_to_V_WUSER(store_U0_m_axi_to_V_WUSER),
    .m_axi_to_V_ARVALID(store_U0_m_axi_to_V_ARVALID),
    .m_axi_to_V_ARREADY(1'b0),
    .m_axi_to_V_ARADDR(store_U0_m_axi_to_V_ARADDR),
    .m_axi_to_V_ARID(store_U0_m_axi_to_V_ARID),
    .m_axi_to_V_ARLEN(store_U0_m_axi_to_V_ARLEN),
    .m_axi_to_V_ARSIZE(store_U0_m_axi_to_V_ARSIZE),
    .m_axi_to_V_ARBURST(store_U0_m_axi_to_V_ARBURST),
    .m_axi_to_V_ARLOCK(store_U0_m_axi_to_V_ARLOCK),
    .m_axi_to_V_ARCACHE(store_U0_m_axi_to_V_ARCACHE),
    .m_axi_to_V_ARPROT(store_U0_m_axi_to_V_ARPROT),
    .m_axi_to_V_ARQOS(store_U0_m_axi_to_V_ARQOS),
    .m_axi_to_V_ARREGION(store_U0_m_axi_to_V_ARREGION),
    .m_axi_to_V_ARUSER(store_U0_m_axi_to_V_ARUSER),
    .m_axi_to_V_RVALID(1'b0),
    .m_axi_to_V_RREADY(store_U0_m_axi_to_V_RREADY),
    .m_axi_to_V_RDATA(512'd0),
    .m_axi_to_V_RLAST(1'b0),
    .m_axi_to_V_RID(1'd0),
    .m_axi_to_V_RUSER(1'd0),
    .m_axi_to_V_RRESP(2'd0),
    .m_axi_to_V_BVALID(chan0bank3_BVALID),
    .m_axi_to_V_BREADY(store_U0_m_axi_to_V_BREADY),
    .m_axi_to_V_BRESP(chan0bank3_BRESP),
    .m_axi_to_V_BID(chan0bank3_BID),
    .m_axi_to_V_BUSER(chan0bank3_BUSER),
    .to_V_offset_dout(var_output_0_3_V_c_dout),
    .to_V_offset_empty_n(var_output_0_3_V_c_empty_n),
    .to_V_offset_read(store_U0_to_V_offset_read),
    .from_V_V_dout(output_stream_0_3_V_V_dout),
    .from_V_V_empty_n(output_stream_0_3_V_V_empty_n),
    .from_V_V_read(store_U0_from_V_V_read),
    .coalesced_data_num_dout(coalesced_data_num_c19_dout),
    .coalesced_data_num_empty_n(coalesced_data_num_c19_empty_n),
    .coalesced_data_num_read(store_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_din),
    .if_full_n(coalesced_data_num_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out_write),
    .if_dout(coalesced_data_num_c_dout),
    .if_empty_n(coalesced_data_num_c_empty_n),
    .if_read(load35_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_din),
    .if_full_n(coalesced_data_num_c12_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out1_write),
    .if_dout(coalesced_data_num_c12_dout),
    .if_empty_n(coalesced_data_num_c12_empty_n),
    .if_read(load36_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_din),
    .if_full_n(coalesced_data_num_c13_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out2_write),
    .if_dout(coalesced_data_num_c13_dout),
    .if_empty_n(coalesced_data_num_c13_empty_n),
    .if_read(load37_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_din),
    .if_full_n(coalesced_data_num_c14_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_coalesced_data_num_out3_write),
    .if_dout(coalesced_data_num_c14_dout),
    .if_empty_n(coalesced_data_num_c14_empty_n),
    .if_read(load_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w32_d4_A var_output_0_0_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_din),
    .if_full_n(var_output_0_0_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_output_0_0_V_out_write),
    .if_dout(var_output_0_0_V_c_dout),
    .if_empty_n(var_output_0_0_V_c_empty_n),
    .if_read(store38_U0_var_output_0_0_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d4_A var_output_0_1_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_din),
    .if_full_n(var_output_0_1_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_output_0_1_V_out_write),
    .if_dout(var_output_0_1_V_c_dout),
    .if_empty_n(var_output_0_1_V_c_empty_n),
    .if_read(store39_U0_var_output_0_1_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d4_A var_output_0_2_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_din),
    .if_full_n(var_output_0_2_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_output_0_2_V_out_write),
    .if_dout(var_output_0_2_V_c_dout),
    .if_empty_n(var_output_0_2_V_c_empty_n),
    .if_read(store40_U0_var_output_0_2_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d4_A var_output_0_3_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_din),
    .if_full_n(var_output_0_3_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_output_0_3_V_out_write),
    .if_dout(var_output_0_3_V_c_dout),
    .if_empty_n(var_output_0_3_V_c_empty_n),
    .if_read(store_U0_to_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d2_A var_input_0_0_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_din),
    .if_full_n(var_input_0_0_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_input_0_0_V_out_write),
    .if_dout(var_input_0_0_V_c_dout),
    .if_empty_n(var_input_0_0_V_c_empty_n),
    .if_read(load35_U0_var_input_0_0_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d2_A var_input_0_1_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_din),
    .if_full_n(var_input_0_1_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_input_0_1_V_out_write),
    .if_dout(var_input_0_1_V_c_dout),
    .if_empty_n(var_input_0_1_V_c_empty_n),
    .if_read(load36_U0_var_input_0_1_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d2_A var_input_0_2_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_din),
    .if_full_n(var_input_0_2_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_input_0_2_V_out_write),
    .if_dout(var_input_0_2_V_c_dout),
    .if_empty_n(var_input_0_2_V_c_empty_n),
    .if_read(load37_U0_var_input_0_2_V_offset_read)
);

jacobi2d_kernel_fifo_w32_d2_A var_input_0_3_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_din),
    .if_full_n(var_input_0_3_V_c_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_var_input_0_3_V_out_write),
    .if_dout(var_input_0_3_V_c_dout),
    .if_empty_n(var_input_0_3_V_c_empty_n),
    .if_read(load_U0_from_V_offset_read)
);

jacobi2d_kernel_fifo_w512_d32_A input_stream_0_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load35_U0_input_stream_0_0_V_V_din),
    .if_full_n(input_stream_0_0_V_V_full_n),
    .if_write(load35_U0_input_stream_0_0_V_V_write),
    .if_dout(input_stream_0_0_V_V_dout),
    .if_empty_n(input_stream_0_0_V_V_empty_n),
    .if_read(compute_U0_from_chan_0_bank_0_V_V_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load35_U0_coalesced_data_num_out_din),
    .if_full_n(coalesced_data_num_c15_full_n),
    .if_write(load35_U0_coalesced_data_num_out_write),
    .if_dout(coalesced_data_num_c15_dout),
    .if_empty_n(coalesced_data_num_c15_empty_n),
    .if_read(compute_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w512_d32_A input_stream_0_1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load36_U0_input_stream_0_1_V_V_din),
    .if_full_n(input_stream_0_1_V_V_full_n),
    .if_write(load36_U0_input_stream_0_1_V_V_write),
    .if_dout(input_stream_0_1_V_V_dout),
    .if_empty_n(input_stream_0_1_V_V_empty_n),
    .if_read(compute_U0_from_chan_0_bank_1_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A input_stream_0_2_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load37_U0_input_stream_0_2_V_V_din),
    .if_full_n(input_stream_0_2_V_V_full_n),
    .if_write(load37_U0_input_stream_0_2_V_V_write),
    .if_dout(input_stream_0_2_V_V_dout),
    .if_empty_n(input_stream_0_2_V_V_empty_n),
    .if_read(compute_U0_from_chan_0_bank_2_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A input_stream_0_3_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_U0_to_V_V_din),
    .if_full_n(input_stream_0_3_V_V_full_n),
    .if_write(load_U0_to_V_V_write),
    .if_dout(input_stream_0_3_V_V_dout),
    .if_empty_n(input_stream_0_3_V_V_empty_n),
    .if_read(compute_U0_from_chan_0_bank_3_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A output_stream_0_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_to_chan_0_bank_0_V_V_din),
    .if_full_n(output_stream_0_0_V_V_full_n),
    .if_write(compute_U0_to_chan_0_bank_0_V_V_write),
    .if_dout(output_stream_0_0_V_V_dout),
    .if_empty_n(output_stream_0_0_V_V_empty_n),
    .if_read(store38_U0_output_stream_0_0_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A output_stream_0_1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_to_chan_0_bank_1_V_V_din),
    .if_full_n(output_stream_0_1_V_V_full_n),
    .if_write(compute_U0_to_chan_0_bank_1_V_V_write),
    .if_dout(output_stream_0_1_V_V_dout),
    .if_empty_n(output_stream_0_1_V_V_empty_n),
    .if_read(store39_U0_output_stream_0_1_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A output_stream_0_2_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_to_chan_0_bank_2_V_V_din),
    .if_full_n(output_stream_0_2_V_V_full_n),
    .if_write(compute_U0_to_chan_0_bank_2_V_V_write),
    .if_dout(output_stream_0_2_V_V_dout),
    .if_empty_n(output_stream_0_2_V_V_empty_n),
    .if_read(store40_U0_output_stream_0_2_V_V_read)
);

jacobi2d_kernel_fifo_w512_d32_A output_stream_0_3_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_to_chan_0_bank_3_V_V_din),
    .if_full_n(output_stream_0_3_V_V_full_n),
    .if_write(compute_U0_to_chan_0_bank_3_V_V_write),
    .if_dout(output_stream_0_3_V_V_dout),
    .if_empty_n(output_stream_0_3_V_V_empty_n),
    .if_read(store_U0_from_V_V_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_coalesced_data_num_out_din),
    .if_full_n(coalesced_data_num_c16_full_n),
    .if_write(compute_U0_coalesced_data_num_out_write),
    .if_dout(coalesced_data_num_c16_dout),
    .if_empty_n(coalesced_data_num_c16_empty_n),
    .if_read(store38_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_coalesced_data_num_out1_din),
    .if_full_n(coalesced_data_num_c17_full_n),
    .if_write(compute_U0_coalesced_data_num_out1_write),
    .if_dout(coalesced_data_num_c17_dout),
    .if_empty_n(coalesced_data_num_c17_empty_n),
    .if_read(store39_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_coalesced_data_num_out2_din),
    .if_full_n(coalesced_data_num_c18_full_n),
    .if_write(compute_U0_coalesced_data_num_out2_write),
    .if_dout(coalesced_data_num_c18_dout),
    .if_empty_n(coalesced_data_num_c18_empty_n),
    .if_read(store40_U0_coalesced_data_num_read)
);

jacobi2d_kernel_fifo_w64_d2_A coalesced_data_num_c19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_U0_coalesced_data_num_out3_din),
    .if_full_n(coalesced_data_num_c19_full_n),
    .if_write(compute_U0_coalesced_data_num_out3_write),
    .if_dout(coalesced_data_num_c19_dout),
    .if_empty_n(coalesced_data_num_c19_empty_n),
    .if_read(store_U0_coalesced_data_num_read)
);

jacobi2d_kernel_start_for_store38_U0 start_for_store38_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store38_U0_din),
    .if_full_n(start_for_store38_U0_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_start_write),
    .if_dout(start_for_store38_U0_dout),
    .if_empty_n(start_for_store38_U0_empty_n),
    .if_read(store38_U0_ap_ready)
);

jacobi2d_kernel_start_for_store39_U0 start_for_store39_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store39_U0_din),
    .if_full_n(start_for_store39_U0_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_start_write),
    .if_dout(start_for_store39_U0_dout),
    .if_empty_n(start_for_store39_U0_empty_n),
    .if_read(store39_U0_ap_ready)
);

jacobi2d_kernel_start_for_store40_U0 start_for_store40_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store40_U0_din),
    .if_full_n(start_for_store40_U0_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_start_write),
    .if_dout(start_for_store40_U0_dout),
    .if_empty_n(start_for_store40_U0_empty_n),
    .if_read(store40_U0_ap_ready)
);

jacobi2d_kernel_start_for_store_U0 start_for_store_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store_U0_din),
    .if_full_n(start_for_store_U0_full_n),
    .if_write(jacobi2d_kernel_entry118311_U0_start_write),
    .if_dout(start_for_store_U0_dout),
    .if_empty_n(start_for_store_U0_empty_n),
    .if_read(store_U0_ap_ready)
);

jacobi2d_kernel_start_for_compute_U0 start_for_compute_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute_U0_din),
    .if_full_n(start_for_compute_U0_full_n),
    .if_write(load35_U0_start_write),
    .if_dout(start_for_compute_U0_dout),
    .if_empty_n(start_for_compute_U0_empty_n),
    .if_read(compute_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready <= ap_sync_jacobi2d_kernel_entry118311_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load35_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load35_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load35_U0_ap_ready <= ap_sync_load35_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load36_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load36_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load36_U0_ap_ready <= ap_sync_load36_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load37_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load37_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load37_U0_ap_ready <= ap_sync_load37_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_U0_ap_ready <= ap_sync_load_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((jacobi2d_kernel_entry118311_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        jacobi2d_kernel_entry118311_U0_ap_ready_count <= (jacobi2d_kernel_entry118311_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (jacobi2d_kernel_entry118311_U0_ap_ready == 1'b1))) begin
        jacobi2d_kernel_entry118311_U0_ap_ready_count <= (jacobi2d_kernel_entry118311_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((load35_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        load35_U0_ap_ready_count <= (load35_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (load35_U0_ap_ready == 1'b1))) begin
        load35_U0_ap_ready_count <= (load35_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((load36_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        load36_U0_ap_ready_count <= (load36_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (load36_U0_ap_ready == 1'b1))) begin
        load36_U0_ap_ready_count <= (load36_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((load37_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        load37_U0_ap_ready_count <= (load37_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (load37_U0_ap_ready == 1'b1))) begin
        load37_U0_ap_ready_count <= (load37_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((load_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        load_U0_ap_ready_count <= (load_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (load_U0_ap_ready == 1'b1))) begin
        load_U0_ap_ready_count <= (load_U0_ap_ready_count + 2'd1);
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (store_U0_ap_idle & store40_U0_ap_idle & store39_U0_ap_idle & store38_U0_ap_idle & load_U0_ap_idle & load37_U0_ap_idle & load36_U0_ap_idle & load35_U0_ap_idle & jacobi2d_kernel_entry118311_U0_ap_idle & compute_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = (store_U0_ap_done & store40_U0_ap_done & store39_U0_ap_done & store38_U0_ap_done);

assign ap_sync_jacobi2d_kernel_entry118311_U0_ap_ready = (jacobi2d_kernel_entry118311_U0_ap_ready | ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready);

assign ap_sync_load35_U0_ap_ready = (load35_U0_ap_ready | ap_sync_reg_load35_U0_ap_ready);

assign ap_sync_load36_U0_ap_ready = (load36_U0_ap_ready | ap_sync_reg_load36_U0_ap_ready);

assign ap_sync_load37_U0_ap_ready = (load37_U0_ap_ready | ap_sync_reg_load37_U0_ap_ready);

assign ap_sync_load_U0_ap_ready = (load_U0_ap_ready | ap_sync_reg_load_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_U0_ap_ready & ap_sync_load37_U0_ap_ready & ap_sync_load36_U0_ap_ready & ap_sync_load35_U0_ap_ready & ap_sync_jacobi2d_kernel_entry118311_U0_ap_ready);

assign compute_U0_ap_continue = 1'b1;

assign compute_U0_ap_start = start_for_compute_U0_empty_n;

assign compute_U0_start_full_n = 1'b1;

assign compute_U0_start_write = 1'b0;

assign jacobi2d_kernel_entry118311_U0_ap_continue = 1'b1;

assign jacobi2d_kernel_entry118311_U0_ap_start = ((ap_sync_reg_jacobi2d_kernel_entry118311_U0_ap_ready ^ 1'b1) & ap_start);

assign jacobi2d_kernel_entry118311_U0_start_full_n = (start_for_store_U0_full_n & start_for_store40_U0_full_n & start_for_store39_U0_full_n & start_for_store38_U0_full_n);

assign load35_U0_ap_continue = 1'b1;

assign load35_U0_ap_start = ((ap_sync_reg_load35_U0_ap_ready ^ 1'b1) & ap_start);

assign load36_U0_ap_continue = 1'b1;

assign load36_U0_ap_start = ((ap_sync_reg_load36_U0_ap_ready ^ 1'b1) & ap_start);

assign load36_U0_start_full_n = 1'b1;

assign load36_U0_start_write = 1'b0;

assign load37_U0_ap_continue = 1'b1;

assign load37_U0_ap_start = ((ap_sync_reg_load37_U0_ap_ready ^ 1'b1) & ap_start);

assign load37_U0_start_full_n = 1'b1;

assign load37_U0_start_write = 1'b0;

assign load_U0_ap_continue = 1'b1;

assign load_U0_ap_start = ((ap_sync_reg_load_U0_ap_ready ^ 1'b1) & ap_start);

assign load_U0_start_full_n = 1'b1;

assign load_U0_start_write = 1'b0;

assign start_for_compute_U0_din = 1'b1;

assign start_for_store38_U0_din = 1'b1;

assign start_for_store39_U0_din = 1'b1;

assign start_for_store40_U0_din = 1'b1;

assign start_for_store_U0_din = 1'b1;

assign store38_U0_ap_continue = ap_sync_done;

assign store38_U0_ap_start = start_for_store38_U0_empty_n;

assign store38_U0_start_full_n = 1'b1;

assign store38_U0_start_write = 1'b0;

assign store39_U0_ap_continue = ap_sync_done;

assign store39_U0_ap_start = start_for_store39_U0_empty_n;

assign store39_U0_start_full_n = 1'b1;

assign store39_U0_start_write = 1'b0;

assign store40_U0_ap_continue = ap_sync_done;

assign store40_U0_ap_start = start_for_store40_U0_empty_n;

assign store40_U0_start_full_n = 1'b1;

assign store40_U0_start_write = 1'b0;

assign store_U0_ap_continue = ap_sync_done;

assign store_U0_ap_start = start_for_store_U0_empty_n;

assign store_U0_start_full_n = 1'b1;

assign store_U0_start_write = 1'b0;

endmodule //jacobi2d_kernel_jacobi2d_kernel


// first-word fall-through (FWFT) FIFO
// if its capacity > THRESHOLD bits, it uses block RAM, otherwise it will uses
// shift register LUT
module fifo_almost_full #(
  parameter DATA_WIDTH = 32,
  parameter ADDR_WIDTH = 5,
  parameter DEPTH      = 32,
  parameter THRESHOLD  = 18432,
  parameter GRACE_PERIOD = 2
) (
  input wire clk,
  input wire reset,

  // write
  output wire                  if_full_n,
  input  wire                  if_write_ce,
  input  wire                  if_write,
  input  wire [DATA_WIDTH-1:0] if_din,

  // read
  output wire                  if_empty_n,
  input  wire                  if_read_ce,
  input  wire                  if_read,
  output wire [DATA_WIDTH-1:0] if_dout
);

generate
  if (DATA_WIDTH * DEPTH > THRESHOLD) begin : bram
    fifo_bram_almost_full #(
      .DATA_WIDTH(DATA_WIDTH),
      .ADDR_WIDTH(ADDR_WIDTH),
      .DEPTH     (DEPTH),
      .GRACE_PERIOD(GRACE_PERIOD) /*********/
    ) unit (
      .clk  (clk),
      .reset(reset),

      .if_full_n  (if_full_n),
      .if_write_ce(if_write_ce),
      .if_write   (if_write),
      .if_din     (if_din),

      .if_empty_n(if_empty_n),
      .if_read_ce(if_read_ce),
      .if_read   (if_read),
      .if_dout   (if_dout)
    );
  end else begin : srl
    fifo_srl_almost_full #(
      .DATA_WIDTH(DATA_WIDTH),
      .ADDR_WIDTH(ADDR_WIDTH),
      .DEPTH     (DEPTH),
      .GRACE_PERIOD(GRACE_PERIOD) /*********/
    ) unit (
      .clk  (clk),
      .reset(reset),

      .if_full_n  (if_full_n),
      .if_write_ce(if_write_ce),
      .if_write   (if_write),
      .if_din     (if_din),

      .if_empty_n(if_empty_n),
      .if_read_ce(if_read_ce),
      .if_read   (if_read),
      .if_dout   (if_dout)
    );
  end
endgenerate

endmodule  // fifo

/////////////////////////////////////////////////////////////////

module fifo_srl_almost_full (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd32;
parameter ADDR_WIDTH  = 32'd4;
parameter DEPTH       = 5'd16;

/*******************************************/
parameter GRACE_PERIOD = 2;
/*******************************************/

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0, internal_full_n = 1;

assign if_empty_n = internal_empty_n;

/*******************************************/
// assign if_full_n = internal_full_n;
wire almost_full = mOutPtr >= DEPTH - 2 - GRACE_PERIOD && mOutPtr != ~{ADDR_WIDTH+1{1'b0}};
assign if_full_n = ~almost_full;
/*******************************************/

assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 5'd1;
            if (mOutPtr == 0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 5'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 5'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

fifo_srl_almost_full_internal 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_fifo_w32_d16_A_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

module fifo_srl_almost_full_internal (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd32;
parameter ADDR_WIDTH = 32'd4;
parameter DEPTH = 5'd16;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

///////////////////////////////////////////////////////////

// first-word fall-through (FWFT) FIFO using block RAM
// based on HLS generated code
module fifo_bram_almost_full #(
  parameter MEM_STYLE  = "block",
  parameter DATA_WIDTH = 32,
  parameter ADDR_WIDTH = 5,
  parameter DEPTH      = 32,
  parameter GRACE_PERIOD = 2
) (
  input wire clk,
  input wire reset,

  // write
  output wire                  if_full_n,
  input  wire                  if_write_ce,
  input  wire                  if_write,
  input  wire [DATA_WIDTH-1:0] if_din,

  // read
  output wire                  if_empty_n,
  input  wire                  if_read_ce,
  input  wire                  if_read,
  output wire [DATA_WIDTH-1:0] if_dout
);

(* ram_style = MEM_STYLE *)
reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
reg  [DATA_WIDTH-1:0] q_buf;
reg  [ADDR_WIDTH-1:0] waddr;
reg  [ADDR_WIDTH-1:0] raddr;
wire [ADDR_WIDTH-1:0] wnext;
wire [ADDR_WIDTH-1:0] rnext;
wire                  push;
wire                  pop;
reg  [ADDR_WIDTH-1:0] used;
reg                   full_n;
reg                   empty_n;
reg  [DATA_WIDTH-1:0] q_tmp;
reg                   show_ahead;
reg  [DATA_WIDTH-1:0] dout_buf;
reg                   dout_valid;

localparam DepthM1 = DEPTH[ADDR_WIDTH-1:0] - 1'd1;

/**************************************/
wire almost_full = (used >= DEPTH - 1 - GRACE_PERIOD);
//assign if_full_n  = full_n;
assign if_full_n  = ~almost_full;
/**************************************/

assign if_empty_n = dout_valid;
assign if_dout    = dout_buf;
assign push       = full_n & if_write_ce & if_write;
assign pop        = empty_n & if_read_ce & (~dout_valid | if_read);
assign wnext      = !push              ? waddr              :
                    (waddr == DepthM1) ? {ADDR_WIDTH{1'b0}} : waddr + 1'd1;
assign rnext      = !pop               ? raddr              :
                    (raddr == DepthM1) ? {ADDR_WIDTH{1'b0}} : raddr + 1'd1;



// waddr
always @(posedge clk) begin
  if (reset)
    waddr <= {ADDR_WIDTH{1'b0}};
  else
    waddr <= wnext;
end

// raddr
always @(posedge clk) begin
  if (reset)
    raddr <= {ADDR_WIDTH{1'b0}};
  else
    raddr <= rnext;
end

// used
always @(posedge clk) begin
  if (reset)
    used <= {ADDR_WIDTH{1'b0}};
  else if (push && !pop)
    used <= used + 1'b1;
  else if (!push && pop)
    used <= used - 1'b1;
end

// full_n
always @(posedge clk) begin
  if (reset)
    full_n <= 1'b1;
  else if (push && !pop)
    full_n <= (used != DepthM1);
  else if (!push && pop)
    full_n <= 1'b1;
end

// empty_n
always @(posedge clk) begin
  if (reset)
    empty_n <= 1'b0;
  else if (push && !pop)
    empty_n <= 1'b1;
  else if (!push && pop)
    empty_n <= (used != {{(ADDR_WIDTH-1){1'b0}},1'b1});
end

// mem
always @(posedge clk) begin
  if (push)
    mem[waddr] <= if_din;
end

// q_buf
always @(posedge clk) begin
  q_buf <= mem[rnext];
end

// q_tmp
always @(posedge clk) begin
  if (reset)
    q_tmp <= {DATA_WIDTH{1'b0}};
  else if (push)
    q_tmp <= if_din;
end

// show_ahead
always @(posedge clk) begin
  if (reset)
    show_ahead <= 1'b0;
  else if (push && used == {{(ADDR_WIDTH-1){1'b0}},pop})
    show_ahead <= 1'b1;
  else
    show_ahead <= 1'b0;
end

// dout_buf
always @(posedge clk) begin
  if (reset)
    dout_buf <= {DATA_WIDTH{1'b0}};
  else if (pop)
    dout_buf <= show_ahead? q_tmp : q_buf;
end

// dout_valid
always @(posedge clk) begin
  if (reset)
    dout_valid <= 1'b0;
  else if (pop)
    dout_valid <= 1'b1;
  else if (if_read_ce & if_read)
    dout_valid <= 1'b0;
end

endmodule  // fifo_bram


