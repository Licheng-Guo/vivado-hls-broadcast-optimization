// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vector_dot_wrapper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_buffer_0_address0,
        a_buffer_0_ce0,
        a_buffer_0_q0,
        a_buffer_1_address0,
        a_buffer_1_ce0,
        a_buffer_1_q0,
        a_buffer_2_address0,
        a_buffer_2_ce0,
        a_buffer_2_q0,
        a_buffer_3_address0,
        a_buffer_3_ce0,
        a_buffer_3_q0,
        a_buffer_4_address0,
        a_buffer_4_ce0,
        a_buffer_4_q0,
        a_buffer_5_address0,
        a_buffer_5_ce0,
        a_buffer_5_q0,
        a_buffer_6_address0,
        a_buffer_6_ce0,
        a_buffer_6_q0,
        a_buffer_7_address0,
        a_buffer_7_ce0,
        a_buffer_7_q0,
        a_buffer_8_address0,
        a_buffer_8_ce0,
        a_buffer_8_q0,
        a_buffer_9_address0,
        a_buffer_9_ce0,
        a_buffer_9_q0,
        a_buffer_10_address0,
        a_buffer_10_ce0,
        a_buffer_10_q0,
        a_buffer_11_address0,
        a_buffer_11_ce0,
        a_buffer_11_q0,
        a_buffer_12_address0,
        a_buffer_12_ce0,
        a_buffer_12_q0,
        a_buffer_13_address0,
        a_buffer_13_ce0,
        a_buffer_13_q0,
        a_buffer_14_address0,
        a_buffer_14_ce0,
        a_buffer_14_q0,
        a_buffer_15_address0,
        a_buffer_15_ce0,
        a_buffer_15_q0,
        a_buffer_16_address0,
        a_buffer_16_ce0,
        a_buffer_16_q0,
        a_buffer_17_address0,
        a_buffer_17_ce0,
        a_buffer_17_q0,
        a_buffer_18_address0,
        a_buffer_18_ce0,
        a_buffer_18_q0,
        a_buffer_19_address0,
        a_buffer_19_ce0,
        a_buffer_19_q0,
        a_buffer_20_address0,
        a_buffer_20_ce0,
        a_buffer_20_q0,
        a_buffer_21_address0,
        a_buffer_21_ce0,
        a_buffer_21_q0,
        a_buffer_22_address0,
        a_buffer_22_ce0,
        a_buffer_22_q0,
        a_buffer_23_address0,
        a_buffer_23_ce0,
        a_buffer_23_q0,
        a_buffer_24_address0,
        a_buffer_24_ce0,
        a_buffer_24_q0,
        a_buffer_25_address0,
        a_buffer_25_ce0,
        a_buffer_25_q0,
        a_buffer_26_address0,
        a_buffer_26_ce0,
        a_buffer_26_q0,
        a_buffer_27_address0,
        a_buffer_27_ce0,
        a_buffer_27_q0,
        a_buffer_28_address0,
        a_buffer_28_ce0,
        a_buffer_28_q0,
        a_buffer_29_address0,
        a_buffer_29_ce0,
        a_buffer_29_q0,
        a_buffer_30_address0,
        a_buffer_30_ce0,
        a_buffer_30_q0,
        a_buffer_31_address0,
        a_buffer_31_ce0,
        a_buffer_31_q0,
        b_address0,
        b_ce0,
        b_q0,
        result_address0,
        result_ce0,
        result_we0,
        result_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state7 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state71 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] a_buffer_0_address0;
output   a_buffer_0_ce0;
input  [31:0] a_buffer_0_q0;
output  [4:0] a_buffer_1_address0;
output   a_buffer_1_ce0;
input  [31:0] a_buffer_1_q0;
output  [4:0] a_buffer_2_address0;
output   a_buffer_2_ce0;
input  [31:0] a_buffer_2_q0;
output  [4:0] a_buffer_3_address0;
output   a_buffer_3_ce0;
input  [31:0] a_buffer_3_q0;
output  [4:0] a_buffer_4_address0;
output   a_buffer_4_ce0;
input  [31:0] a_buffer_4_q0;
output  [4:0] a_buffer_5_address0;
output   a_buffer_5_ce0;
input  [31:0] a_buffer_5_q0;
output  [4:0] a_buffer_6_address0;
output   a_buffer_6_ce0;
input  [31:0] a_buffer_6_q0;
output  [4:0] a_buffer_7_address0;
output   a_buffer_7_ce0;
input  [31:0] a_buffer_7_q0;
output  [4:0] a_buffer_8_address0;
output   a_buffer_8_ce0;
input  [31:0] a_buffer_8_q0;
output  [4:0] a_buffer_9_address0;
output   a_buffer_9_ce0;
input  [31:0] a_buffer_9_q0;
output  [4:0] a_buffer_10_address0;
output   a_buffer_10_ce0;
input  [31:0] a_buffer_10_q0;
output  [4:0] a_buffer_11_address0;
output   a_buffer_11_ce0;
input  [31:0] a_buffer_11_q0;
output  [4:0] a_buffer_12_address0;
output   a_buffer_12_ce0;
input  [31:0] a_buffer_12_q0;
output  [4:0] a_buffer_13_address0;
output   a_buffer_13_ce0;
input  [31:0] a_buffer_13_q0;
output  [4:0] a_buffer_14_address0;
output   a_buffer_14_ce0;
input  [31:0] a_buffer_14_q0;
output  [4:0] a_buffer_15_address0;
output   a_buffer_15_ce0;
input  [31:0] a_buffer_15_q0;
output  [4:0] a_buffer_16_address0;
output   a_buffer_16_ce0;
input  [31:0] a_buffer_16_q0;
output  [4:0] a_buffer_17_address0;
output   a_buffer_17_ce0;
input  [31:0] a_buffer_17_q0;
output  [4:0] a_buffer_18_address0;
output   a_buffer_18_ce0;
input  [31:0] a_buffer_18_q0;
output  [4:0] a_buffer_19_address0;
output   a_buffer_19_ce0;
input  [31:0] a_buffer_19_q0;
output  [4:0] a_buffer_20_address0;
output   a_buffer_20_ce0;
input  [31:0] a_buffer_20_q0;
output  [4:0] a_buffer_21_address0;
output   a_buffer_21_ce0;
input  [31:0] a_buffer_21_q0;
output  [4:0] a_buffer_22_address0;
output   a_buffer_22_ce0;
input  [31:0] a_buffer_22_q0;
output  [4:0] a_buffer_23_address0;
output   a_buffer_23_ce0;
input  [31:0] a_buffer_23_q0;
output  [4:0] a_buffer_24_address0;
output   a_buffer_24_ce0;
input  [31:0] a_buffer_24_q0;
output  [4:0] a_buffer_25_address0;
output   a_buffer_25_ce0;
input  [31:0] a_buffer_25_q0;
output  [4:0] a_buffer_26_address0;
output   a_buffer_26_ce0;
input  [31:0] a_buffer_26_q0;
output  [4:0] a_buffer_27_address0;
output   a_buffer_27_ce0;
input  [31:0] a_buffer_27_q0;
output  [4:0] a_buffer_28_address0;
output   a_buffer_28_ce0;
input  [31:0] a_buffer_28_q0;
output  [4:0] a_buffer_29_address0;
output   a_buffer_29_ce0;
input  [31:0] a_buffer_29_q0;
output  [4:0] a_buffer_30_address0;
output   a_buffer_30_ce0;
input  [31:0] a_buffer_30_q0;
output  [4:0] a_buffer_31_address0;
output   a_buffer_31_ce0;
input  [31:0] a_buffer_31_q0;
output  [4:0] b_address0;
output   b_ce0;
input  [31:0] b_q0;
output  [4:0] result_address0;
output   result_ce0;
output   result_we0;
output  [31:0] result_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_buffer_0_ce0;
reg a_buffer_1_ce0;
reg a_buffer_2_ce0;
reg a_buffer_3_ce0;
reg a_buffer_4_ce0;
reg a_buffer_5_ce0;
reg a_buffer_6_ce0;
reg a_buffer_7_ce0;
reg a_buffer_8_ce0;
reg a_buffer_9_ce0;
reg a_buffer_10_ce0;
reg a_buffer_11_ce0;
reg a_buffer_12_ce0;
reg a_buffer_13_ce0;
reg a_buffer_14_ce0;
reg a_buffer_15_ce0;
reg a_buffer_16_ce0;
reg a_buffer_17_ce0;
reg a_buffer_18_ce0;
reg a_buffer_19_ce0;
reg a_buffer_20_ce0;
reg a_buffer_21_ce0;
reg a_buffer_22_ce0;
reg a_buffer_23_ce0;
reg a_buffer_24_ce0;
reg a_buffer_25_ce0;
reg a_buffer_26_ce0;
reg a_buffer_27_ce0;
reg a_buffer_28_ce0;
reg a_buffer_29_ce0;
reg a_buffer_30_ce0;
reg a_buffer_31_ce0;
reg b_ce0;
reg result_ce0;
reg result_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] i_reg_734;
reg   [5:0] i1_reg_745;
wire   [0:0] exitcond3_fu_1008_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] i_1_fu_1014_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] tmp_8_fu_1025_p1;
reg   [4:0] tmp_8_reg_1571;
reg   [4:0] tmp_8_reg_1571_pp0_iter1_reg;
reg   [4:0] tmp_8_reg_1571_pp0_iter2_reg;
reg   [4:0] tmp_8_reg_1571_pp0_iter3_reg;
wire   [0:0] exitcond2_fu_1189_p2;
reg   [0:0] exitcond2_reg_1575;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
wire    ap_block_state13_pp1_stage0_iter5;
wire    ap_block_state14_pp1_stage0_iter6;
wire    ap_block_state15_pp1_stage0_iter7;
wire    ap_block_state16_pp1_stage0_iter8;
wire    ap_block_state17_pp1_stage0_iter9;
wire    ap_block_state18_pp1_stage0_iter10;
wire    ap_block_state19_pp1_stage0_iter11;
wire    ap_block_state20_pp1_stage0_iter12;
wire    ap_block_state21_pp1_stage0_iter13;
wire    ap_block_state22_pp1_stage0_iter14;
wire    ap_block_state23_pp1_stage0_iter15;
wire    ap_block_state24_pp1_stage0_iter16;
wire    ap_block_state25_pp1_stage0_iter17;
wire    ap_block_state26_pp1_stage0_iter18;
wire    ap_block_state27_pp1_stage0_iter19;
wire    ap_block_state28_pp1_stage0_iter20;
wire    ap_block_state29_pp1_stage0_iter21;
wire    ap_block_state30_pp1_stage0_iter22;
wire    ap_block_state31_pp1_stage0_iter23;
wire    ap_block_state32_pp1_stage0_iter24;
wire    ap_block_state33_pp1_stage0_iter25;
wire    ap_block_state34_pp1_stage0_iter26;
wire    ap_block_state35_pp1_stage0_iter27;
wire    ap_block_state36_pp1_stage0_iter28;
wire    ap_block_state37_pp1_stage0_iter29;
wire    ap_block_state38_pp1_stage0_iter30;
wire    ap_block_state39_pp1_stage0_iter31;
wire    ap_block_state40_pp1_stage0_iter32;
wire    ap_block_state41_pp1_stage0_iter33;
wire    ap_block_state42_pp1_stage0_iter34;
wire    ap_block_state43_pp1_stage0_iter35;
wire    ap_block_state44_pp1_stage0_iter36;
wire    ap_block_state45_pp1_stage0_iter37;
wire    ap_block_state46_pp1_stage0_iter38;
wire    ap_block_state47_pp1_stage0_iter39;
wire    ap_block_state48_pp1_stage0_iter40;
wire    ap_block_state49_pp1_stage0_iter41;
wire    ap_block_state50_pp1_stage0_iter42;
wire    ap_block_state51_pp1_stage0_iter43;
wire    ap_block_state52_pp1_stage0_iter44;
wire    ap_block_state53_pp1_stage0_iter45;
wire    ap_block_state54_pp1_stage0_iter46;
wire    ap_block_state55_pp1_stage0_iter47;
wire    ap_block_state56_pp1_stage0_iter48;
wire    ap_block_state57_pp1_stage0_iter49;
wire    ap_block_state58_pp1_stage0_iter50;
wire    ap_block_state59_pp1_stage0_iter51;
wire    ap_block_state60_pp1_stage0_iter52;
wire    ap_block_state61_pp1_stage0_iter53;
wire    ap_block_state62_pp1_stage0_iter54;
wire    ap_block_state63_pp1_stage0_iter55;
wire    ap_block_state64_pp1_stage0_iter56;
wire    ap_block_state65_pp1_stage0_iter57;
wire    ap_block_state66_pp1_stage0_iter58;
wire    ap_block_state67_pp1_stage0_iter59;
wire    ap_block_state68_pp1_stage0_iter60;
wire    ap_block_state69_pp1_stage0_iter61;
wire    ap_block_state70_pp1_stage0_iter62;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond2_reg_1575_pp1_iter1_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter2_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter3_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter4_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter5_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter6_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter7_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter8_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter9_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter10_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter11_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter12_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter13_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter14_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter15_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter16_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter17_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter18_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter19_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter20_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter21_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter22_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter23_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter24_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter25_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter26_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter27_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter28_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter29_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter30_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter31_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter32_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter33_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter34_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter35_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter36_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter37_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter38_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter39_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter40_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter41_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter42_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter43_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter44_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter45_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter46_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter47_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter48_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter49_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter50_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter51_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter52_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter53_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter54_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter55_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter56_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter57_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter58_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter59_reg;
reg   [0:0] exitcond2_reg_1575_pp1_iter60_reg;
wire   [5:0] i_2_fu_1195_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_2_fu_1201_p1;
reg   [63:0] tmp_2_reg_1584;
reg   [63:0] tmp_2_reg_1584_pp1_iter1_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter2_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter3_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter4_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter5_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter6_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter7_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter8_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter9_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter10_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter11_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter12_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter13_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter14_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter15_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter16_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter17_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter18_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter19_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter20_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter21_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter22_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter23_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter24_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter25_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter26_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter27_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter28_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter29_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter30_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter31_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter32_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter33_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter34_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter35_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter36_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter37_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter38_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter39_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter40_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter41_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter42_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter43_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter44_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter45_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter46_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter47_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter48_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter49_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter50_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter51_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter52_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter53_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter54_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter55_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter56_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter57_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter58_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter59_reg;
reg   [63:0] tmp_2_reg_1584_pp1_iter60_reg;
reg   [31:0] a_buffer_0_load_reg_1749;
reg   [31:0] a_buffer_1_load_reg_1754;
reg   [31:0] a_buffer_2_load_reg_1759;
reg   [31:0] a_buffer_3_load_reg_1764;
reg   [31:0] a_buffer_4_load_reg_1769;
reg   [31:0] a_buffer_5_load_reg_1774;
reg   [31:0] a_buffer_6_load_reg_1779;
reg   [31:0] a_buffer_7_load_reg_1784;
reg   [31:0] a_buffer_8_load_reg_1789;
reg   [31:0] a_buffer_9_load_reg_1794;
reg   [31:0] a_buffer_10_load_reg_1799;
reg   [31:0] a_buffer_11_load_reg_1804;
reg   [31:0] a_buffer_12_load_reg_1809;
reg   [31:0] a_buffer_13_load_reg_1814;
reg   [31:0] a_buffer_14_load_reg_1819;
reg   [31:0] a_buffer_15_load_reg_1824;
reg   [31:0] a_buffer_16_load_reg_1829;
reg   [31:0] a_buffer_17_load_reg_1834;
reg   [31:0] a_buffer_18_load_reg_1839;
reg   [31:0] a_buffer_19_load_reg_1844;
reg   [31:0] a_buffer_20_load_reg_1849;
reg   [31:0] a_buffer_21_load_reg_1854;
reg   [31:0] a_buffer_22_load_reg_1859;
reg   [31:0] a_buffer_23_load_reg_1864;
reg   [31:0] a_buffer_24_load_reg_1869;
reg   [31:0] a_buffer_25_load_reg_1874;
reg   [31:0] a_buffer_26_load_reg_1879;
reg   [31:0] a_buffer_27_load_reg_1884;
reg   [31:0] a_buffer_28_load_reg_1889;
reg   [31:0] a_buffer_29_load_reg_1894;
reg   [31:0] a_buffer_30_load_reg_1899;
reg   [31:0] a_buffer_31_load_reg_1904;
wire   [31:0] grp_fu_880_p2;
reg   [31:0] tmp_6_reg_2069;
wire   [31:0] grp_fu_884_p2;
reg   [31:0] tmp_6_1_reg_2074;
wire   [31:0] grp_fu_888_p2;
reg   [31:0] tmp_6_2_reg_2079;
wire   [31:0] grp_fu_892_p2;
reg   [31:0] tmp_6_3_reg_2084;
wire   [31:0] grp_fu_896_p2;
reg   [31:0] tmp_6_4_reg_2089;
wire   [31:0] grp_fu_900_p2;
reg   [31:0] tmp_6_5_reg_2094;
wire   [31:0] grp_fu_904_p2;
reg   [31:0] tmp_6_6_reg_2099;
wire   [31:0] grp_fu_908_p2;
reg   [31:0] tmp_6_7_reg_2104;
wire   [31:0] grp_fu_912_p2;
reg   [31:0] tmp_6_8_reg_2109;
wire   [31:0] grp_fu_916_p2;
reg   [31:0] tmp_6_9_reg_2114;
wire   [31:0] grp_fu_920_p2;
reg   [31:0] tmp_6_s_reg_2119;
wire   [31:0] grp_fu_924_p2;
reg   [31:0] tmp_6_10_reg_2124;
wire   [31:0] grp_fu_928_p2;
reg   [31:0] tmp_6_11_reg_2129;
wire   [31:0] grp_fu_932_p2;
reg   [31:0] tmp_6_12_reg_2134;
wire   [31:0] grp_fu_936_p2;
reg   [31:0] tmp_6_13_reg_2139;
wire   [31:0] grp_fu_940_p2;
reg   [31:0] tmp_6_14_reg_2144;
wire   [31:0] grp_fu_944_p2;
reg   [31:0] tmp_6_15_reg_2149;
wire   [31:0] grp_fu_948_p2;
reg   [31:0] tmp_6_16_reg_2154;
wire   [31:0] grp_fu_952_p2;
reg   [31:0] tmp_6_17_reg_2159;
wire   [31:0] grp_fu_956_p2;
reg   [31:0] tmp_6_18_reg_2164;
wire   [31:0] grp_fu_960_p2;
reg   [31:0] tmp_6_19_reg_2169;
wire   [31:0] grp_fu_964_p2;
reg   [31:0] tmp_6_20_reg_2174;
wire   [31:0] grp_fu_968_p2;
reg   [31:0] tmp_6_21_reg_2179;
wire   [31:0] grp_fu_972_p2;
reg   [31:0] tmp_6_22_reg_2184;
wire   [31:0] grp_fu_976_p2;
reg   [31:0] tmp_6_23_reg_2189;
wire   [31:0] grp_fu_980_p2;
reg   [31:0] tmp_6_24_reg_2194;
wire   [31:0] grp_fu_984_p2;
reg   [31:0] tmp_6_25_reg_2199;
wire   [31:0] grp_fu_988_p2;
reg   [31:0] tmp_6_26_reg_2204;
wire   [31:0] grp_fu_992_p2;
reg   [31:0] tmp_6_27_reg_2209;
wire   [31:0] grp_fu_996_p2;
reg   [31:0] tmp_6_28_reg_2214;
wire   [31:0] grp_fu_1000_p2;
reg   [31:0] tmp_6_29_reg_2219;
wire   [31:0] grp_fu_1004_p2;
reg   [31:0] tmp_6_30_reg_2224;
wire   [31:0] grp_fu_756_p2;
reg   [31:0] tmp_4_reg_2229;
wire   [31:0] grp_fu_760_p2;
reg   [31:0] tmp_4_1_reg_2234;
wire   [31:0] grp_fu_764_p2;
reg   [31:0] tmp_4_2_reg_2239;
wire   [31:0] grp_fu_768_p2;
reg   [31:0] tmp_4_3_reg_2244;
wire   [31:0] grp_fu_772_p2;
reg   [31:0] tmp_4_4_reg_2249;
wire   [31:0] grp_fu_776_p2;
reg   [31:0] tmp_4_5_reg_2254;
wire   [31:0] grp_fu_780_p2;
reg   [31:0] tmp_4_6_reg_2259;
wire   [31:0] grp_fu_784_p2;
reg   [31:0] tmp_4_7_reg_2264;
wire   [31:0] grp_fu_788_p2;
reg   [31:0] tmp_4_8_reg_2269;
wire   [31:0] grp_fu_792_p2;
reg   [31:0] tmp_4_9_reg_2274;
wire   [31:0] grp_fu_796_p2;
reg   [31:0] tmp_4_s_reg_2279;
wire   [31:0] grp_fu_800_p2;
reg   [31:0] tmp_4_10_reg_2284;
wire   [31:0] grp_fu_804_p2;
reg   [31:0] tmp_4_11_reg_2289;
wire   [31:0] grp_fu_808_p2;
reg   [31:0] tmp_4_12_reg_2294;
wire   [31:0] grp_fu_812_p2;
reg   [31:0] tmp_4_13_reg_2299;
wire   [31:0] grp_fu_816_p2;
reg   [31:0] tmp_4_14_reg_2304;
wire   [31:0] grp_fu_820_p2;
reg   [31:0] tmp_s_reg_2309;
wire   [31:0] grp_fu_824_p2;
reg   [31:0] tmp_14_1_reg_2314;
wire   [31:0] grp_fu_828_p2;
reg   [31:0] tmp_14_2_reg_2319;
wire   [31:0] grp_fu_832_p2;
reg   [31:0] tmp_14_3_reg_2324;
wire   [31:0] grp_fu_836_p2;
reg   [31:0] tmp_14_4_reg_2329;
wire   [31:0] grp_fu_840_p2;
reg   [31:0] tmp_14_5_reg_2334;
wire   [31:0] grp_fu_844_p2;
reg   [31:0] tmp_14_6_reg_2339;
wire   [31:0] grp_fu_848_p2;
reg   [31:0] tmp_14_7_reg_2344;
wire   [31:0] grp_fu_852_p2;
reg   [31:0] tmp_5_reg_2349;
wire   [31:0] grp_fu_856_p2;
reg   [31:0] tmp_20_1_reg_2354;
wire   [31:0] grp_fu_860_p2;
reg   [31:0] tmp_20_2_reg_2359;
wire   [31:0] grp_fu_864_p2;
reg   [31:0] tmp_20_3_reg_2364;
wire   [31:0] grp_fu_868_p2;
reg   [31:0] tmp_7_reg_2369;
wire   [31:0] grp_fu_872_p2;
reg   [31:0] tmp_26_1_reg_2374;
wire   [31:0] grp_fu_876_p2;
reg   [31:0] res_reg_2379;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_CS_fsm_state7;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter26;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter28;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter37;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg    ap_enable_reg_pp1_iter44;
reg    ap_enable_reg_pp1_iter45;
reg    ap_enable_reg_pp1_iter46;
reg    ap_enable_reg_pp1_iter47;
reg    ap_enable_reg_pp1_iter48;
reg    ap_enable_reg_pp1_iter49;
reg    ap_enable_reg_pp1_iter50;
reg    ap_enable_reg_pp1_iter51;
reg    ap_enable_reg_pp1_iter52;
reg    ap_enable_reg_pp1_iter53;
reg    ap_enable_reg_pp1_iter54;
reg    ap_enable_reg_pp1_iter55;
reg    ap_enable_reg_pp1_iter56;
reg    ap_enable_reg_pp1_iter57;
reg    ap_enable_reg_pp1_iter58;
reg    ap_enable_reg_pp1_iter59;
reg    ap_enable_reg_pp1_iter60;
reg    ap_enable_reg_pp1_iter61;
reg    ap_enable_reg_pp1_iter62;
wire   [63:0] tmp_fu_1020_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
reg   [31:0] b_local_31_fu_164;
reg   [31:0] b_local_31_1_fu_168;
reg   [31:0] b_local_31_2_fu_172;
reg   [31:0] b_local_31_3_fu_176;
reg   [31:0] b_local_31_4_fu_180;
reg   [31:0] b_local_31_5_fu_184;
reg   [31:0] b_local_31_6_fu_188;
reg   [31:0] b_local_31_7_fu_192;
reg   [31:0] b_local_31_8_fu_196;
reg   [31:0] b_local_31_9_fu_200;
reg   [31:0] b_local_31_10_fu_204;
reg   [31:0] b_local_31_11_fu_208;
reg   [31:0] b_local_31_12_fu_212;
reg   [31:0] b_local_31_13_fu_216;
reg   [31:0] b_local_31_14_fu_220;
reg   [31:0] b_local_31_15_fu_224;
reg   [31:0] b_local_31_16_fu_228;
reg   [31:0] b_local_31_17_fu_232;
reg   [31:0] b_local_31_18_fu_236;
reg   [31:0] b_local_31_19_fu_240;
reg   [31:0] b_local_31_20_fu_244;
reg   [31:0] b_local_31_21_fu_248;
reg   [31:0] b_local_31_22_fu_252;
reg   [31:0] b_local_31_23_fu_256;
reg   [31:0] b_local_31_24_fu_260;
reg   [31:0] b_local_31_25_fu_264;
reg   [31:0] b_local_31_26_fu_268;
reg   [31:0] b_local_31_27_fu_272;
reg   [31:0] b_local_31_28_fu_276;
reg   [31:0] b_local_31_29_fu_280;
reg   [31:0] b_local_31_30_fu_284;
reg   [31:0] b_local_31_31_fu_288;
wire    ap_CS_fsm_state71;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
#0 ap_enable_reg_pp1_iter44 = 1'b0;
#0 ap_enable_reg_pp1_iter45 = 1'b0;
#0 ap_enable_reg_pp1_iter46 = 1'b0;
#0 ap_enable_reg_pp1_iter47 = 1'b0;
#0 ap_enable_reg_pp1_iter48 = 1'b0;
#0 ap_enable_reg_pp1_iter49 = 1'b0;
#0 ap_enable_reg_pp1_iter50 = 1'b0;
#0 ap_enable_reg_pp1_iter51 = 1'b0;
#0 ap_enable_reg_pp1_iter52 = 1'b0;
#0 ap_enable_reg_pp1_iter53 = 1'b0;
#0 ap_enable_reg_pp1_iter54 = 1'b0;
#0 ap_enable_reg_pp1_iter55 = 1'b0;
#0 ap_enable_reg_pp1_iter56 = 1'b0;
#0 ap_enable_reg_pp1_iter57 = 1'b0;
#0 ap_enable_reg_pp1_iter58 = 1'b0;
#0 ap_enable_reg_pp1_iter59 = 1'b0;
#0 ap_enable_reg_pp1_iter60 = 1'b0;
#0 ap_enable_reg_pp1_iter61 = 1'b0;
#0 ap_enable_reg_pp1_iter62 = 1'b0;
end

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_1_reg_2074),
    .din1(tmp_6_reg_2069),
    .ce(1'b1),
    .dout(grp_fu_756_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_3_reg_2084),
    .din1(tmp_6_2_reg_2079),
    .ce(1'b1),
    .dout(grp_fu_760_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_5_reg_2094),
    .din1(tmp_6_4_reg_2089),
    .ce(1'b1),
    .dout(grp_fu_764_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_7_reg_2104),
    .din1(tmp_6_6_reg_2099),
    .ce(1'b1),
    .dout(grp_fu_768_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_9_reg_2114),
    .din1(tmp_6_8_reg_2109),
    .ce(1'b1),
    .dout(grp_fu_772_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_10_reg_2124),
    .din1(tmp_6_s_reg_2119),
    .ce(1'b1),
    .dout(grp_fu_776_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_12_reg_2134),
    .din1(tmp_6_11_reg_2129),
    .ce(1'b1),
    .dout(grp_fu_780_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_14_reg_2144),
    .din1(tmp_6_13_reg_2139),
    .ce(1'b1),
    .dout(grp_fu_784_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_16_reg_2154),
    .din1(tmp_6_15_reg_2149),
    .ce(1'b1),
    .dout(grp_fu_788_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_18_reg_2164),
    .din1(tmp_6_17_reg_2159),
    .ce(1'b1),
    .dout(grp_fu_792_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_20_reg_2174),
    .din1(tmp_6_19_reg_2169),
    .ce(1'b1),
    .dout(grp_fu_796_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_22_reg_2184),
    .din1(tmp_6_21_reg_2179),
    .ce(1'b1),
    .dout(grp_fu_800_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_24_reg_2194),
    .din1(tmp_6_23_reg_2189),
    .ce(1'b1),
    .dout(grp_fu_804_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_26_reg_2204),
    .din1(tmp_6_25_reg_2199),
    .ce(1'b1),
    .dout(grp_fu_808_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_28_reg_2214),
    .din1(tmp_6_27_reg_2209),
    .ce(1'b1),
    .dout(grp_fu_812_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_30_reg_2224),
    .din1(tmp_6_29_reg_2219),
    .ce(1'b1),
    .dout(grp_fu_816_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_1_reg_2234),
    .din1(tmp_4_reg_2229),
    .ce(1'b1),
    .dout(grp_fu_820_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_3_reg_2244),
    .din1(tmp_4_2_reg_2239),
    .ce(1'b1),
    .dout(grp_fu_824_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_5_reg_2254),
    .din1(tmp_4_4_reg_2249),
    .ce(1'b1),
    .dout(grp_fu_828_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_7_reg_2264),
    .din1(tmp_4_6_reg_2259),
    .ce(1'b1),
    .dout(grp_fu_832_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_9_reg_2274),
    .din1(tmp_4_8_reg_2269),
    .ce(1'b1),
    .dout(grp_fu_836_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_10_reg_2284),
    .din1(tmp_4_s_reg_2279),
    .ce(1'b1),
    .dout(grp_fu_840_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_12_reg_2294),
    .din1(tmp_4_11_reg_2289),
    .ce(1'b1),
    .dout(grp_fu_844_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_14_reg_2304),
    .din1(tmp_4_13_reg_2299),
    .ce(1'b1),
    .dout(grp_fu_848_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_1_reg_2314),
    .din1(tmp_s_reg_2309),
    .ce(1'b1),
    .dout(grp_fu_852_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_3_reg_2324),
    .din1(tmp_14_2_reg_2319),
    .ce(1'b1),
    .dout(grp_fu_856_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_5_reg_2334),
    .din1(tmp_14_4_reg_2329),
    .ce(1'b1),
    .dout(grp_fu_860_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_7_reg_2344),
    .din1(tmp_14_6_reg_2339),
    .ce(1'b1),
    .dout(grp_fu_864_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_1_reg_2354),
    .din1(tmp_5_reg_2349),
    .ce(1'b1),
    .dout(grp_fu_868_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_3_reg_2364),
    .din1(tmp_20_2_reg_2359),
    .ce(1'b1),
    .dout(grp_fu_872_p2)
);

mmult_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fadd_32ns_3bkb_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_26_1_reg_2374),
    .din1(tmp_7_reg_2369),
    .ce(1'b1),
    .dout(grp_fu_876_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_0_load_reg_1749),
    .din1(b_local_31_fu_164),
    .ce(1'b1),
    .dout(grp_fu_880_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_1_load_reg_1754),
    .din1(b_local_31_1_fu_168),
    .ce(1'b1),
    .dout(grp_fu_884_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_2_load_reg_1759),
    .din1(b_local_31_2_fu_172),
    .ce(1'b1),
    .dout(grp_fu_888_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_3_load_reg_1764),
    .din1(b_local_31_3_fu_176),
    .ce(1'b1),
    .dout(grp_fu_892_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_4_load_reg_1769),
    .din1(b_local_31_4_fu_180),
    .ce(1'b1),
    .dout(grp_fu_896_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_5_load_reg_1774),
    .din1(b_local_31_5_fu_184),
    .ce(1'b1),
    .dout(grp_fu_900_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_6_load_reg_1779),
    .din1(b_local_31_6_fu_188),
    .ce(1'b1),
    .dout(grp_fu_904_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_7_load_reg_1784),
    .din1(b_local_31_7_fu_192),
    .ce(1'b1),
    .dout(grp_fu_908_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_8_load_reg_1789),
    .din1(b_local_31_8_fu_196),
    .ce(1'b1),
    .dout(grp_fu_912_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_9_load_reg_1794),
    .din1(b_local_31_9_fu_200),
    .ce(1'b1),
    .dout(grp_fu_916_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_10_load_reg_1799),
    .din1(b_local_31_10_fu_204),
    .ce(1'b1),
    .dout(grp_fu_920_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_11_load_reg_1804),
    .din1(b_local_31_11_fu_208),
    .ce(1'b1),
    .dout(grp_fu_924_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_12_load_reg_1809),
    .din1(b_local_31_12_fu_212),
    .ce(1'b1),
    .dout(grp_fu_928_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_13_load_reg_1814),
    .din1(b_local_31_13_fu_216),
    .ce(1'b1),
    .dout(grp_fu_932_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_14_load_reg_1819),
    .din1(b_local_31_14_fu_220),
    .ce(1'b1),
    .dout(grp_fu_936_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_15_load_reg_1824),
    .din1(b_local_31_15_fu_224),
    .ce(1'b1),
    .dout(grp_fu_940_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_16_load_reg_1829),
    .din1(b_local_31_16_fu_228),
    .ce(1'b1),
    .dout(grp_fu_944_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_17_load_reg_1834),
    .din1(b_local_31_17_fu_232),
    .ce(1'b1),
    .dout(grp_fu_948_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_18_load_reg_1839),
    .din1(b_local_31_18_fu_236),
    .ce(1'b1),
    .dout(grp_fu_952_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_19_load_reg_1844),
    .din1(b_local_31_19_fu_240),
    .ce(1'b1),
    .dout(grp_fu_956_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_20_load_reg_1849),
    .din1(b_local_31_20_fu_244),
    .ce(1'b1),
    .dout(grp_fu_960_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_21_load_reg_1854),
    .din1(b_local_31_21_fu_248),
    .ce(1'b1),
    .dout(grp_fu_964_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_22_load_reg_1859),
    .din1(b_local_31_22_fu_252),
    .ce(1'b1),
    .dout(grp_fu_968_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_23_load_reg_1864),
    .din1(b_local_31_23_fu_256),
    .ce(1'b1),
    .dout(grp_fu_972_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_24_load_reg_1869),
    .din1(b_local_31_24_fu_260),
    .ce(1'b1),
    .dout(grp_fu_976_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_25_load_reg_1874),
    .din1(b_local_31_25_fu_264),
    .ce(1'b1),
    .dout(grp_fu_980_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_26_load_reg_1879),
    .din1(b_local_31_26_fu_268),
    .ce(1'b1),
    .dout(grp_fu_984_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_27_load_reg_1884),
    .din1(b_local_31_27_fu_272),
    .ce(1'b1),
    .dout(grp_fu_988_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_28_load_reg_1889),
    .din1(b_local_31_28_fu_276),
    .ce(1'b1),
    .dout(grp_fu_992_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_29_load_reg_1894),
    .din1(b_local_31_29_fu_280),
    .ce(1'b1),
    .dout(grp_fu_996_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_30_load_reg_1899),
    .din1(b_local_31_30_fu_284),
    .ce(1'b1),
    .dout(grp_fu_1000_p2)
);

mmult_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mmult_fmul_32ns_3cud_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_buffer_31_load_reg_1904),
    .din1(b_local_31_31_fu_288),
    .ce(1'b1),
    .dout(grp_fu_1004_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter47 <= ap_enable_reg_pp1_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter48 <= ap_enable_reg_pp1_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter49 <= ap_enable_reg_pp1_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter50 <= ap_enable_reg_pp1_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter51 <= ap_enable_reg_pp1_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter52 <= ap_enable_reg_pp1_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter53 <= ap_enable_reg_pp1_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter54 <= ap_enable_reg_pp1_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter55 <= ap_enable_reg_pp1_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter56 <= ap_enable_reg_pp1_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter57 <= ap_enable_reg_pp1_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter58 <= ap_enable_reg_pp1_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter59 <= ap_enable_reg_pp1_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter60 <= ap_enable_reg_pp1_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter61 <= ap_enable_reg_pp1_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter62 <= ap_enable_reg_pp1_iter61;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter62 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i1_reg_745 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_fu_1189_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_reg_745 <= i_2_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_fu_1008_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_734 <= i_1_fu_1014_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_734 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter3_reg == 1'd0))) begin
        a_buffer_0_load_reg_1749 <= a_buffer_0_q0;
        a_buffer_10_load_reg_1799 <= a_buffer_10_q0;
        a_buffer_11_load_reg_1804 <= a_buffer_11_q0;
        a_buffer_12_load_reg_1809 <= a_buffer_12_q0;
        a_buffer_13_load_reg_1814 <= a_buffer_13_q0;
        a_buffer_14_load_reg_1819 <= a_buffer_14_q0;
        a_buffer_15_load_reg_1824 <= a_buffer_15_q0;
        a_buffer_16_load_reg_1829 <= a_buffer_16_q0;
        a_buffer_17_load_reg_1834 <= a_buffer_17_q0;
        a_buffer_18_load_reg_1839 <= a_buffer_18_q0;
        a_buffer_19_load_reg_1844 <= a_buffer_19_q0;
        a_buffer_1_load_reg_1754 <= a_buffer_1_q0;
        a_buffer_20_load_reg_1849 <= a_buffer_20_q0;
        a_buffer_21_load_reg_1854 <= a_buffer_21_q0;
        a_buffer_22_load_reg_1859 <= a_buffer_22_q0;
        a_buffer_23_load_reg_1864 <= a_buffer_23_q0;
        a_buffer_24_load_reg_1869 <= a_buffer_24_q0;
        a_buffer_25_load_reg_1874 <= a_buffer_25_q0;
        a_buffer_26_load_reg_1879 <= a_buffer_26_q0;
        a_buffer_27_load_reg_1884 <= a_buffer_27_q0;
        a_buffer_28_load_reg_1889 <= a_buffer_28_q0;
        a_buffer_29_load_reg_1894 <= a_buffer_29_q0;
        a_buffer_2_load_reg_1759 <= a_buffer_2_q0;
        a_buffer_30_load_reg_1899 <= a_buffer_30_q0;
        a_buffer_31_load_reg_1904 <= a_buffer_31_q0;
        a_buffer_3_load_reg_1764 <= a_buffer_3_q0;
        a_buffer_4_load_reg_1769 <= a_buffer_4_q0;
        a_buffer_5_load_reg_1774 <= a_buffer_5_q0;
        a_buffer_6_load_reg_1779 <= a_buffer_6_q0;
        a_buffer_7_load_reg_1784 <= a_buffer_7_q0;
        a_buffer_8_load_reg_1789 <= a_buffer_8_q0;
        a_buffer_9_load_reg_1794 <= a_buffer_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_10_fu_204 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_11_fu_208 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_12_fu_212 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_13_fu_216 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_14_fu_220 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_15_fu_224 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_16_fu_228 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_17_fu_232 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_18_fu_236 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_19_fu_240 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_1_fu_168 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_20_fu_244 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_21_fu_248 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_22_fu_252 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_23_fu_256 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_24_fu_260 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_25_fu_264 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_26_fu_268 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_27_fu_272 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_28_fu_276 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_29_fu_280 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_2_fu_172 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_30_fu_284 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_31_fu_288 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_3_fu_176 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_4_fu_180 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_5_fu_184 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_6_fu_188 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_7_fu_192 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_8_fu_196 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_9_fu_200 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1571_pp0_iter3_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        b_local_31_fu_164 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond2_reg_1575 <= exitcond2_fu_1189_p2;
        exitcond2_reg_1575_pp1_iter1_reg <= exitcond2_reg_1575;
        tmp_2_reg_1584_pp1_iter1_reg[5 : 0] <= tmp_2_reg_1584[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond2_reg_1575_pp1_iter10_reg <= exitcond2_reg_1575_pp1_iter9_reg;
        exitcond2_reg_1575_pp1_iter11_reg <= exitcond2_reg_1575_pp1_iter10_reg;
        exitcond2_reg_1575_pp1_iter12_reg <= exitcond2_reg_1575_pp1_iter11_reg;
        exitcond2_reg_1575_pp1_iter13_reg <= exitcond2_reg_1575_pp1_iter12_reg;
        exitcond2_reg_1575_pp1_iter14_reg <= exitcond2_reg_1575_pp1_iter13_reg;
        exitcond2_reg_1575_pp1_iter15_reg <= exitcond2_reg_1575_pp1_iter14_reg;
        exitcond2_reg_1575_pp1_iter16_reg <= exitcond2_reg_1575_pp1_iter15_reg;
        exitcond2_reg_1575_pp1_iter17_reg <= exitcond2_reg_1575_pp1_iter16_reg;
        exitcond2_reg_1575_pp1_iter18_reg <= exitcond2_reg_1575_pp1_iter17_reg;
        exitcond2_reg_1575_pp1_iter19_reg <= exitcond2_reg_1575_pp1_iter18_reg;
        exitcond2_reg_1575_pp1_iter20_reg <= exitcond2_reg_1575_pp1_iter19_reg;
        exitcond2_reg_1575_pp1_iter21_reg <= exitcond2_reg_1575_pp1_iter20_reg;
        exitcond2_reg_1575_pp1_iter22_reg <= exitcond2_reg_1575_pp1_iter21_reg;
        exitcond2_reg_1575_pp1_iter23_reg <= exitcond2_reg_1575_pp1_iter22_reg;
        exitcond2_reg_1575_pp1_iter24_reg <= exitcond2_reg_1575_pp1_iter23_reg;
        exitcond2_reg_1575_pp1_iter25_reg <= exitcond2_reg_1575_pp1_iter24_reg;
        exitcond2_reg_1575_pp1_iter26_reg <= exitcond2_reg_1575_pp1_iter25_reg;
        exitcond2_reg_1575_pp1_iter27_reg <= exitcond2_reg_1575_pp1_iter26_reg;
        exitcond2_reg_1575_pp1_iter28_reg <= exitcond2_reg_1575_pp1_iter27_reg;
        exitcond2_reg_1575_pp1_iter29_reg <= exitcond2_reg_1575_pp1_iter28_reg;
        exitcond2_reg_1575_pp1_iter2_reg <= exitcond2_reg_1575_pp1_iter1_reg;
        exitcond2_reg_1575_pp1_iter30_reg <= exitcond2_reg_1575_pp1_iter29_reg;
        exitcond2_reg_1575_pp1_iter31_reg <= exitcond2_reg_1575_pp1_iter30_reg;
        exitcond2_reg_1575_pp1_iter32_reg <= exitcond2_reg_1575_pp1_iter31_reg;
        exitcond2_reg_1575_pp1_iter33_reg <= exitcond2_reg_1575_pp1_iter32_reg;
        exitcond2_reg_1575_pp1_iter34_reg <= exitcond2_reg_1575_pp1_iter33_reg;
        exitcond2_reg_1575_pp1_iter35_reg <= exitcond2_reg_1575_pp1_iter34_reg;
        exitcond2_reg_1575_pp1_iter36_reg <= exitcond2_reg_1575_pp1_iter35_reg;
        exitcond2_reg_1575_pp1_iter37_reg <= exitcond2_reg_1575_pp1_iter36_reg;
        exitcond2_reg_1575_pp1_iter38_reg <= exitcond2_reg_1575_pp1_iter37_reg;
        exitcond2_reg_1575_pp1_iter39_reg <= exitcond2_reg_1575_pp1_iter38_reg;
        exitcond2_reg_1575_pp1_iter3_reg <= exitcond2_reg_1575_pp1_iter2_reg;
        exitcond2_reg_1575_pp1_iter40_reg <= exitcond2_reg_1575_pp1_iter39_reg;
        exitcond2_reg_1575_pp1_iter41_reg <= exitcond2_reg_1575_pp1_iter40_reg;
        exitcond2_reg_1575_pp1_iter42_reg <= exitcond2_reg_1575_pp1_iter41_reg;
        exitcond2_reg_1575_pp1_iter43_reg <= exitcond2_reg_1575_pp1_iter42_reg;
        exitcond2_reg_1575_pp1_iter44_reg <= exitcond2_reg_1575_pp1_iter43_reg;
        exitcond2_reg_1575_pp1_iter45_reg <= exitcond2_reg_1575_pp1_iter44_reg;
        exitcond2_reg_1575_pp1_iter46_reg <= exitcond2_reg_1575_pp1_iter45_reg;
        exitcond2_reg_1575_pp1_iter47_reg <= exitcond2_reg_1575_pp1_iter46_reg;
        exitcond2_reg_1575_pp1_iter48_reg <= exitcond2_reg_1575_pp1_iter47_reg;
        exitcond2_reg_1575_pp1_iter49_reg <= exitcond2_reg_1575_pp1_iter48_reg;
        exitcond2_reg_1575_pp1_iter4_reg <= exitcond2_reg_1575_pp1_iter3_reg;
        exitcond2_reg_1575_pp1_iter50_reg <= exitcond2_reg_1575_pp1_iter49_reg;
        exitcond2_reg_1575_pp1_iter51_reg <= exitcond2_reg_1575_pp1_iter50_reg;
        exitcond2_reg_1575_pp1_iter52_reg <= exitcond2_reg_1575_pp1_iter51_reg;
        exitcond2_reg_1575_pp1_iter53_reg <= exitcond2_reg_1575_pp1_iter52_reg;
        exitcond2_reg_1575_pp1_iter54_reg <= exitcond2_reg_1575_pp1_iter53_reg;
        exitcond2_reg_1575_pp1_iter55_reg <= exitcond2_reg_1575_pp1_iter54_reg;
        exitcond2_reg_1575_pp1_iter56_reg <= exitcond2_reg_1575_pp1_iter55_reg;
        exitcond2_reg_1575_pp1_iter57_reg <= exitcond2_reg_1575_pp1_iter56_reg;
        exitcond2_reg_1575_pp1_iter58_reg <= exitcond2_reg_1575_pp1_iter57_reg;
        exitcond2_reg_1575_pp1_iter59_reg <= exitcond2_reg_1575_pp1_iter58_reg;
        exitcond2_reg_1575_pp1_iter5_reg <= exitcond2_reg_1575_pp1_iter4_reg;
        exitcond2_reg_1575_pp1_iter60_reg <= exitcond2_reg_1575_pp1_iter59_reg;
        exitcond2_reg_1575_pp1_iter6_reg <= exitcond2_reg_1575_pp1_iter5_reg;
        exitcond2_reg_1575_pp1_iter7_reg <= exitcond2_reg_1575_pp1_iter6_reg;
        exitcond2_reg_1575_pp1_iter8_reg <= exitcond2_reg_1575_pp1_iter7_reg;
        exitcond2_reg_1575_pp1_iter9_reg <= exitcond2_reg_1575_pp1_iter8_reg;
        tmp_2_reg_1584_pp1_iter10_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter9_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter11_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter10_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter12_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter11_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter13_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter12_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter14_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter13_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter15_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter14_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter16_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter15_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter17_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter16_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter18_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter17_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter19_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter18_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter20_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter19_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter21_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter20_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter22_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter21_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter23_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter22_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter24_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter23_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter25_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter24_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter26_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter25_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter27_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter26_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter28_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter27_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter29_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter28_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter2_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter1_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter30_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter29_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter31_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter30_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter32_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter31_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter33_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter32_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter34_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter33_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter35_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter34_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter36_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter35_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter37_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter36_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter38_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter37_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter39_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter38_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter3_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter2_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter40_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter39_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter41_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter40_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter42_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter41_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter43_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter42_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter44_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter43_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter45_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter44_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter46_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter45_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter47_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter46_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter48_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter47_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter49_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter48_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter4_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter3_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter50_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter49_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter51_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter50_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter52_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter51_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter53_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter52_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter54_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter53_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter55_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter54_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter56_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter55_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter57_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter56_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter58_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter57_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter59_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter58_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter5_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter4_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter60_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter59_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter6_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter5_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter7_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter6_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter8_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter7_reg[5 : 0];
        tmp_2_reg_1584_pp1_iter9_reg[5 : 0] <= tmp_2_reg_1584_pp1_iter8_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter59_reg == 1'd0))) begin
        res_reg_2379 <= grp_fu_876_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter29_reg == 1'd0))) begin
        tmp_14_1_reg_2314 <= grp_fu_824_p2;
        tmp_14_2_reg_2319 <= grp_fu_828_p2;
        tmp_14_3_reg_2324 <= grp_fu_832_p2;
        tmp_14_4_reg_2329 <= grp_fu_836_p2;
        tmp_14_5_reg_2334 <= grp_fu_840_p2;
        tmp_14_6_reg_2339 <= grp_fu_844_p2;
        tmp_14_7_reg_2344 <= grp_fu_848_p2;
        tmp_s_reg_2309 <= grp_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter39_reg == 1'd0))) begin
        tmp_20_1_reg_2354 <= grp_fu_856_p2;
        tmp_20_2_reg_2359 <= grp_fu_860_p2;
        tmp_20_3_reg_2364 <= grp_fu_864_p2;
        tmp_5_reg_2349 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter49_reg == 1'd0))) begin
        tmp_26_1_reg_2374 <= grp_fu_872_p2;
        tmp_7_reg_2369 <= grp_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_fu_1189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_2_reg_1584[5 : 0] <= tmp_2_fu_1201_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter19_reg == 1'd0))) begin
        tmp_4_10_reg_2284 <= grp_fu_800_p2;
        tmp_4_11_reg_2289 <= grp_fu_804_p2;
        tmp_4_12_reg_2294 <= grp_fu_808_p2;
        tmp_4_13_reg_2299 <= grp_fu_812_p2;
        tmp_4_14_reg_2304 <= grp_fu_816_p2;
        tmp_4_1_reg_2234 <= grp_fu_760_p2;
        tmp_4_2_reg_2239 <= grp_fu_764_p2;
        tmp_4_3_reg_2244 <= grp_fu_768_p2;
        tmp_4_4_reg_2249 <= grp_fu_772_p2;
        tmp_4_5_reg_2254 <= grp_fu_776_p2;
        tmp_4_6_reg_2259 <= grp_fu_780_p2;
        tmp_4_7_reg_2264 <= grp_fu_784_p2;
        tmp_4_8_reg_2269 <= grp_fu_788_p2;
        tmp_4_9_reg_2274 <= grp_fu_792_p2;
        tmp_4_reg_2229 <= grp_fu_756_p2;
        tmp_4_s_reg_2279 <= grp_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter9_reg == 1'd0))) begin
        tmp_6_10_reg_2124 <= grp_fu_924_p2;
        tmp_6_11_reg_2129 <= grp_fu_928_p2;
        tmp_6_12_reg_2134 <= grp_fu_932_p2;
        tmp_6_13_reg_2139 <= grp_fu_936_p2;
        tmp_6_14_reg_2144 <= grp_fu_940_p2;
        tmp_6_15_reg_2149 <= grp_fu_944_p2;
        tmp_6_16_reg_2154 <= grp_fu_948_p2;
        tmp_6_17_reg_2159 <= grp_fu_952_p2;
        tmp_6_18_reg_2164 <= grp_fu_956_p2;
        tmp_6_19_reg_2169 <= grp_fu_960_p2;
        tmp_6_1_reg_2074 <= grp_fu_884_p2;
        tmp_6_20_reg_2174 <= grp_fu_964_p2;
        tmp_6_21_reg_2179 <= grp_fu_968_p2;
        tmp_6_22_reg_2184 <= grp_fu_972_p2;
        tmp_6_23_reg_2189 <= grp_fu_976_p2;
        tmp_6_24_reg_2194 <= grp_fu_980_p2;
        tmp_6_25_reg_2199 <= grp_fu_984_p2;
        tmp_6_26_reg_2204 <= grp_fu_988_p2;
        tmp_6_27_reg_2209 <= grp_fu_992_p2;
        tmp_6_28_reg_2214 <= grp_fu_996_p2;
        tmp_6_29_reg_2219 <= grp_fu_1000_p2;
        tmp_6_2_reg_2079 <= grp_fu_888_p2;
        tmp_6_30_reg_2224 <= grp_fu_1004_p2;
        tmp_6_3_reg_2084 <= grp_fu_892_p2;
        tmp_6_4_reg_2089 <= grp_fu_896_p2;
        tmp_6_5_reg_2094 <= grp_fu_900_p2;
        tmp_6_6_reg_2099 <= grp_fu_904_p2;
        tmp_6_7_reg_2104 <= grp_fu_908_p2;
        tmp_6_8_reg_2109 <= grp_fu_912_p2;
        tmp_6_9_reg_2114 <= grp_fu_916_p2;
        tmp_6_reg_2069 <= grp_fu_880_p2;
        tmp_6_s_reg_2119 <= grp_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_fu_1008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_8_reg_1571 <= tmp_8_fu_1025_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_8_reg_1571_pp0_iter1_reg <= tmp_8_reg_1571;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_8_reg_1571_pp0_iter2_reg <= tmp_8_reg_1571_pp0_iter1_reg;
        tmp_8_reg_1571_pp0_iter3_reg <= tmp_8_reg_1571_pp0_iter2_reg;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_0_ce0 = 1'b1;
    end else begin
        a_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_10_ce0 = 1'b1;
    end else begin
        a_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_11_ce0 = 1'b1;
    end else begin
        a_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_12_ce0 = 1'b1;
    end else begin
        a_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_13_ce0 = 1'b1;
    end else begin
        a_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_14_ce0 = 1'b1;
    end else begin
        a_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_15_ce0 = 1'b1;
    end else begin
        a_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_16_ce0 = 1'b1;
    end else begin
        a_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_17_ce0 = 1'b1;
    end else begin
        a_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_18_ce0 = 1'b1;
    end else begin
        a_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_19_ce0 = 1'b1;
    end else begin
        a_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_1_ce0 = 1'b1;
    end else begin
        a_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_20_ce0 = 1'b1;
    end else begin
        a_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_21_ce0 = 1'b1;
    end else begin
        a_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_22_ce0 = 1'b1;
    end else begin
        a_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_23_ce0 = 1'b1;
    end else begin
        a_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_24_ce0 = 1'b1;
    end else begin
        a_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_25_ce0 = 1'b1;
    end else begin
        a_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_26_ce0 = 1'b1;
    end else begin
        a_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_27_ce0 = 1'b1;
    end else begin
        a_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_28_ce0 = 1'b1;
    end else begin
        a_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_29_ce0 = 1'b1;
    end else begin
        a_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_2_ce0 = 1'b1;
    end else begin
        a_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_30_ce0 = 1'b1;
    end else begin
        a_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_31_ce0 = 1'b1;
    end else begin
        a_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_3_ce0 = 1'b1;
    end else begin
        a_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_4_ce0 = 1'b1;
    end else begin
        a_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_5_ce0 = 1'b1;
    end else begin
        a_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_6_ce0 = 1'b1;
    end else begin
        a_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_7_ce0 = 1'b1;
    end else begin
        a_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_8_ce0 = 1'b1;
    end else begin
        a_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        a_buffer_9_ce0 = 1'b1;
    end else begin
        a_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1008_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1189_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter62 == 1'b0) & (ap_enable_reg_pp1_iter61 == 1'b0) & (ap_enable_reg_pp1_iter60 == 1'b0) & (ap_enable_reg_pp1_iter59 == 1'b0) & (ap_enable_reg_pp1_iter58 == 1'b0) & (ap_enable_reg_pp1_iter57 == 1'b0) & (ap_enable_reg_pp1_iter56 == 1'b0) & (ap_enable_reg_pp1_iter55 == 1'b0) & (ap_enable_reg_pp1_iter54 == 1'b0) & (ap_enable_reg_pp1_iter53 == 1'b0) & (ap_enable_reg_pp1_iter52 == 1'b0) & (ap_enable_reg_pp1_iter51 == 1'b0) & (ap_enable_reg_pp1_iter50 == 1'b0) & (ap_enable_reg_pp1_iter49 == 1'b0) & (ap_enable_reg_pp1_iter48 == 1'b0) & (ap_enable_reg_pp1_iter47 == 1'b0) & (ap_enable_reg_pp1_iter46 == 1'b0) & (ap_enable_reg_pp1_iter45 == 1'b0) & (ap_enable_reg_pp1_iter44 == 1'b0) & (ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter62 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter61 == 1'b1)))) begin
        result_ce0 = 1'b1;
    end else begin
        result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond2_reg_1575_pp1_iter60_reg == 1'd0) & (ap_enable_reg_pp1_iter61 == 1'b1))) begin
        result_we0 = 1'b1;
    end else begin
        result_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond3_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond3_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond2_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter62 == 1'b1) & (ap_enable_reg_pp1_iter61 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((exitcond2_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter62 == 1'b1) & (ap_enable_reg_pp1_iter61 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_buffer_0_address0 = tmp_2_fu_1201_p1;

assign a_buffer_10_address0 = tmp_2_fu_1201_p1;

assign a_buffer_11_address0 = tmp_2_fu_1201_p1;

assign a_buffer_12_address0 = tmp_2_fu_1201_p1;

assign a_buffer_13_address0 = tmp_2_fu_1201_p1;

assign a_buffer_14_address0 = tmp_2_fu_1201_p1;

assign a_buffer_15_address0 = tmp_2_fu_1201_p1;

assign a_buffer_16_address0 = tmp_2_fu_1201_p1;

assign a_buffer_17_address0 = tmp_2_fu_1201_p1;

assign a_buffer_18_address0 = tmp_2_fu_1201_p1;

assign a_buffer_19_address0 = tmp_2_fu_1201_p1;

assign a_buffer_1_address0 = tmp_2_fu_1201_p1;

assign a_buffer_20_address0 = tmp_2_fu_1201_p1;

assign a_buffer_21_address0 = tmp_2_fu_1201_p1;

assign a_buffer_22_address0 = tmp_2_fu_1201_p1;

assign a_buffer_23_address0 = tmp_2_fu_1201_p1;

assign a_buffer_24_address0 = tmp_2_fu_1201_p1;

assign a_buffer_25_address0 = tmp_2_fu_1201_p1;

assign a_buffer_26_address0 = tmp_2_fu_1201_p1;

assign a_buffer_27_address0 = tmp_2_fu_1201_p1;

assign a_buffer_28_address0 = tmp_2_fu_1201_p1;

assign a_buffer_29_address0 = tmp_2_fu_1201_p1;

assign a_buffer_2_address0 = tmp_2_fu_1201_p1;

assign a_buffer_30_address0 = tmp_2_fu_1201_p1;

assign a_buffer_31_address0 = tmp_2_fu_1201_p1;

assign a_buffer_3_address0 = tmp_2_fu_1201_p1;

assign a_buffer_4_address0 = tmp_2_fu_1201_p1;

assign a_buffer_5_address0 = tmp_2_fu_1201_p1;

assign a_buffer_6_address0 = tmp_2_fu_1201_p1;

assign a_buffer_7_address0 = tmp_2_fu_1201_p1;

assign a_buffer_8_address0 = tmp_2_fu_1201_p1;

assign a_buffer_9_address0 = tmp_2_fu_1201_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp1_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp1_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp1_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp1_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign b_address0 = tmp_fu_1020_p1;

assign exitcond2_fu_1189_p2 = ((i1_reg_745 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond3_fu_1008_p2 = ((i_reg_734 == 6'd32) ? 1'b1 : 1'b0);

assign i_1_fu_1014_p2 = (i_reg_734 + 6'd1);

assign i_2_fu_1195_p2 = (i1_reg_745 + 6'd1);

assign result_address0 = tmp_2_reg_1584_pp1_iter60_reg;

assign result_d0 = res_reg_2379;

assign tmp_2_fu_1201_p1 = i1_reg_745;

assign tmp_8_fu_1025_p1 = i_reg_734[4:0];

assign tmp_fu_1020_p1 = i_reg_734;

always @ (posedge ap_clk) begin
    tmp_2_reg_1584[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter9_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter10_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter11_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter12_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter13_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter14_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter15_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter16_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter17_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter18_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter19_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter20_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter21_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter22_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter23_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter24_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter25_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter26_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter27_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter28_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter29_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter30_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter31_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter32_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter33_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter34_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter35_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter36_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter37_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter38_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter39_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter40_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter41_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter42_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter43_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter44_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter45_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter46_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter47_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter48_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter49_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter50_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter51_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter52_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter53_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter54_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter55_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter56_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter57_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter58_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter59_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_1584_pp1_iter60_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //vector_dot_wrapper
